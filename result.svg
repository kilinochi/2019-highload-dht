<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (85,322 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>[unknown] (1,674 samples, 1.96%)</title><rect x="10.1" y="323.0" width="23.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.1" y="334.0">[..</text>
</g>
<g>
<title>__libc_accept (1,673 samples, 1.96%)</title><rect x="10.1" y="307.0" width="23.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.1" y="318.0">_..</text>
</g>
<g>
<title>__GI___pthread_timedjoin_ex (1,673 samples, 1.96%)</title><rect x="33.3" y="323.0" width="23.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="36.3" y="334.0">_..</text>
</g>
<g>
<title>__pthread_cond_timedwait (10,035 samples, 11.76%)</title><rect x="56.5" y="323.0" width="138.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="59.5" y="334.0">__pthread_cond_ti..</text>
</g>
<g>
<title>__pthread_cond_wait (15,056 samples, 17.65%)</title><rect x="195.3" y="323.0" width="208.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="198.3" y="334.0">__pthread_cond_wait</text>
</g>
<g>
<title>do_futex_wait.constprop.1 (18,388 samples, 21.55%)</title><rect x="403.5" y="323.0" width="254.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="406.5" y="334.0">do_futex_wait.constprop.1</text>
</g>
<g>
<title>java/lang/Thread.run (15,049 samples, 17.64%)</title><rect x="657.8" y="323.0" width="208.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.8" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13,377 samples, 15.68%)</title><rect x="657.8" y="307.0" width="185.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.8" y="318.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13,377 samples, 15.68%)</title><rect x="657.8" y="291.0" width="185.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.8" y="302.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12,922 samples, 15.14%)</title><rect x="657.8" y="275.0" width="178.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.8" y="286.0">java/util/concurrent/Th..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (12,922 samples, 15.14%)</title><rect x="657.8" y="259.0" width="178.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.8" y="270.0">java/util/concurrent/Sy..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12,922 samples, 15.14%)</title><rect x="657.8" y="243.0" width="178.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.8" y="254.0">java/util/concurrent/Sy..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (12,108 samples, 14.19%)</title><rect x="657.9" y="227.0" width="167.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.9" y="238.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12,106 samples, 14.19%)</title><rect x="657.9" y="211.0" width="167.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.9" y="222.0">java/util/concurrent/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12,106 samples, 14.19%)</title><rect x="657.9" y="195.0" width="167.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.9" y="206.0">jdk/internal/misc/Uns..</text>
</g>
<g>
<title>Unsafe_Park (21 samples, 0.02%)</title><rect x="657.9" y="179.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="660.9" y="190.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12,083 samples, 14.16%)</title><rect x="658.2" y="179.0" width="167.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="661.2" y="190.0">__pthread_cond_wait</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (789 samples, 0.92%)</title><rect x="825.3" y="227.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (787 samples, 0.92%)</title><rect x="825.4" y="211.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (784 samples, 0.92%)</title><rect x="825.4" y="195.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (22 samples, 0.03%)</title><rect x="836.2" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$60/570298095.run (451 samples, 0.53%)</title><rect x="836.5" y="275.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$asyncExecute$3 (451 samples, 0.53%)</title><rect x="836.5" y="259.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/utils/ResponseUtils.sendResponse (403 samples, 0.47%)</title><rect x="836.5" y="243.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (400 samples, 0.47%)</title><rect x="836.6" y="227.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (390 samples, 0.46%)</title><rect x="836.7" y="211.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (377 samples, 0.44%)</title><rect x="836.9" y="195.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (377 samples, 0.44%)</title><rect x="836.9" y="179.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.9" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (374 samples, 0.44%)</title><rect x="836.9" y="163.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (373 samples, 0.44%)</title><rect x="836.9" y="147.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.9" y="158.0"></text>
</g>
<g>
<title>__send (355 samples, 0.42%)</title><rect x="837.2" y="131.0" width="4.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="840.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$57/1977444329.submit (48 samples, 0.06%)</title><rect x="842.1" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$entity$1 (48 samples, 0.06%)</title><rect x="842.1" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.upsert (48 samples, 0.06%)</title><rect x="842.1" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (48 samples, 0.06%)</title><rect x="842.1" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (48 samples, 0.06%)</title><rect x="842.1" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (43 samples, 0.05%)</title><rect x="842.2" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (38 samples, 0.04%)</title><rect x="842.2" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (38 samples, 0.04%)</title><rect x="842.2" y="131.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (31 samples, 0.04%)</title><rect x="842.3" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (31 samples, 0.04%)</title><rect x="842.3" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao$FlusherTask.run (1,672 samples, 1.96%)</title><rect x="842.8" y="307.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.8" y="318.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.flush (131 samples, 0.15%)</title><rect x="842.8" y="291.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/SSTable.writeToFile (131 samples, 0.15%)</title><rect x="842.8" y="275.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (129 samples, 0.15%)</title><rect x="842.8" y="259.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (123 samples, 0.14%)</title><rect x="842.9" y="243.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (117 samples, 0.14%)</title><rect x="842.9" y="227.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (117 samples, 0.14%)</title><rect x="842.9" y="211.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (117 samples, 0.14%)</title><rect x="842.9" y="195.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.9" y="206.0"></text>
</g>
<g>
<title>__write (115 samples, 0.13%)</title><rect x="842.9" y="179.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="845.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.tableToFlush (1,541 samples, 1.81%)</title><rect x="844.6" y="291.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.6" y="302.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,541 samples, 1.81%)</title><rect x="844.6" y="275.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.6" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,541 samples, 1.81%)</title><rect x="844.6" y="259.0" width="21.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.6" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,541 samples, 1.81%)</title><rect x="844.6" y="243.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.6" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,541 samples, 1.81%)</title><rect x="844.6" y="227.0" width="21.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.6" y="238.0">j..</text>
</g>
<g>
<title>__pthread_cond_wait (1,541 samples, 1.81%)</title><rect x="844.6" y="211.0" width="21.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="847.6" y="222.0">_..</text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (1,673 samples, 1.96%)</title><rect x="865.9" y="323.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.9" y="334.0">j..</text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1,673 samples, 1.96%)</title><rect x="865.9" y="307.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.9" y="318.0">j..</text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1,673 samples, 1.96%)</title><rect x="865.9" y="291.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.9" y="302.0">j..</text>
</g>
<g>
<title>java/lang/Object.wait (1,673 samples, 1.96%)</title><rect x="865.9" y="275.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.9" y="286.0">j..</text>
</g>
<g>
<title>__pthread_cond_wait (1,673 samples, 1.96%)</title><rect x="865.9" y="259.0" width="23.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="868.9" y="270.0">_..</text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1,673 samples, 1.96%)</title><rect x="889.0" y="323.0" width="23.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.0" y="334.0">j..</text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1,673 samples, 1.96%)</title><rect x="889.0" y="307.0" width="23.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.0" y="318.0">j..</text>
</g>
<g>
<title>java/lang/ref/Reference.waitForReferencePendingList (1,673 samples, 1.96%)</title><rect x="889.0" y="291.0" width="23.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.0" y="302.0">j..</text>
</g>
<g>
<title>__pthread_cond_wait (1,673 samples, 1.96%)</title><rect x="889.0" y="275.0" width="23.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="892.0" y="286.0">_..</text>
</g>
<g>
<title>jdk/internal/misc/InnocuousThread.run (1,673 samples, 1.96%)</title><rect x="912.2" y="323.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.2" y="334.0">j..</text>
</g>
<g>
<title>java/lang/Thread.run (1,673 samples, 1.96%)</title><rect x="912.2" y="307.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.2" y="318.0">j..</text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl.run (1,673 samples, 1.96%)</title><rect x="912.2" y="291.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.2" y="302.0">j..</text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1,673 samples, 1.96%)</title><rect x="912.2" y="275.0" width="23.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.2" y="286.0">j..</text>
</g>
<g>
<title>java/lang/Object.wait (1,673 samples, 1.96%)</title><rect x="912.2" y="259.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.2" y="270.0">j..</text>
</g>
<g>
<title>__pthread_cond_timedwait (1,673 samples, 1.96%)</title><rect x="912.2" y="243.0" width="23.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="915.2" y="254.0">_..</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1,673 samples, 1.96%)</title><rect x="935.3" y="323.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.3" y="334.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (1,673 samples, 1.96%)</title><rect x="935.3" y="307.0" width="23.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="938.3" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (1,673 samples, 1.96%)</title><rect x="935.3" y="291.0" width="23.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.3" y="302.0">o..</text>
</g>
<g>
<title>syscall (1,673 samples, 1.96%)</title><rect x="935.3" y="275.0" width="23.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="938.3" y="286.0">s..</text>
</g>
<g>
<title>one/nio/server/CleanupThread.run (1,673 samples, 1.96%)</title><rect x="958.5" y="323.0" width="23.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.5" y="334.0">o..</text>
</g>
<g>
<title>one/nio/server/CleanupThread.waitKeepAlive (1,673 samples, 1.96%)</title><rect x="958.5" y="307.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.5" y="318.0">o..</text>
</g>
<g>
<title>java/lang/Object.wait (1,673 samples, 1.96%)</title><rect x="958.5" y="291.0" width="23.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.5" y="302.0">j..</text>
</g>
<g>
<title>__pthread_cond_wait (1,673 samples, 1.96%)</title><rect x="958.5" y="275.0" width="23.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="961.5" y="286.0">_..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,376 samples, 15.68%)</title><rect x="981.6" y="323.0" width="185.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.6" y="334.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13,217 samples, 15.49%)</title><rect x="981.6" y="307.0" width="182.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.6" y="318.0">one/nio/net/NativeSelect..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13,213 samples, 15.49%)</title><rect x="981.7" y="291.0" width="182.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.7" y="302.0">one/nio/net/NativeSelect..</text>
</g>
<g>
<title>epoll_wait (13,190 samples, 15.46%)</title><rect x="982.0" y="275.0" width="182.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="985.0" y="286.0">epoll_wait</text>
</g>
<g>
<title>one/nio/net/Session.process (155 samples, 0.18%)</title><rect x="1164.4" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (154 samples, 0.18%)</title><rect x="1164.4" y="291.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (100 samples, 0.12%)</title><rect x="1164.4" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (69 samples, 0.08%)</title><rect x="1164.5" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (69 samples, 0.08%)</title><rect x="1164.5" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.5" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (61 samples, 0.07%)</title><rect x="1164.5" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.entity (57 samples, 0.07%)</title><rect x="1164.6" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.asyncExecute (55 samples, 0.06%)</title><rect x="1164.6" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.6" y="206.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (55 samples, 0.06%)</title><rect x="1164.6" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (55 samples, 0.06%)</title><rect x="1164.6" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.6" y="174.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (55 samples, 0.06%)</title><rect x="1164.6" y="147.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.6" y="158.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (55 samples, 0.06%)</title><rect x="1164.6" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (55 samples, 0.06%)</title><rect x="1164.6" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (54 samples, 0.06%)</title><rect x="1164.6" y="99.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (49 samples, 0.06%)</title><rect x="1164.6" y="83.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 0.06%)</title><rect x="1164.7" y="67.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 0.06%)</title><rect x="1164.7" y="51.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.7" y="62.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.04%)</title><rect x="1164.8" y="35.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1167.8" y="46.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (52 samples, 0.06%)</title><rect x="1165.8" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (50 samples, 0.06%)</title><rect x="1165.9" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.9" y="270.0"></text>
</g>
<g>
<title>recv (38 samples, 0.04%)</title><rect x="1166.0" y="243.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1169.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Cleaner$CleanerThread.run (1,673 samples, 1.96%)</title><rect x="1166.6" y="323.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.6" y="334.0">o..</text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1,673 samples, 1.96%)</title><rect x="1166.6" y="307.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.6" y="318.0">j..</text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1,673 samples, 1.96%)</title><rect x="1166.6" y="291.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.6" y="302.0">j..</text>
</g>
<g>
<title>java/lang/Object.wait (1,673 samples, 1.96%)</title><rect x="1166.6" y="275.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.6" y="286.0">j..</text>
</g>
<g>
<title>__pthread_cond_wait (1,673 samples, 1.96%)</title><rect x="1166.6" y="259.0" width="23.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1169.6" y="270.0">_..</text>
</g>
<g>
<title>start_thread (20 samples, 0.02%)</title><rect x="1189.7" y="323.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1192.7" y="334.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (20 samples, 0.02%)</title><rect x="1189.7" y="307.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1192.7" y="318.0"></text>
</g>
<g>
<title>Thread::call_run() (20 samples, 0.02%)</title><rect x="1189.7" y="291.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.7" y="302.0"></text>
</g>
<g>
<title>GangWorker::loop() (20 samples, 0.02%)</title><rect x="1189.7" y="275.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.7" y="286.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (19 samples, 0.02%)</title><rect x="1189.7" y="259.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.7" y="270.0"></text>
</g>
</g>
</svg>
