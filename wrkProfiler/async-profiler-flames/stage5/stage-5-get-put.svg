<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (7,999 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (24 samples, 0.30%)</title><rect x="10.1" y="899.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.1" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="10.1" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.1" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.1" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.1" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="10.1" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.1" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.1" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.1" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.1" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (21 samples, 0.26%)</title><rect x="10.6" y="883.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (19 samples, 0.24%)</title><rect x="10.7" y="867.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.7" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.19%)</title><rect x="11.0" y="851.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (7 samples, 0.09%)</title><rect x="11.6" y="835.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.6" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="11.6" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.6" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="11.6" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.6" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="11.9" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.9" y="830.0"></text>
</g>
<g>
<title>__memset_avx2_erms (3 samples, 0.04%)</title><rect x="12.8" y="835.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="15.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.08%)</title><rect x="13.7" y="899.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.7" y="910.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.06%)</title><rect x="13.8" y="883.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.8" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="13.8" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.8" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="13.8" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.8" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="14.0" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="14.0" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.0" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.08%)</title><rect x="14.6" y="899.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.6" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.06%)</title><rect x="14.6" y="883.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.06%)</title><rect x="14.6" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.6" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="14.6" y="851.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="14.6" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="14.7" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.7" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="15.5" y="899.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.5" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="15.5" y="883.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.5" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.03%)</title><rect x="15.5" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.5" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (15 samples, 0.19%)</title><rect x="15.9" y="899.0" width="2.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="18.9" y="910.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (4 samples, 0.05%)</title><rect x="15.9" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.9" y="894.0"></text>
</g>
<g>
<title>G1BarrierSet::write_ref_array_work(MemRegion) (3 samples, 0.04%)</title><rect x="16.5" y="883.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.5" y="894.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (3 samples, 0.04%)</title><rect x="16.9" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.9" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="17.4" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.05%)</title><rect x="17.4" y="867.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.4" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="17.5" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="20.5" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.49%)</title><rect x="18.3" y="899.0" width="5.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="21.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="23.4" y="883.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="26.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="23.4" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.4" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="23.7" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,347 samples, 79.35%)</title><rect x="24.2" y="899.0" width="936.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.2" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,347 samples, 79.35%)</title><rect x="24.2" y="883.0" width="936.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.2" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,347 samples, 79.35%)</title><rect x="24.2" y="867.0" width="936.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.2" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (8 samples, 0.10%)</title><rect x="25.2" y="851.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.10%)</title><rect x="25.2" y="835.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,994 samples, 37.43%)</title><rect x="26.4" y="851.0" width="441.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.4" y="862.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (2,994 samples, 37.43%)</title><rect x="26.4" y="835.0" width="441.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.4" y="846.0">java/util/concurrent/SynchronousQueue.take</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,994 samples, 37.43%)</title><rect x="26.4" y="819.0" width="441.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.4" y="830.0">java/util/concurrent/SynchronousQueue$TransferStack.transfer</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (6 samples, 0.08%)</title><rect x="26.4" y="803.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="26.4" y="787.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2,988 samples, 37.35%)</title><rect x="27.3" y="803.0" width="440.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.3" y="814.0">java/util/concurrent/SynchronousQueue$TransferStack.awaitFul..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.04%)</title><rect x="31.8" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,954 samples, 36.93%)</title><rect x="32.3" y="787.0" width="435.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.3" y="798.0">java/util/concurrent/locks/LockSupport.park</text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="407.4" y="771.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="410.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="407.4" y="755.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="410.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="407.4" y="739.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="410.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="407.9" y="723.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="410.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="407.9" y="707.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="410.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="407.9" y="691.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="410.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="407.9" y="675.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="410.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (386 samples, 4.83%)</title><rect x="411.1" y="771.0" width="56.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.1" y="782.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park (182 samples, 2.28%)</title><rect x="412.1" y="755.0" width="26.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="415.1" y="766.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.05%)</title><rect x="414.5" y="739.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="417.5" y="750.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="415.2" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="418.2" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (52 samples, 0.65%)</title><rect x="415.5" y="739.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="418.5" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.08%)</title><rect x="420.7" y="723.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="423.7" y="734.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.04%)</title><rect x="421.1" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="424.1" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (10 samples, 0.13%)</title><rect x="421.7" y="723.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="424.7" y="734.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="423.2" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="426.2" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (5 samples, 0.06%)</title><rect x="423.5" y="739.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="426.5" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (5 samples, 0.06%)</title><rect x="424.2" y="739.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="427.2" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (65 samples, 0.81%)</title><rect x="425.0" y="739.0" width="9.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="428.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="428.8" y="723.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="431.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="428.8" y="707.0" width="5.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="431.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="432.3" y="691.0" width="2.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="435.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="432.3" y="675.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="435.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="432.5" y="659.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="435.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="433.5" y="643.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="436.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="434.1" y="627.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="437.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.04%)</title><rect x="434.6" y="739.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="437.6" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.08%)</title><rect x="435.0" y="739.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="438.0" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="435.9" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="438.9" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="436.8" y="739.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="439.8" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="437.2" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="440.2" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.05%)</title><rect x="437.5" y="739.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="440.5" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.08%)</title><rect x="438.1" y="739.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="441.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (192 samples, 2.40%)</title><rect x="439.0" y="755.0" width="28.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="442.0" y="766.0">[u..</text>
</g>
<g>
<title>__pthread_cond_wait (172 samples, 2.15%)</title><rect x="439.1" y="739.0" width="25.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="442.1" y="750.0">_..</text>
</g>
<g>
<title>[unknown] (102 samples, 1.28%)</title><rect x="449.5" y="723.0" width="15.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="452.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.28%)</title><rect x="449.5" y="707.0" width="15.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="452.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.09%)</title><rect x="451.7" y="691.0" width="12.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="454.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.05%)</title><rect x="452.1" y="675.0" width="12.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="455.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.98%)</title><rect x="453.0" y="659.0" width="11.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="456.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.94%)</title><rect x="453.4" y="643.0" width="11.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="456.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.68%)</title><rect x="456.5" y="627.0" width="8.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="459.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="458.9" y="611.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="461.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="460.4" y="595.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="463.4" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (11 samples, 0.14%)</title><rect x="464.5" y="739.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="467.5" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="466.1" y="739.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="469.1" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="466.6" y="739.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="469.6" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="466.9" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="469.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="467.3" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="470.3" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="467.6" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="470.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$66/1309514960.run (3,338 samples, 41.73%)</title><rect x="468.0" y="851.0" width="492.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.0" y="862.0">ru/mail/polis/service/rest/RestController$$Lambda$66/1309514960.run</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$asyncExecute$4 (3,335 samples, 41.69%)</title><rect x="468.5" y="835.0" width="492.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.5" y="846.0">ru/mail/polis/service/rest/RestController.lambda$asyncExecute$4</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$64/691395779.submit (1,314 samples, 16.43%)</title><rect x="468.5" y="819.0" width="193.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.5" y="830.0">ru/mail/polis/service/res..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$2 (1,312 samples, 16.40%)</title><rect x="468.8" y="803.0" width="193.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.8" y="814.0">ru/mail/polis/service/res..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/DaoService.upsert (1,312 samples, 16.40%)</title><rect x="468.8" y="787.0" width="193.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.8" y="798.0">ru/mail/polis/service/res..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.09%)</title><rect x="470.4" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1175259735.invoke (7 samples, 0.09%)</title><rect x="470.4" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/473581465.invoke (7 samples, 0.09%)</title><rect x="470.4" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="470.4" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (7 samples, 0.09%)</title><rect x="470.4" y="707.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.09%)</title><rect x="470.4" y="691.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="471.0" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.15%)</title><rect x="471.6" y="771.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.13%)</title><rect x="471.6" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="471.6" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.06%)</title><rect x="472.2" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="473.1" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="473.1" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="473.1" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="473.4" y="771.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="476.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (900 samples, 11.25%)</title><rect x="473.7" y="771.0" width="132.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.7" y="782.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (10 samples, 0.13%)</title><rect x="473.8" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.08%)</title><rect x="474.4" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.08%)</title><rect x="474.4" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.08%)</title><rect x="474.4" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.08%)</title><rect x="474.4" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (889 samples, 11.11%)</title><rect x="475.3" y="755.0" width="131.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.3" y="766.0">one/nio/http/Htt..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="476.0" y="739.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="479.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (2 samples, 0.03%)</title><rect x="476.3" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (880 samples, 11.00%)</title><rect x="476.6" y="739.0" width="129.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.6" y="750.0">one/nio/http/Htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.09%)</title><rect x="477.2" y="723.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="477.2" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="477.2" y="691.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (209 samples, 2.61%)</title><rect x="478.2" y="723.0" width="30.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.2" y="734.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (190 samples, 2.38%)</title><rect x="481.0" y="707.0" width="28.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.0" y="718.0">on..</text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="482.1" y="691.0" width="5.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="485.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="482.1" y="675.0" width="5.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="485.1" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (33 samples, 0.41%)</title><rect x="482.1" y="659.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="485.1" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="483.4" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="486.4" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="483.7" y="643.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="486.7" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.21%)</title><rect x="484.4" y="643.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="487.4" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="485.5" y="627.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="488.5" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.03%)</title><rect x="485.9" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="488.9" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.04%)</title><rect x="486.2" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="489.2" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="486.6" y="627.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="489.6" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="486.9" y="659.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="489.9" y="670.0"></text>
</g>
<g>
<title>recv (2 samples, 0.03%)</title><rect x="487.4" y="659.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="490.4" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="487.7" y="691.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="490.7" y="702.0"></text>
</g>
<g>
<title>recv (142 samples, 1.78%)</title><rect x="488.1" y="691.0" width="21.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="491.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.63%)</title><rect x="489.9" y="675.0" width="19.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="492.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.63%)</title><rect x="489.9" y="659.0" width="19.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="492.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.50%)</title><rect x="491.4" y="643.0" width="17.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="494.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.50%)</title><rect x="491.4" y="627.0" width="17.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="494.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.46%)</title><rect x="491.8" y="611.0" width="17.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="494.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.38%)</title><rect x="492.8" y="595.0" width="16.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="495.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.34%)</title><rect x="493.3" y="579.0" width="15.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="496.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.11%)</title><rect x="495.9" y="563.0" width="13.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="498.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.00%)</title><rect x="497.3" y="547.0" width="11.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="500.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.79%)</title><rect x="499.8" y="531.0" width="9.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="502.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="502.9" y="515.0" width="6.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="505.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="504.2" y="499.0" width="4.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="507.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="505.5" y="483.0" width="3.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="508.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="508.5" y="467.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="511.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="508.6" y="451.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="511.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="508.6" y="435.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="511.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="508.6" y="419.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="511.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="508.6" y="403.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="511.6" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="508.8" y="387.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="511.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (54 samples, 0.68%)</title><rect x="509.1" y="723.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="509.9" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="510.2" y="707.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="510.7" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="510.7" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (19 samples, 0.24%)</title><rect x="511.3" y="707.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.21%)</title><rect x="511.6" y="691.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.20%)</title><rect x="511.7" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.11%)</title><rect x="514.1" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.04%)</title><rect x="515.0" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.13%)</title><rect x="515.4" y="707.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="515.8" y="691.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="515.8" y="675.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (30 samples, 0.38%)</title><rect x="517.0" y="723.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.13%)</title><rect x="520.0" y="707.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.13%)</title><rect x="520.0" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.13%)</title><rect x="520.0" y="675.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (14 samples, 0.18%)</title><rect x="521.4" y="723.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="522.8" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="522.8" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="523.2" y="675.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="526.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (98 samples, 1.23%)</title><rect x="523.7" y="723.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.7" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (93 samples, 1.16%)</title><rect x="524.2" y="707.0" width="13.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="527.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.80%)</title><rect x="528.5" y="691.0" width="9.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="531.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.80%)</title><rect x="528.5" y="675.0" width="9.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="531.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.60%)</title><rect x="530.9" y="659.0" width="7.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="533.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="531.0" y="643.0" width="7.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="534.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.55%)</title><rect x="531.5" y="627.0" width="6.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="534.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="533.4" y="611.0" width="4.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="536.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="534.1" y="595.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="537.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="535.6" y="579.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="538.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="536.6" y="563.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="539.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="537.2" y="547.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="540.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (451 samples, 5.64%)</title><rect x="538.1" y="723.0" width="66.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.1" y="734.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (21 samples, 0.26%)</title><rect x="538.6" y="707.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="541.6" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="539.1" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="542.1" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="539.6" y="691.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="542.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.15%)</title><rect x="539.9" y="691.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="542.9" y="702.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.04%)</title><rect x="540.2" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="543.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.03%)</title><rect x="540.6" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="543.6" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="541.1" y="675.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="544.1" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="541.7" y="707.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="544.7" y="718.0"></text>
</g>
<g>
<title>__send (424 samples, 5.30%)</title><rect x="542.1" y="707.0" width="62.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="545.1" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (408 samples, 5.10%)</title><rect x="544.5" y="691.0" width="60.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="547.5" y="702.0">[unkno..</text>
</g>
<g>
<title>[unknown] (408 samples, 5.10%)</title><rect x="544.5" y="675.0" width="60.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="547.5" y="686.0">[unkno..</text>
</g>
<g>
<title>[unknown] (403 samples, 5.04%)</title><rect x="545.2" y="659.0" width="59.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="548.2" y="670.0">[unkno..</text>
</g>
<g>
<title>[unknown] (403 samples, 5.04%)</title><rect x="545.2" y="643.0" width="59.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="548.2" y="654.0">[unkno..</text>
</g>
<g>
<title>[unknown] (401 samples, 5.01%)</title><rect x="545.5" y="627.0" width="59.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="548.5" y="638.0">[unkno..</text>
</g>
<g>
<title>[unknown] (399 samples, 4.99%)</title><rect x="545.8" y="611.0" width="58.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="548.8" y="622.0">[unkno..</text>
</g>
<g>
<title>[unknown] (398 samples, 4.98%)</title><rect x="545.9" y="595.0" width="58.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="548.9" y="606.0">[unkno..</text>
</g>
<g>
<title>[unknown] (396 samples, 4.95%)</title><rect x="546.2" y="579.0" width="58.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="549.2" y="590.0">[unkno..</text>
</g>
<g>
<title>[unknown] (389 samples, 4.86%)</title><rect x="547.3" y="563.0" width="57.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="550.3" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (376 samples, 4.70%)</title><rect x="549.2" y="547.0" width="55.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="552.2" y="558.0">[unkn..</text>
</g>
<g>
<title>[unknown] (364 samples, 4.55%)</title><rect x="551.0" y="531.0" width="53.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="554.0" y="542.0">[unkn..</text>
</g>
<g>
<title>[unknown] (350 samples, 4.38%)</title><rect x="553.0" y="515.0" width="51.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="556.0" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (322 samples, 4.03%)</title><rect x="557.1" y="499.0" width="47.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="560.1" y="510.0">[unk..</text>
</g>
<g>
<title>[unknown] (312 samples, 3.90%)</title><rect x="558.6" y="483.0" width="46.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="561.6" y="494.0">[unk..</text>
</g>
<g>
<title>[unknown] (311 samples, 3.89%)</title><rect x="558.8" y="467.0" width="45.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="561.8" y="478.0">[unk..</text>
</g>
<g>
<title>[unknown] (307 samples, 3.84%)</title><rect x="559.4" y="451.0" width="45.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="562.4" y="462.0">[unk..</text>
</g>
<g>
<title>[unknown] (302 samples, 3.78%)</title><rect x="560.1" y="435.0" width="44.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="563.1" y="446.0">[unk..</text>
</g>
<g>
<title>[unknown] (295 samples, 3.69%)</title><rect x="561.1" y="419.0" width="43.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="564.1" y="430.0">[unk..</text>
</g>
<g>
<title>[unknown] (276 samples, 3.45%)</title><rect x="563.9" y="403.0" width="40.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="566.9" y="414.0">[un..</text>
</g>
<g>
<title>[unknown] (268 samples, 3.35%)</title><rect x="565.1" y="387.0" width="39.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="568.1" y="398.0">[un..</text>
</g>
<g>
<title>[unknown] (255 samples, 3.19%)</title><rect x="567.0" y="371.0" width="37.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="570.0" y="382.0">[un..</text>
</g>
<g>
<title>[unknown] (252 samples, 3.15%)</title><rect x="567.5" y="355.0" width="37.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="570.5" y="366.0">[un..</text>
</g>
<g>
<title>[unknown] (241 samples, 3.01%)</title><rect x="569.1" y="339.0" width="35.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="572.1" y="350.0">[un..</text>
</g>
<g>
<title>[unknown] (229 samples, 2.86%)</title><rect x="570.9" y="323.0" width="33.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="573.9" y="334.0">[u..</text>
</g>
<g>
<title>[unknown] (223 samples, 2.79%)</title><rect x="571.8" y="307.0" width="32.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="574.8" y="318.0">[u..</text>
</g>
<g>
<title>[unknown] (220 samples, 2.75%)</title><rect x="572.2" y="291.0" width="32.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="575.2" y="302.0">[u..</text>
</g>
<g>
<title>[unknown] (217 samples, 2.71%)</title><rect x="572.6" y="275.0" width="32.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="575.6" y="286.0">[u..</text>
</g>
<g>
<title>[unknown] (210 samples, 2.63%)</title><rect x="573.7" y="259.0" width="30.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="576.7" y="270.0">[u..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.56%)</title><rect x="574.4" y="243.0" width="30.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="577.4" y="254.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.50%)</title><rect x="575.1" y="227.0" width="29.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="578.1" y="238.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.50%)</title><rect x="575.1" y="211.0" width="29.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="578.1" y="222.0">[u..</text>
</g>
<g>
<title>[unknown] (197 samples, 2.46%)</title><rect x="575.6" y="195.0" width="29.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="578.6" y="206.0">[u..</text>
</g>
<g>
<title>[unknown] (191 samples, 2.39%)</title><rect x="576.5" y="179.0" width="28.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="579.5" y="190.0">[u..</text>
</g>
<g>
<title>[unknown] (183 samples, 2.29%)</title><rect x="577.7" y="163.0" width="26.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="580.7" y="174.0">[..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.19%)</title><rect x="578.8" y="147.0" width="25.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="581.8" y="158.0">[..</text>
</g>
<g>
<title>[unknown] (149 samples, 1.86%)</title><rect x="582.7" y="131.0" width="21.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="585.7" y="142.0">[..</text>
</g>
<g>
<title>[unknown] (133 samples, 1.66%)</title><rect x="585.0" y="115.0" width="19.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="588.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.60%)</title><rect x="585.8" y="99.0" width="18.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="588.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.51%)</title><rect x="586.8" y="83.0" width="17.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="589.8" y="94.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="603.5" y="67.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="606.5" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="603.9" y="51.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="606.9" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="604.4" y="35.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="607.4" y="46.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (6 samples, 0.08%)</title><rect x="604.6" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.6" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (6 samples, 0.08%)</title><rect x="605.5" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="606.4" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (197 samples, 2.46%)</title><rect x="606.7" y="771.0" width="29.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.7" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (195 samples, 2.44%)</title><rect x="607.0" y="755.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.0" y="766.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.05%)</title><rect x="609.7" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.05%)</title><rect x="609.7" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.05%)</title><rect x="609.7" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (2 samples, 0.03%)</title><rect x="610.0" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (173 samples, 2.16%)</title><rect x="610.3" y="739.0" width="25.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.3" y="750.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (167 samples, 2.09%)</title><rect x="610.3" y="723.0" width="24.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.3" y="734.0">j..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="610.4" y="707.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="613.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (162 samples, 2.03%)</title><rect x="610.7" y="707.0" width="23.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.7" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (76 samples, 0.95%)</title><rect x="623.4" y="691.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (75 samples, 0.94%)</title><rect x="623.5" y="675.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (74 samples, 0.93%)</title><rect x="623.7" y="659.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.09%)</title><rect x="624.1" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.1" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (56 samples, 0.70%)</title><rect x="625.2" y="643.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.10%)</title><rect x="631.6" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="631.8" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.04%)</title><rect x="632.4" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.4" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.05%)</title><rect x="632.8" y="627.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="635.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.10%)</title><rect x="633.4" y="643.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.4" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.09%)</title><rect x="633.6" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.6" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.05%)</title><rect x="634.0" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.0" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="634.6" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="637.6" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="634.6" y="691.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="637.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="634.6" y="675.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="637.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/CellValue.of (6 samples, 0.08%)</title><rect x="634.9" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.03%)</title><rect x="635.5" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (150 samples, 1.88%)</title><rect x="635.9" y="771.0" width="22.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.9" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (150 samples, 1.88%)</title><rect x="635.9" y="755.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.9" y="766.0">r..</text>
</g>
<g>
<title>java/util/Collection.toArray (4 samples, 0.05%)</title><rect x="636.2" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.05%)</title><rect x="636.2" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.2" y="734.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (2 samples, 0.03%)</title><rect x="636.2" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="639.2" y="718.0"></text>
</g>
<g>
<title>checkcast_arraycopy_uninit (2 samples, 0.03%)</title><rect x="636.5" y="707.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="639.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2 samples, 0.03%)</title><rect x="636.8" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.8" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2 samples, 0.03%)</title><rect x="636.8" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="636.8" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="636.8" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (73 samples, 0.91%)</title><rect x="637.1" y="739.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (73 samples, 0.91%)</title><rect x="637.1" y="723.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (73 samples, 0.91%)</title><rect x="637.1" y="707.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (69 samples, 0.86%)</title><rect x="637.1" y="691.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (64 samples, 0.80%)</title><rect x="637.1" y="675.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.1" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (12 samples, 0.15%)</title><rect x="637.1" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.estimateSize (12 samples, 0.15%)</title><rect x="637.1" y="643.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1.opWrapSink (3 samples, 0.04%)</title><rect x="637.2" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (3 samples, 0.04%)</title><rect x="637.8" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (2 samples, 0.03%)</title><rect x="638.3" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.3" y="638.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="638.6" y="627.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="641.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (52 samples, 0.65%)</title><rect x="638.9" y="659.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.9" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (24 samples, 0.30%)</title><rect x="638.9" y="643.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.9" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (24 samples, 0.30%)</title><rect x="638.9" y="627.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.9" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.11%)</title><rect x="638.9" y="611.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.9" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (7 samples, 0.09%)</title><rect x="639.0" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (7 samples, 0.09%)</title><rect x="639.0" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (7 samples, 0.09%)</title><rect x="639.0" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (6 samples, 0.08%)</title><rect x="639.2" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.08%)</title><rect x="639.2" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.2" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.size (15 samples, 0.19%)</title><rect x="640.2" y="611.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.2" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.size (15 samples, 0.19%)</title><rect x="640.2" y="595.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2 samples, 0.03%)</title><rect x="640.2" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (13 samples, 0.16%)</title><rect x="640.5" y="579.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (6 samples, 0.08%)</title><rect x="640.9" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (6 samples, 0.08%)</title><rect x="640.9" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.9" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.03%)</title><rect x="641.2" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.03%)</title><rect x="641.5" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="641.8" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="641.8" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (4 samples, 0.05%)</title><rect x="641.8" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.05%)</title><rect x="641.8" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (21 samples, 0.26%)</title><rect x="642.4" y="643.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.4" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (19 samples, 0.24%)</title><rect x="642.4" y="627.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.4" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (3 samples, 0.04%)</title><rect x="642.7" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="642.7" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="642.7" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (3 samples, 0.04%)</title><rect x="642.7" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.04%)</title><rect x="642.7" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="642.9" y="531.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.18%)</title><rect x="643.1" y="611.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (14 samples, 0.18%)</title><rect x="643.1" y="595.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.11%)</title><rect x="643.1" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.11%)</title><rect x="643.1" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.11%)</title><rect x="643.1" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.1" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.05%)</title><rect x="643.3" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="643.9" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.03%)</title><rect x="644.5" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.03%)</title><rect x="644.5" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="644.5" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (3 samples, 0.04%)</title><rect x="644.8" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.accept (3 samples, 0.04%)</title><rect x="644.8" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="644.8" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="644.8" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="644.8" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="644.8" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="644.8" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (7 samples, 0.09%)</title><rect x="645.5" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (7 samples, 0.09%)</title><rect x="645.5" y="627.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (6 samples, 0.08%)</title><rect x="645.5" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (6 samples, 0.08%)</title><rect x="645.5" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.5" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (2 samples, 0.03%)</title><rect x="645.5" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (2 samples, 0.03%)</title><rect x="645.5" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.5" y="574.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (2 samples, 0.03%)</title><rect x="645.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.03%)</title><rect x="646.1" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/1543974463.accept (2 samples, 0.03%)</title><rect x="646.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="646.1" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="646.1" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="646.1" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="646.1" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="646.1" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.06%)</title><rect x="646.5" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (4 samples, 0.05%)</title><rect x="647.3" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (4 samples, 0.05%)</title><rect x="647.3" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.&lt;init&gt; (4 samples, 0.05%)</title><rect x="647.3" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$Box.&lt;init&gt; (4 samples, 0.05%)</title><rect x="647.3" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.distinct (3 samples, 0.04%)</title><rect x="647.9" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps.makeRef (2 samples, 0.03%)</title><rect x="647.9" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (64 samples, 0.80%)</title><rect x="648.6" y="739.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.20%)</title><rect x="648.6" y="723.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (16 samples, 0.20%)</title><rect x="648.6" y="707.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.20%)</title><rect x="648.6" y="691.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.20%)</title><rect x="648.6" y="675.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (16 samples, 0.20%)</title><rect x="648.6" y="659.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.20%)</title><rect x="648.6" y="643.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.6" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="650.4" y="627.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="653.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (47 samples, 0.59%)</title><rect x="651.1" y="723.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="651.1" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="651.1" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="651.1" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="651.1" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="651.1" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="654.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (14 samples, 0.18%)</title><rect x="651.4" y="707.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.4" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (14 samples, 0.18%)</title><rect x="651.4" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.4" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (14 samples, 0.18%)</title><rect x="651.4" y="675.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.4" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (14 samples, 0.18%)</title><rect x="651.4" y="659.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.4" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implDigest (14 samples, 0.18%)</title><rect x="651.4" y="643.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="652.0" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.0" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress (4 samples, 0.05%)</title><rect x="652.9" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.9" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (31 samples, 0.39%)</title><rect x="653.5" y="707.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.5" y="718.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (31 samples, 0.39%)</title><rect x="653.5" y="691.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.5" y="702.0"></text>
</g>
<g>
<title>java/security/Security.getSpiClass (4 samples, 0.05%)</title><rect x="653.5" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.05%)</title><rect x="653.5" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="653.6" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="653.8" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.8" y="638.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (27 samples, 0.34%)</title><rect x="654.1" y="675.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.1" y="686.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (9 samples, 0.11%)</title><rect x="654.1" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.1" y="670.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (4 samples, 0.05%)</title><rect x="654.2" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.2" y="654.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (3 samples, 0.04%)</title><rect x="654.2" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.04%)</title><rect x="654.2" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (3 samples, 0.04%)</title><rect x="654.2" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.2" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.04%)</title><rect x="654.2" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.04%)</title><rect x="654.2" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.2" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (2 samples, 0.03%)</title><rect x="654.8" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.8" y="654.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.checkSuperClass (2 samples, 0.03%)</title><rect x="655.1" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (2 samples, 0.03%)</title><rect x="655.1" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.1" y="638.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (18 samples, 0.23%)</title><rect x="655.4" y="659.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.4" y="670.0"></text>
</g>
<g>
<title>java/security/Provider.getService (12 samples, 0.15%)</title><rect x="655.4" y="643.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.4" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (6 samples, 0.08%)</title><rect x="656.3" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="656.3" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.3" y="622.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (2 samples, 0.03%)</title><rect x="656.4" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="656.7" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.7" y="622.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (3 samples, 0.04%)</title><rect x="656.7" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="656.7" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="656.7" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.7" y="574.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (6 samples, 0.08%)</title><rect x="657.2" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (29 samples, 0.36%)</title><rect x="658.0" y="771.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.0" y="782.0"></text>
</g>
<g>
<title>java/net/URL.toString (28 samples, 0.35%)</title><rect x="658.2" y="755.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.2" y="766.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (28 samples, 0.35%)</title><rect x="658.2" y="739.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.2" y="750.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (27 samples, 0.34%)</title><rect x="658.3" y="723.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (24 samples, 0.30%)</title><rect x="658.8" y="707.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.8" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (24 samples, 0.30%)</title><rect x="658.8" y="691.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="661.6" y="675.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="664.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$81/283646125.submit (901 samples, 11.26%)</title><rect x="662.3" y="819.0" width="132.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.3" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$1 (901 samples, 11.26%)</title><rect x="662.3" y="803.0" width="132.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.3" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/DaoService.get (901 samples, 11.26%)</title><rect x="662.3" y="787.0" width="132.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.3" y="798.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="663.5" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1175259735.invoke (2 samples, 0.03%)</title><rect x="663.5" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/473581465.invoke (2 samples, 0.03%)</title><rect x="663.5" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="663.5" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="663.5" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="663.5" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="663.8" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.8" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="663.8" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="663.8" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="663.8" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="663.8" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.14%)</title><rect x="664.2" y="771.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.10%)</title><rect x="664.2" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="664.5" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.5" y="750.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.04%)</title><rect x="665.0" y="739.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="668.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="665.4" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="665.4" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="665.4" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="666.0" y="771.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="669.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (491 samples, 6.14%)</title><rect x="666.5" y="771.0" width="72.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.5" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (490 samples, 6.13%)</title><rect x="666.6" y="755.0" width="72.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.6" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (489 samples, 6.11%)</title><rect x="666.8" y="739.0" width="72.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.8" y="750.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="667.3" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="667.3" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="667.3" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (130 samples, 1.63%)</title><rect x="667.6" y="723.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (113 samples, 1.41%)</title><rect x="670.0" y="707.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="670.3" y="691.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="673.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="670.3" y="675.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="673.3" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.16%)</title><rect x="670.3" y="659.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="673.3" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="670.9" y="643.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="673.9" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.08%)</title><rect x="671.3" y="643.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="674.3" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="672.4" y="691.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="675.4" y="702.0"></text>
</g>
<g>
<title>recv (95 samples, 1.19%)</title><rect x="672.7" y="691.0" width="14.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="675.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.08%)</title><rect x="674.0" y="675.0" width="12.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="677.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.08%)</title><rect x="674.0" y="659.0" width="12.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="677.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.05%)</title><rect x="674.3" y="643.0" width="12.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="677.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.04%)</title><rect x="674.4" y="627.0" width="12.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="677.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.98%)</title><rect x="675.2" y="611.0" width="11.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="678.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.96%)</title><rect x="675.3" y="595.0" width="11.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="678.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.93%)</title><rect x="675.8" y="579.0" width="10.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="678.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.78%)</title><rect x="677.5" y="563.0" width="9.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="680.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.69%)</title><rect x="678.6" y="547.0" width="8.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="681.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.60%)</title><rect x="679.6" y="531.0" width="7.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="682.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="681.8" y="515.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="684.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="683.6" y="499.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="686.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="684.3" y="483.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="687.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (26 samples, 0.33%)</title><rect x="686.8" y="723.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="687.3" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="687.6" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.6" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="688.0" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="691.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (9 samples, 0.11%)</title><rect x="688.3" y="707.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="688.7" y="691.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="688.7" y="675.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="689.6" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (15 samples, 0.19%)</title><rect x="690.7" y="723.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.09%)</title><rect x="691.8" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="691.8" y="691.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.09%)</title><rect x="691.8" y="675.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (14 samples, 0.18%)</title><rect x="692.9" y="723.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="694.2" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="694.2" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="694.9" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (58 samples, 0.73%)</title><rect x="695.2" y="723.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.2" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.03%)</title><rect x="695.5" y="707.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="698.5" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (53 samples, 0.66%)</title><rect x="695.8" y="707.0" width="7.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="698.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.44%)</title><rect x="698.5" y="691.0" width="5.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="701.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.44%)</title><rect x="698.5" y="675.0" width="5.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="701.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="699.8" y="659.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="702.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="699.8" y="643.0" width="3.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="702.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="699.8" y="627.0" width="3.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="702.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="700.7" y="611.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="703.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="701.1" y="595.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="704.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="701.6" y="579.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="704.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="702.6" y="563.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="705.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="702.9" y="547.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="705.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (232 samples, 2.90%)</title><rect x="703.8" y="723.0" width="34.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.8" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (5 samples, 0.06%)</title><rect x="704.1" y="707.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="707.1" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="704.5" y="691.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="707.5" y="702.0"></text>
</g>
<g>
<title>__send (223 samples, 2.79%)</title><rect x="705.0" y="707.0" width="32.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="708.0" y="718.0">__..</text>
</g>
<g>
<title>[unknown] (212 samples, 2.65%)</title><rect x="706.6" y="691.0" width="31.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="709.6" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (212 samples, 2.65%)</title><rect x="706.6" y="675.0" width="31.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="709.6" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (212 samples, 2.65%)</title><rect x="706.6" y="659.0" width="31.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="709.6" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (212 samples, 2.65%)</title><rect x="706.6" y="643.0" width="31.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="709.6" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (210 samples, 2.63%)</title><rect x="706.9" y="627.0" width="31.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="709.9" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (208 samples, 2.60%)</title><rect x="707.2" y="611.0" width="30.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="710.2" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (207 samples, 2.59%)</title><rect x="707.3" y="595.0" width="30.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="710.3" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (207 samples, 2.59%)</title><rect x="707.3" y="579.0" width="30.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="710.3" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (197 samples, 2.46%)</title><rect x="708.8" y="563.0" width="29.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="711.8" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.36%)</title><rect x="710.0" y="547.0" width="27.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="713.0" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (186 samples, 2.33%)</title><rect x="710.4" y="531.0" width="27.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="713.4" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.21%)</title><rect x="711.7" y="515.0" width="26.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="714.7" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.11%)</title><rect x="712.9" y="499.0" width="25.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="715.9" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (166 samples, 2.08%)</title><rect x="713.4" y="483.0" width="24.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="716.4" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.01%)</title><rect x="714.1" y="467.0" width="23.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="717.1" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.96%)</title><rect x="714.7" y="451.0" width="23.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="717.7" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (154 samples, 1.93%)</title><rect x="715.1" y="435.0" width="22.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="718.1" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (153 samples, 1.91%)</title><rect x="715.3" y="419.0" width="22.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="718.3" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.79%)</title><rect x="716.8" y="403.0" width="21.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="719.8" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (139 samples, 1.74%)</title><rect x="717.4" y="387.0" width="20.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="720.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.70%)</title><rect x="717.8" y="371.0" width="20.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="720.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.65%)</title><rect x="718.4" y="355.0" width="19.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="721.4" y="366.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.60%)</title><rect x="719.0" y="339.0" width="18.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="722.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.56%)</title><rect x="719.4" y="323.0" width="18.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="722.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.51%)</title><rect x="720.0" y="307.0" width="17.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="723.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.50%)</title><rect x="720.2" y="291.0" width="17.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="723.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.45%)</title><rect x="720.7" y="275.0" width="17.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="723.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.43%)</title><rect x="721.0" y="259.0" width="16.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="724.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.43%)</title><rect x="721.0" y="243.0" width="16.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="724.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.41%)</title><rect x="721.2" y="227.0" width="16.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="724.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.41%)</title><rect x="721.2" y="211.0" width="16.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="724.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.40%)</title><rect x="721.3" y="195.0" width="16.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="724.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.31%)</title><rect x="722.4" y="179.0" width="15.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.20%)</title><rect x="723.7" y="163.0" width="14.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="726.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.10%)</title><rect x="724.9" y="147.0" width="13.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="727.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.96%)</title><rect x="726.5" y="131.0" width="11.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="729.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.76%)</title><rect x="728.9" y="115.0" width="9.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="731.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.73%)</title><rect x="729.3" y="99.0" width="8.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="732.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.71%)</title><rect x="729.4" y="83.0" width="8.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="732.4" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="737.4" y="67.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="740.4" y="78.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="737.4" y="51.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="740.4" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="737.6" y="35.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="740.6" y="46.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.06%)</title><rect x="738.0" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.0" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (2 samples, 0.03%)</title><rect x="738.4" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (217 samples, 2.71%)</title><rect x="738.9" y="771.0" width="32.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.9" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (217 samples, 2.71%)</title><rect x="738.9" y="755.0" width="32.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.9" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (44 samples, 0.55%)</title><rect x="738.9" y="739.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.21%)</title><rect x="738.9" y="723.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="741.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.21%)</title><rect x="738.9" y="707.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.10%)</title><rect x="738.9" y="691.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (4 samples, 0.05%)</title><rect x="739.5" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3 samples, 0.04%)</title><rect x="740.1" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="740.7" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.7" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="740.7" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.04%)</title><rect x="741.0" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="741.0" y="675.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.34%)</title><rect x="741.4" y="723.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (26 samples, 0.33%)</title><rect x="741.5" y="707.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.31%)</title><rect x="741.7" y="691.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (21 samples, 0.26%)</title><rect x="741.8" y="675.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="741.8" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.8" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="741.8" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.8" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="741.8" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="741.8" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="741.8" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.24%)</title><rect x="742.1" y="659.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.06%)</title><rect x="742.1" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.06%)</title><rect x="742.1" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="742.1" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.04%)</title><rect x="742.1" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.1" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.04%)</title><rect x="742.1" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="742.1" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="742.1" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.04%)</title><rect x="742.1" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (3 samples, 0.04%)</title><rect x="742.1" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.03%)</title><rect x="742.6" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.03%)</title><rect x="742.6" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.04%)</title><rect x="742.9" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="742.9" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="742.9" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$93/142103412.apply (4 samples, 0.05%)</title><rect x="743.3" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (4 samples, 0.05%)</title><rect x="743.3" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="743.3" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.05%)</title><rect x="743.3" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="743.3" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="743.3" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.3" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="743.3" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="743.3" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="743.3" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="743.6" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="743.6" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="743.6" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$94/1301236464.apply (7 samples, 0.09%)</title><rect x="743.9" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (7 samples, 0.09%)</title><rect x="743.9" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.09%)</title><rect x="743.9" y="611.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.09%)</title><rect x="743.9" y="595.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="743.9" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="743.9" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="743.9" y="547.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.09%)</title><rect x="743.9" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.09%)</title><rect x="743.9" y="515.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.03%)</title><rect x="744.9" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (173 samples, 2.16%)</title><rect x="745.4" y="739.0" width="25.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.4" y="750.0">r..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="745.4" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.4" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="745.4" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.4" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.04%)</title><rect x="745.4" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="745.8" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="745.8" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="745.8" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="746.0" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.03%)</title><rect x="746.0" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (165 samples, 2.06%)</title><rect x="746.6" y="723.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.6" y="734.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14 samples, 0.18%)</title><rect x="746.6" y="707.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.18%)</title><rect x="746.6" y="691.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3 samples, 0.04%)</title><rect x="747.4" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.03%)</title><rect x="748.2" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.2" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.08%)</title><rect x="748.6" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.6" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.08%)</title><rect x="748.6" y="691.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (3 samples, 0.04%)</title><rect x="748.9" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="749.8" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="749.8" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.09%)</title><rect x="750.1" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.09%)</title><rect x="750.1" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.05%)</title><rect x="750.5" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.03%)</title><rect x="751.1" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.03%)</title><rect x="751.1" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.03%)</title><rect x="751.1" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.16%)</title><rect x="751.4" y="707.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.16%)</title><rect x="751.4" y="691.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (2 samples, 0.03%)</title><rect x="751.6" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.13%)</title><rect x="751.9" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.09%)</title><rect x="751.9" y="659.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="751.9" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.9" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="751.9" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.9" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="751.9" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="751.9" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="751.9" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.06%)</title><rect x="752.2" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$94/1301236464.apply (5 samples, 0.06%)</title><rect x="752.2" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (5 samples, 0.06%)</title><rect x="752.2" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="752.2" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="752.2" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="752.2" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="752.2" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="752.2" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="752.2" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="752.2" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="752.9" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="752.9" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.03%)</title><rect x="753.1" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (119 samples, 1.49%)</title><rect x="753.3" y="707.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.06%)</title><rect x="753.3" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="754.1" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="754.1" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$82/1238316831.get$Lambda (2 samples, 0.03%)</title><rect x="754.1" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$82/1238316831.&lt;init&gt; (2 samples, 0.03%)</title><rect x="754.1" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.1" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (104 samples, 1.30%)</title><rect x="754.4" y="691.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.4" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (104 samples, 1.30%)</title><rect x="754.4" y="675.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (104 samples, 1.30%)</title><rect x="754.4" y="659.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (100 samples, 1.25%)</title><rect x="755.0" y="643.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (100 samples, 1.25%)</title><rect x="755.0" y="627.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (5 samples, 0.06%)</title><rect x="755.0" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (5 samples, 0.06%)</title><rect x="755.0" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.06%)</title><rect x="755.0" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="755.0" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="755.0" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.0" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="755.4" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (95 samples, 1.19%)</title><rect x="755.7" y="611.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (95 samples, 1.19%)</title><rect x="755.7" y="595.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.11%)</title><rect x="755.9" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.11%)</title><rect x="755.9" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.11%)</title><rect x="755.9" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.9" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.05%)</title><rect x="756.6" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (85 samples, 1.06%)</title><rect x="757.2" y="579.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (78 samples, 0.98%)</title><rect x="758.2" y="563.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (78 samples, 0.98%)</title><rect x="758.2" y="547.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (78 samples, 0.98%)</title><rect x="758.2" y="531.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.2" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.21%)</title><rect x="765.0" y="515.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.06%)</title><rect x="766.8" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="766.9" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (3 samples, 0.04%)</title><rect x="767.5" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.15%)</title><rect x="767.9" y="515.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.9" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="769.0" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.0" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="769.4" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (7 samples, 0.09%)</title><rect x="769.9" y="691.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="770.5" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="770.6" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="770.6" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (81 samples, 1.01%)</title><rect x="770.9" y="771.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (81 samples, 1.01%)</title><rect x="770.9" y="755.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.9" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (3 samples, 0.04%)</title><rect x="770.9" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (36 samples, 0.45%)</title><rect x="771.6" y="739.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (35 samples, 0.44%)</title><rect x="771.8" y="723.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (35 samples, 0.44%)</title><rect x="771.8" y="707.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (33 samples, 0.41%)</title><rect x="772.1" y="691.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (29 samples, 0.36%)</title><rect x="772.1" y="675.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (28 samples, 0.35%)</title><rect x="772.2" y="659.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.2" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (10 samples, 0.13%)</title><rect x="772.2" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.2" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (10 samples, 0.13%)</title><rect x="772.2" y="627.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.2" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.size (9 samples, 0.11%)</title><rect x="772.4" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.size (9 samples, 0.11%)</title><rect x="772.4" y="595.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (9 samples, 0.11%)</title><rect x="772.4" y="579.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="773.1" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="773.1" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (4 samples, 0.05%)</title><rect x="773.1" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.05%)</title><rect x="773.1" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (11 samples, 0.14%)</title><rect x="773.7" y="643.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.7" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (11 samples, 0.14%)</title><rect x="773.7" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (3 samples, 0.04%)</title><rect x="773.9" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="773.9" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="773.9" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (3 samples, 0.04%)</title><rect x="773.9" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.04%)</title><rect x="773.9" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.09%)</title><rect x="774.3" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (7 samples, 0.09%)</title><rect x="774.3" y="595.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.08%)</title><rect x="774.3" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.08%)</title><rect x="774.3" y="563.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.06%)</title><rect x="774.4" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.4" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="774.9" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (7 samples, 0.09%)</title><rect x="775.3" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (7 samples, 0.09%)</title><rect x="775.3" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (7 samples, 0.09%)</title><rect x="775.3" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (7 samples, 0.09%)</title><rect x="775.3" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (3 samples, 0.04%)</title><rect x="775.6" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (3 samples, 0.04%)</title><rect x="775.6" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.6" y="574.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (3 samples, 0.04%)</title><rect x="775.6" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="558.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (3 samples, 0.04%)</title><rect x="775.6" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.03%)</title><rect x="776.1" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/1543974463.accept (2 samples, 0.03%)</title><rect x="776.1" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="776.1" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="776.1" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="776.1" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="776.1" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="776.1" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (39 samples, 0.49%)</title><rect x="777.1" y="739.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="777.1" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="777.1" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="777.1" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="777.1" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.1" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="777.1" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="777.1" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.1" y="654.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="777.5" y="643.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="780.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (33 samples, 0.41%)</title><rect x="778.0" y="723.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.03%)</title><rect x="778.0" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.03%)</title><rect x="778.3" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.3" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (8 samples, 0.10%)</title><rect x="778.6" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.6" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (8 samples, 0.10%)</title><rect x="778.6" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.6" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (8 samples, 0.10%)</title><rect x="778.6" y="675.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.6" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (8 samples, 0.10%)</title><rect x="778.6" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.6" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implDigest (8 samples, 0.10%)</title><rect x="778.6" y="643.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.6" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bLittle4 (2 samples, 0.03%)</title><rect x="778.6" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.6" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress (6 samples, 0.08%)</title><rect x="778.9" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.9" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iLittle64 (2 samples, 0.03%)</title><rect x="779.5" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.5" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (21 samples, 0.26%)</title><rect x="779.8" y="707.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.8" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.&lt;init&gt; (2 samples, 0.03%)</title><rect x="779.8" y="691.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.8" y="702.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (19 samples, 0.24%)</title><rect x="780.0" y="691.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.0" y="702.0"></text>
</g>
<g>
<title>java/security/Security.getSpiClass (5 samples, 0.06%)</title><rect x="780.3" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.05%)</title><rect x="780.5" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="780.8" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="780.8" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.8" y="638.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (12 samples, 0.15%)</title><rect x="781.1" y="675.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.1" y="686.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (3 samples, 0.04%)</title><rect x="781.1" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.1" y="670.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (2 samples, 0.03%)</title><rect x="781.2" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.2" y="654.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (2 samples, 0.03%)</title><rect x="781.2" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.03%)</title><rect x="781.2" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.03%)</title><rect x="781.2" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.2" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.03%)</title><rect x="781.2" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (2 samples, 0.03%)</title><rect x="781.2" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.2" y="574.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (9 samples, 0.11%)</title><rect x="781.5" y="659.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.5" y="670.0"></text>
</g>
<g>
<title>java/security/Provider.getService (9 samples, 0.11%)</title><rect x="781.5" y="643.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.5" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (8 samples, 0.10%)</title><rect x="781.7" y="627.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.09%)</title><rect x="781.8" y="611.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.8" y="622.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (7 samples, 0.09%)</title><rect x="781.8" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.09%)</title><rect x="781.8" y="579.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.09%)</title><rect x="781.8" y="563.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (10 samples, 0.13%)</title><rect x="782.8" y="771.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.8" y="782.0"></text>
</g>
<g>
<title>java/net/URL.toString (9 samples, 0.11%)</title><rect x="783.0" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.0" y="766.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (9 samples, 0.11%)</title><rect x="783.0" y="739.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.0" y="750.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (9 samples, 0.11%)</title><rect x="783.0" y="723.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.11%)</title><rect x="783.0" y="707.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.0" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.11%)</title><rect x="783.0" y="691.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="784.0" y="675.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="787.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.keyByteBuffer (18 samples, 0.23%)</title><rect x="784.3" y="771.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.23%)</title><rect x="784.3" y="755.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.23%)</title><rect x="784.3" y="739.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.23%)</title><rect x="784.3" y="723.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.23%)</title><rect x="784.3" y="707.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (18 samples, 0.23%)</title><rect x="784.3" y="691.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.05%)</title><rect x="785.7" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.7" y="686.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.03%)</title><rect x="785.9" y="659.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="788.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="786.2" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.2" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="786.5" y="675.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="789.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/CellUtils.getFromResponse (10 samples, 0.13%)</title><rect x="787.0" y="771.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="787.0" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="787.0" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.08%)</title><rect x="787.6" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="787.6" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="787.6" y="723.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/CellUtils.merge (9 samples, 0.11%)</title><rect x="788.5" y="771.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (8 samples, 0.10%)</title><rect x="788.6" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (8 samples, 0.10%)</title><rect x="788.6" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.10%)</title><rect x="788.6" y="723.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (8 samples, 0.10%)</title><rect x="788.6" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.06%)</title><rect x="789.0" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (3 samples, 0.04%)</title><rect x="789.2" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/CellUtils.value (35 samples, 0.44%)</title><rect x="789.8" y="771.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.04%)</title><rect x="789.8" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.8" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="789.8" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.34%)</title><rect x="790.2" y="755.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.23%)</title><rect x="790.2" y="739.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (16 samples, 0.20%)</title><rect x="790.5" y="723.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="790.5" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.5" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.04%)</title><rect x="790.5" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.5" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.04%)</title><rect x="790.5" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="790.5" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="790.5" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.16%)</title><rect x="791.0" y="707.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (2 samples, 0.03%)</title><rect x="791.0" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.06%)</title><rect x="791.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.05%)</title><rect x="791.4" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.04%)</title><rect x="791.6" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.03%)</title><rect x="791.6" y="643.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$93/142103412.apply (3 samples, 0.04%)</title><rect x="792.1" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (3 samples, 0.04%)</title><rect x="792.1" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.1" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="792.1" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="792.1" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="792.1" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="792.1" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.1" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="792.1" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="792.1" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="792.1" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$94/1301236464.apply (2 samples, 0.03%)</title><rect x="792.6" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (2 samples, 0.03%)</title><rect x="792.6" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (6 samples, 0.08%)</title><rect x="792.9" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.9" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="793.5" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$94/1301236464.apply (2 samples, 0.03%)</title><rect x="793.9" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (2 samples, 0.03%)</title><rect x="793.9" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="793.9" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (5 samples, 0.06%)</title><rect x="794.2" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="794.2" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="794.2" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="794.2" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="794.2" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="794.4" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="794.4" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.4" y="670.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="794.7" y="659.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="797.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.from (2 samples, 0.03%)</title><rect x="794.9" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/874176560.linkToTargetMethod (2 samples, 0.03%)</title><rect x="794.9" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/520536043.invoke (2 samples, 0.03%)</title><rect x="794.9" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1777236724.invokeStatic (2 samples, 0.03%)</title><rect x="794.9" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="794.9" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.03%)</title><rect x="794.9" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$2 (3 samples, 0.04%)</title><rect x="795.2" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (1,117 samples, 13.96%)</title><rect x="795.7" y="819.0" width="164.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.7" y="830.0">ru/mail/polis/utils/R..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,117 samples, 13.96%)</title><rect x="795.7" y="803.0" width="164.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.7" y="814.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.18%)</title><rect x="799.5" y="787.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.18%)</title><rect x="799.5" y="771.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.18%)</title><rect x="799.5" y="755.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="800.1" y="739.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="803.1" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="800.3" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="803.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="800.6" y="739.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="803.6" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="801.0" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="804.0" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="801.0" y="723.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="804.0" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="801.3" y="723.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="804.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,062 samples, 13.28%)</title><rect x="801.6" y="787.0" width="156.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.6" y="798.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="801.6" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (48 samples, 0.60%)</title><rect x="802.0" y="771.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (19 samples, 0.24%)</title><rect x="806.3" y="755.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (19 samples, 0.24%)</title><rect x="806.3" y="739.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (19 samples, 0.24%)</title><rect x="806.3" y="723.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,011 samples, 12.64%)</title><rect x="809.1" y="771.0" width="149.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.1" y="782.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,011 samples, 12.64%)</title><rect x="809.1" y="755.0" width="149.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.1" y="766.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="809.4" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,007 samples, 12.59%)</title><rect x="809.7" y="739.0" width="148.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.7" y="750.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="810.3" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,000 samples, 12.50%)</title><rect x="810.7" y="723.0" width="147.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.7" y="734.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="812.5" y="707.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="815.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.55%)</title><rect x="812.9" y="707.0" width="6.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="815.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.55%)</title><rect x="812.9" y="691.0" width="6.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="815.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (34 samples, 0.43%)</title><rect x="812.9" y="675.0" width="5.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="815.9" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.06%)</title><rect x="813.7" y="659.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="816.7" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.08%)</title><rect x="814.6" y="659.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="817.6" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (15 samples, 0.19%)</title><rect x="815.5" y="659.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="818.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (5 samples, 0.06%)</title><rect x="816.2" y="643.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="819.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.04%)</title><rect x="816.9" y="643.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="819.9" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="817.4" y="643.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="820.4" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="817.7" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="820.7" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="818.0" y="675.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="821.0" y="686.0"></text>
</g>
<g>
<title>__send (5 samples, 0.06%)</title><rect x="818.3" y="675.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="821.3" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="819.1" y="675.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="822.1" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.05%)</title><rect x="819.4" y="707.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="822.4" y="718.0"></text>
</g>
<g>
<title>__send (937 samples, 11.71%)</title><rect x="820.0" y="707.0" width="138.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="823.0" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (898 samples, 11.23%)</title><rect x="825.8" y="691.0" width="132.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="828.8" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (898 samples, 11.23%)</title><rect x="825.8" y="675.0" width="132.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="828.8" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (872 samples, 10.90%)</title><rect x="829.6" y="659.0" width="128.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="832.6" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (870 samples, 10.88%)</title><rect x="829.9" y="643.0" width="128.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="832.9" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (864 samples, 10.80%)</title><rect x="830.8" y="627.0" width="127.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="833.8" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (856 samples, 10.70%)</title><rect x="832.0" y="611.0" width="126.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="835.0" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (844 samples, 10.55%)</title><rect x="833.7" y="595.0" width="124.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="836.7" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (840 samples, 10.50%)</title><rect x="834.3" y="579.0" width="123.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="837.3" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (813 samples, 10.16%)</title><rect x="838.3" y="563.0" width="119.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="841.3" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (789 samples, 9.86%)</title><rect x="841.9" y="547.0" width="116.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="844.9" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (759 samples, 9.49%)</title><rect x="846.3" y="531.0" width="111.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="849.3" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (713 samples, 8.91%)</title><rect x="853.1" y="515.0" width="105.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="856.1" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (659 samples, 8.24%)</title><rect x="861.0" y="499.0" width="97.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="864.0" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (643 samples, 8.04%)</title><rect x="863.4" y="483.0" width="94.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="866.4" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (636 samples, 7.95%)</title><rect x="864.4" y="467.0" width="93.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="867.4" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (624 samples, 7.80%)</title><rect x="866.2" y="451.0" width="92.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="869.2" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (615 samples, 7.69%)</title><rect x="867.5" y="435.0" width="90.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="870.5" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (599 samples, 7.49%)</title><rect x="869.9" y="419.0" width="88.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="872.9" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (576 samples, 7.20%)</title><rect x="873.3" y="403.0" width="84.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="876.3" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (556 samples, 6.95%)</title><rect x="876.2" y="387.0" width="82.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="879.2" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (541 samples, 6.76%)</title><rect x="878.4" y="371.0" width="79.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="881.4" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (526 samples, 6.58%)</title><rect x="880.7" y="355.0" width="77.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="883.7" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (506 samples, 6.33%)</title><rect x="883.6" y="339.0" width="74.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="886.6" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (492 samples, 6.15%)</title><rect x="885.7" y="323.0" width="72.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="888.7" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (479 samples, 5.99%)</title><rect x="887.6" y="307.0" width="70.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="890.6" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (473 samples, 5.91%)</title><rect x="888.5" y="291.0" width="69.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="891.5" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (465 samples, 5.81%)</title><rect x="889.7" y="275.0" width="68.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="892.7" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (453 samples, 5.66%)</title><rect x="891.4" y="259.0" width="66.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="894.4" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (448 samples, 5.60%)</title><rect x="892.2" y="243.0" width="66.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="895.2" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (444 samples, 5.55%)</title><rect x="892.8" y="227.0" width="65.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="895.8" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (442 samples, 5.53%)</title><rect x="893.0" y="211.0" width="65.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="896.0" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (434 samples, 5.43%)</title><rect x="894.2" y="195.0" width="64.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="897.2" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (418 samples, 5.23%)</title><rect x="896.6" y="179.0" width="61.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="899.6" y="190.0">[unkno..</text>
</g>
<g>
<title>[unknown] (397 samples, 4.96%)</title><rect x="899.7" y="163.0" width="58.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="902.7" y="174.0">[unkno..</text>
</g>
<g>
<title>[unknown] (377 samples, 4.71%)</title><rect x="902.6" y="147.0" width="55.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="905.6" y="158.0">[unkn..</text>
</g>
<g>
<title>[unknown] (327 samples, 4.09%)</title><rect x="910.0" y="131.0" width="48.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="913.0" y="142.0">[unk..</text>
</g>
<g>
<title>[unknown] (286 samples, 3.58%)</title><rect x="916.1" y="115.0" width="42.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="919.1" y="126.0">[unk..</text>
</g>
<g>
<title>[unknown] (270 samples, 3.38%)</title><rect x="918.4" y="99.0" width="39.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="921.4" y="110.0">[un..</text>
</g>
<g>
<title>[unknown] (268 samples, 3.35%)</title><rect x="918.7" y="83.0" width="39.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="921.7" y="94.0">[un..</text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="956.0" y="67.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="959.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="956.8" y="51.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="959.8" y="62.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="957.7" y="35.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="960.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.19%)</title><rect x="958.2" y="787.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="959.4" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="959.4" y="755.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.4" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,399 samples, 17.49%)</title><rect x="960.5" y="899.0" width="206.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.5" y="910.0">one/nio/server/SelectorThre..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="961.3" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="964.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 0.10%)</title><rect x="961.8" y="883.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.11%)</title><rect x="963.0" y="883.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.11%)</title><rect x="963.0" y="867.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (9 samples, 0.11%)</title><rect x="963.0" y="851.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (348 samples, 4.35%)</title><rect x="964.3" y="883.0" width="51.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.3" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (348 samples, 4.35%)</title><rect x="964.3" y="867.0" width="51.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.3" y="878.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.08%)</title><rect x="965.9" y="851.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="968.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (316 samples, 3.95%)</title><rect x="966.8" y="851.0" width="46.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="969.8" y="862.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="967.0" y="835.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="970.0" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.09%)</title><rect x="967.5" y="835.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="970.5" y="846.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="968.6" y="835.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="971.6" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="968.9" y="819.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="971.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait (300 samples, 3.75%)</title><rect x="969.2" y="835.0" width="44.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="972.2" y="846.0">epol..</text>
</g>
<g>
<title>[unknown] (243 samples, 3.04%)</title><rect x="977.6" y="819.0" width="35.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="980.6" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (243 samples, 3.04%)</title><rect x="977.6" y="803.0" width="35.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="980.6" y="814.0">[un..</text>
</g>
<g>
<title>[unknown] (223 samples, 2.79%)</title><rect x="980.5" y="787.0" width="32.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="983.5" y="798.0">[u..</text>
</g>
<g>
<title>[unknown] (222 samples, 2.78%)</title><rect x="980.7" y="771.0" width="32.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="983.7" y="782.0">[u..</text>
</g>
<g>
<title>[unknown] (214 samples, 2.68%)</title><rect x="981.9" y="755.0" width="31.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="984.9" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.24%)</title><rect x="987.0" y="739.0" width="26.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="990.0" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 1.99%)</title><rect x="990.0" y="723.0" width="23.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="993.0" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (123 samples, 1.54%)</title><rect x="995.3" y="707.0" width="18.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="998.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.30%)</title><rect x="998.1" y="691.0" width="15.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1001.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.84%)</title><rect x="1003.5" y="675.0" width="9.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1006.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1013.0" y="659.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1016.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1013.0" y="643.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1016.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1013.0" y="627.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1016.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1013.0" y="611.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1016.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1013.0" y="595.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1016.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1013.1" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1016.1" y="590.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="1013.4" y="851.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1016.4" y="862.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.11%)</title><rect x="1013.9" y="851.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1016.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.03%)</title><rect x="1015.2" y="851.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1018.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,016 samples, 12.70%)</title><rect x="1015.6" y="883.0" width="149.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.6" y="894.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,011 samples, 12.64%)</title><rect x="1016.4" y="867.0" width="149.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.4" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (665 samples, 8.31%)</title><rect x="1016.4" y="851.0" width="98.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.4" y="862.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (518 samples, 6.48%)</title><rect x="1020.9" y="835.0" width="76.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.9" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (518 samples, 6.48%)</title><rect x="1020.9" y="819.0" width="76.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.9" y="830.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (485 samples, 6.06%)</title><rect x="1021.1" y="803.0" width="71.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.1" y="814.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (55 samples, 0.69%)</title><rect x="1021.2" y="787.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.13%)</title><rect x="1025.7" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.13%)</title><rect x="1025.7" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.08%)</title><rect x="1026.3" y="739.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="1027.1" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="1027.1" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1028.0" y="771.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1031.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.08%)</title><rect x="1028.5" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1028.9" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1028.9" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1028.9" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.entity (429 samples, 5.36%)</title><rect x="1029.4" y="787.0" width="63.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.4" y="798.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.20%)</title><rect x="1029.8" y="771.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="1030.4" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="1030.4" y="739.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="1031.6" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="1031.6" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1034.6" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="1031.6" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$RF.of (17 samples, 0.21%)</title><rect x="1032.2" y="771.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (16 samples, 0.20%)</title><rect x="1032.2" y="755.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (9 samples, 0.11%)</title><rect x="1032.7" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (9 samples, 0.11%)</title><rect x="1032.7" y="723.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9 samples, 0.11%)</title><rect x="1032.7" y="707.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9 samples, 0.11%)</title><rect x="1032.7" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (9 samples, 0.11%)</title><rect x="1032.7" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.11%)</title><rect x="1032.7" y="659.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.11%)</title><rect x="1032.7" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3 samples, 0.04%)</title><rect x="1034.1" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.asyncExecute (393 samples, 4.91%)</title><rect x="1034.7" y="771.0" width="57.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.7" y="782.0">ru/mai..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (393 samples, 4.91%)</title><rect x="1034.7" y="755.0" width="57.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.7" y="766.0">one/ni..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (393 samples, 4.91%)</title><rect x="1034.7" y="739.0" width="57.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1037.7" y="750.0">java/u..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (392 samples, 4.90%)</title><rect x="1034.8" y="723.0" width="57.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.8" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (392 samples, 4.90%)</title><rect x="1034.8" y="707.0" width="57.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.8" y="718.0">one/ni..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (392 samples, 4.90%)</title><rect x="1034.8" y="691.0" width="57.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.8" y="702.0">java/u..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.03%)</title><rect x="1037.5" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (372 samples, 4.65%)</title><rect x="1037.8" y="675.0" width="54.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.8" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (368 samples, 4.60%)</title><rect x="1037.8" y="659.0" width="54.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.8" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (368 samples, 4.60%)</title><rect x="1037.8" y="643.0" width="54.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.8" y="654.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (351 samples, 4.39%)</title><rect x="1040.3" y="627.0" width="51.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.3" y="638.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (4 samples, 0.05%)</title><rect x="1041.0" y="611.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.0" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.03%)</title><rect x="1041.6" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1044.6" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.06%)</title><rect x="1041.9" y="611.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.9" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="1042.6" y="611.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1045.6" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.04%)</title><rect x="1043.2" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (58 samples, 0.73%)</title><rect x="1043.7" y="611.0" width="8.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1046.7" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.03%)</title><rect x="1045.7" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1048.7" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.04%)</title><rect x="1046.0" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1049.0" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.11%)</title><rect x="1046.5" y="595.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.5" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1047.8" y="595.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.8" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (16 samples, 0.20%)</title><rect x="1048.1" y="595.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1051.1" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.04%)</title><rect x="1050.6" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1053.6" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="1051.0" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1054.0" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.06%)</title><rect x="1051.5" y="595.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1054.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="1052.2" y="611.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1055.2" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.03%)</title><rect x="1053.0" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.0" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (263 samples, 3.29%)</title><rect x="1053.3" y="611.0" width="38.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1056.3" y="622.0">pth..</text>
</g>
<g>
<title>[unknown] (221 samples, 2.76%)</title><rect x="1059.4" y="595.0" width="32.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1062.4" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (221 samples, 2.76%)</title><rect x="1059.4" y="579.0" width="32.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1062.4" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (202 samples, 2.53%)</title><rect x="1062.2" y="563.0" width="29.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1065.2" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (201 samples, 2.51%)</title><rect x="1062.4" y="547.0" width="29.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1065.4" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.50%)</title><rect x="1062.5" y="531.0" width="29.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1065.5" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.26%)</title><rect x="1065.3" y="515.0" width="26.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1068.3" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (163 samples, 2.04%)</title><rect x="1068.0" y="499.0" width="24.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1071.0" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.98%)</title><rect x="1068.7" y="483.0" width="23.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1071.7" y="494.0">[..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (4 samples, 0.05%)</title><rect x="1092.0" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="1092.3" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (32 samples, 0.40%)</title><rect x="1092.6" y="803.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.40%)</title><rect x="1092.6" y="787.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.11%)</title><rect x="1092.6" y="771.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (23 samples, 0.29%)</title><rect x="1094.0" y="771.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1097.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (23 samples, 0.29%)</title><rect x="1094.0" y="755.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1097.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (23 samples, 0.29%)</title><rect x="1094.0" y="739.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1096.8" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (44 samples, 0.55%)</title><rect x="1097.4" y="835.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1099.1" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1099.1" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1099.1" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1099.1" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="1099.3" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.24%)</title><rect x="1099.6" y="819.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.23%)</title><rect x="1099.7" y="803.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (10 samples, 0.13%)</title><rect x="1102.4" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (24 samples, 0.30%)</title><rect x="1103.8" y="835.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.18%)</title><rect x="1105.3" y="819.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.18%)</title><rect x="1105.3" y="803.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.3" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="1107.1" y="787.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1110.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (48 samples, 0.60%)</title><rect x="1107.4" y="835.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.4" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (10 samples, 0.13%)</title><rect x="1108.6" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.6" y="830.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.13%)</title><rect x="1110.0" y="819.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1113.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.25%)</title><rect x="1111.5" y="819.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.05%)</title><rect x="1114.5" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (342 samples, 4.28%)</title><rect x="1115.1" y="851.0" width="50.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.1" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (331 samples, 4.14%)</title><rect x="1115.9" y="835.0" width="48.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.9" y="846.0">one/..</text>
</g>
<g>
<title>[unknown] (70 samples, 0.88%)</title><rect x="1117.3" y="819.0" width="10.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1120.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.88%)</title><rect x="1117.3" y="803.0" width="10.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1120.3" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (62 samples, 0.78%)</title><rect x="1117.3" y="787.0" width="9.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1120.3" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.06%)</title><rect x="1117.9" y="771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1120.9" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="1118.6" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.04%)</title><rect x="1119.2" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.2" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (10 samples, 0.13%)</title><rect x="1119.6" y="771.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1122.6" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1121.1" y="771.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1124.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (28 samples, 0.35%)</title><rect x="1121.4" y="771.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1124.4" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (5 samples, 0.06%)</title><rect x="1121.7" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.7" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (11 samples, 0.14%)</title><rect x="1122.6" y="755.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.6" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.11%)</title><rect x="1124.2" y="755.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1127.2" y="766.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.08%)</title><rect x="1125.5" y="771.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1128.5" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="1126.4" y="787.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1129.4" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="1126.7" y="787.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1129.7" y="798.0"></text>
</g>
<g>
<title>recv (4 samples, 0.05%)</title><rect x="1127.0" y="787.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1130.0" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="1127.6" y="819.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1130.6" y="830.0"></text>
</g>
<g>
<title>recv (249 samples, 3.11%)</title><rect x="1128.0" y="819.0" width="36.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1131.0" y="830.0">recv</text>
</g>
<g>
<title>[unknown] (217 samples, 2.71%)</title><rect x="1132.8" y="803.0" width="32.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1135.8" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (217 samples, 2.71%)</title><rect x="1132.8" y="787.0" width="32.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1135.8" y="798.0">[u..</text>
</g>
<g>
<title>[unknown] (190 samples, 2.38%)</title><rect x="1136.7" y="771.0" width="28.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.7" y="782.0">[u..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.36%)</title><rect x="1136.9" y="755.0" width="27.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1139.9" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (180 samples, 2.25%)</title><rect x="1138.2" y="739.0" width="26.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1141.2" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.21%)</title><rect x="1138.7" y="723.0" width="26.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1141.7" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.13%)</title><rect x="1139.7" y="707.0" width="25.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1142.7" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (139 samples, 1.74%)</title><rect x="1144.3" y="691.0" width="20.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1147.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.30%)</title><rect x="1149.4" y="675.0" width="15.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1152.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.88%)</title><rect x="1154.4" y="659.0" width="10.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1157.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.63%)</title><rect x="1157.4" y="643.0" width="7.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1160.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="1160.9" y="627.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1163.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.06%)</title><rect x="1164.8" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.8" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.11%)</title><rect x="1165.5" y="883.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1165.8" y="867.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1168.8" y="878.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="1166.1" y="867.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1169.1" y="878.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="1166.1" y="851.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1169.1" y="862.0"></text>
</g>
<g>
<title>start_thread (156 samples, 1.95%)</title><rect x="1167.0" y="899.0" width="23.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1170.0" y="910.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (156 samples, 1.95%)</title><rect x="1167.0" y="883.0" width="23.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1170.0" y="894.0">t..</text>
</g>
<g>
<title>Thread::call_run() (156 samples, 1.95%)</title><rect x="1167.0" y="867.0" width="23.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.0" y="878.0">T..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.04%)</title><rect x="1167.0" y="851.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.0" y="862.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (3 samples, 0.04%)</title><rect x="1167.0" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.0" y="846.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1167.1" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.1" y="830.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.03%)</title><rect x="1167.1" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>GangWorker::loop() (147 samples, 1.84%)</title><rect x="1167.4" y="851.0" width="21.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.4" y="862.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (144 samples, 1.80%)</title><rect x="1167.4" y="835.0" width="21.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.4" y="846.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (16 samples, 0.20%)</title><rect x="1167.4" y="819.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.4" y="830.0"></text>
</g>
<g>
<title>SpinPause (14 samples, 0.18%)</title><rect x="1167.7" y="803.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1170.7" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (125 samples, 1.56%)</title><rect x="1169.8" y="819.0" width="18.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.8" y="830.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (125 samples, 1.56%)</title><rect x="1169.8" y="803.0" width="18.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.8" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (124 samples, 1.55%)</title><rect x="1169.8" y="787.0" width="18.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.8" y="798.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (124 samples, 1.55%)</title><rect x="1169.8" y="771.0" width="18.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.8" y="782.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (123 samples, 1.54%)</title><rect x="1169.8" y="755.0" width="18.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.8" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (52 samples, 0.65%)</title><rect x="1170.2" y="739.0" width="7.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.2" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (31 samples, 0.39%)</title><rect x="1173.0" y="723.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.0" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.15%)</title><rect x="1175.8" y="707.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.8" y="718.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (10 samples, 0.13%)</title><rect x="1176.1" y="691.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.1" y="702.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (66 samples, 0.83%)</title><rect x="1177.9" y="739.0" width="9.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.9" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (16 samples, 0.20%)</title><rect x="1180.3" y="723.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="734.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (13 samples, 0.16%)</title><rect x="1180.7" y="707.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.7" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (2 samples, 0.03%)</title><rect x="1181.7" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.7" y="702.0"></text>
</g>
<g>
<title>G1ContiguousSpace::used_region() const (2 samples, 0.03%)</title><rect x="1182.0" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.0" y="702.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (2 samples, 0.03%)</title><rect x="1182.3" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.3" y="702.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (6 samples, 0.08%)</title><rect x="1182.6" y="723.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.6" y="734.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="1183.8" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.8" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (23 samples, 0.29%)</title><rect x="1184.2" y="723.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.2" y="734.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (14 samples, 0.18%)</title><rect x="1185.6" y="707.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1187.6" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.6" y="750.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1188.4" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.03%)</title><rect x="1188.4" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1188.4" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="798.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.03%)</title><rect x="1188.4" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="782.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1188.8" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.8" y="846.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.03%)</title><rect x="1188.8" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.8" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.04%)</title><rect x="1189.1" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.04%)</title><rect x="1189.1" y="835.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (3 samples, 0.04%)</title><rect x="1189.1" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.04%)</title><rect x="1189.1" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.04%)</title><rect x="1189.1" y="787.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.04%)</title><rect x="1189.1" y="771.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
</g>
</svg>
