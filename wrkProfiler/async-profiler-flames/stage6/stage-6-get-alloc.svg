<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (23,815 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (14,872 samples, 62.45%)</title><rect x="10.1" y="707.0" width="736.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.1" y="718.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,872 samples, 62.45%)</title><rect x="10.1" y="691.0" width="736.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.1" y="702.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,872 samples, 62.45%)</title><rect x="10.1" y="675.0" width="736.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.1" y="686.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,381 samples, 14.20%)</title><rect x="10.1" y="659.0" width="167.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.1" y="670.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,381 samples, 14.20%)</title><rect x="10.1" y="643.0" width="167.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.1" y="654.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,381 samples, 14.20%)</title><rect x="10.1" y="627.0" width="167.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.1" y="638.0">java/util/concurrent/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (15 samples, 0.06%)</title><rect x="10.1" y="611.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/9819169.apply (3,365 samples, 14.13%)</title><rect x="10.9" y="611.0" width="166.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.9" y="622.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,365 samples, 14.13%)</title><rect x="10.9" y="595.0" width="166.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="606.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,365 samples, 14.13%)</title><rect x="10.9" y="579.0" width="166.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.9" y="590.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="10.9" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="10.9" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.get$Lambda (9 samples, 0.04%)</title><rect x="10.9" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$294 (9 samples, 0.04%)</title><rect x="10.9" y="515.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (28 samples, 0.12%)</title><rect x="11.6" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (28 samples, 0.12%)</title><rect x="11.6" y="547.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (15 samples, 0.06%)</title><rect x="11.6" y="531.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="14.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="12.3" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="12.3" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="12.3" y="499.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="15.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (75 samples, 0.31%)</title><rect x="13.0" y="563.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (75 samples, 0.31%)</title><rect x="13.0" y="547.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (44 samples, 0.18%)</title><rect x="13.0" y="531.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="16.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.13%)</title><rect x="15.2" y="531.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.13%)</title><rect x="15.2" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.13%)</title><rect x="15.2" y="499.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="18.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,248 samples, 13.64%)</title><rect x="16.7" y="563.0" width="160.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.7" y="574.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,248 samples, 13.64%)</title><rect x="16.7" y="547.0" width="160.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.7" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,248 samples, 13.64%)</title><rect x="16.7" y="531.0" width="160.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="542.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.24%)</title><rect x="16.7" y="515.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.24%)</title><rect x="16.7" y="499.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.get$Lambda (40 samples, 0.17%)</title><rect x="16.7" y="483.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$172 (40 samples, 0.17%)</title><rect x="16.7" y="467.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.get$Lambda (7 samples, 0.03%)</title><rect x="18.7" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$173 (7 samples, 0.03%)</title><rect x="18.7" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="21.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.get$Lambda (10 samples, 0.04%)</title><rect x="19.0" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$248 (10 samples, 0.04%)</title><rect x="19.0" y="467.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="22.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,002 samples, 8.41%)</title><rect x="19.5" y="515.0" width="99.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.5" y="526.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,002 samples, 8.41%)</title><rect x="19.5" y="499.0" width="99.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.5" y="510.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,992 samples, 8.36%)</title><rect x="19.5" y="483.0" width="98.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.5" y="494.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.apply (1,992 samples, 8.36%)</title><rect x="19.5" y="467.0" width="98.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.5" y="478.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,992 samples, 8.36%)</title><rect x="19.5" y="451.0" width="98.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.5" y="462.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,992 samples, 8.36%)</title><rect x="19.5" y="435.0" width="98.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.5" y="446.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.apply (1,992 samples, 8.36%)</title><rect x="19.5" y="419.0" width="98.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.5" y="430.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,992 samples, 8.36%)</title><rect x="19.5" y="403.0" width="98.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.5" y="414.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="19.5" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="19.5" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.get$Lambda (7 samples, 0.03%)</title><rect x="19.5" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$286 (7 samples, 0.03%)</title><rect x="19.5" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="22.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (44 samples, 0.18%)</title><rect x="19.9" y="387.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (44 samples, 0.18%)</title><rect x="19.9" y="371.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (21 samples, 0.09%)</title><rect x="19.9" y="355.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.04%)</title><rect x="20.9" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.apply (10 samples, 0.04%)</title><rect x="20.9" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (10 samples, 0.04%)</title><rect x="20.9" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10 samples, 0.04%)</title><rect x="20.9" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.apply (10 samples, 0.04%)</title><rect x="20.9" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10 samples, 0.04%)</title><rect x="20.9" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (7 samples, 0.03%)</title><rect x="21.0" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="21.4" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="21.4" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="21.4" y="323.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="24.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (35 samples, 0.15%)</title><rect x="22.0" y="387.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (35 samples, 0.15%)</title><rect x="22.0" y="371.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (19 samples, 0.08%)</title><rect x="22.0" y="355.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.07%)</title><rect x="23.0" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.07%)</title><rect x="23.0" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.07%)</title><rect x="23.0" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="26.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,906 samples, 8.00%)</title><rect x="23.8" y="387.0" width="94.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.8" y="398.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="23.8" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="23.8" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.get$Lambda (7 samples, 0.03%)</title><rect x="23.8" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$280 (7 samples, 0.03%)</title><rect x="23.8" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/1958570298.get$Lambda (9 samples, 0.04%)</title><rect x="24.1" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$283 (9 samples, 0.04%)</title><rect x="24.1" y="323.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,607 samples, 6.75%)</title><rect x="24.6" y="371.0" width="79.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.6" y="382.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,607 samples, 6.75%)</title><rect x="24.6" y="355.0" width="79.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.6" y="366.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (17 samples, 0.07%)</title><rect x="24.6" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.apply (1,567 samples, 6.58%)</title><rect x="25.4" y="339.0" width="77.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.4" y="350.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,567 samples, 6.58%)</title><rect x="25.4" y="323.0" width="77.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.4" y="334.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="25.4" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="25.4" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$297/37694024.get$Lambda (6 samples, 0.03%)</title><rect x="25.4" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$297 (6 samples, 0.03%)</title><rect x="25.4" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="28.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (40 samples, 0.17%)</title><rect x="25.7" y="307.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (40 samples, 0.17%)</title><rect x="25.7" y="291.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.10%)</title><rect x="25.7" y="275.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="28.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="26.9" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="26.9" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.06%)</title><rect x="26.9" y="243.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="29.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="27.7" y="307.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="30.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (24 samples, 0.10%)</title><rect x="28.2" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (8 samples, 0.03%)</title><rect x="28.2" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.07%)</title><rect x="28.6" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (12 samples, 0.05%)</title><rect x="28.6" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (12 samples, 0.05%)</title><rect x="28.6" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (12 samples, 0.05%)</title><rect x="28.6" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (12 samples, 0.05%)</title><rect x="28.6" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (12 samples, 0.05%)</title><rect x="28.6" y="211.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="31.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (48 samples, 0.20%)</title><rect x="29.4" y="307.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (48 samples, 0.20%)</title><rect x="29.4" y="291.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (18 samples, 0.08%)</title><rect x="29.4" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (18 samples, 0.08%)</title><rect x="29.4" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (18 samples, 0.08%)</title><rect x="29.4" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (18 samples, 0.08%)</title><rect x="29.4" y="227.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="32.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.13%)</title><rect x="30.3" y="275.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.13%)</title><rect x="30.3" y="259.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (24 samples, 0.10%)</title><rect x="30.3" y="243.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="33.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.03%)</title><rect x="31.5" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (6 samples, 0.03%)</title><rect x="31.5" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="34.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,438 samples, 6.04%)</title><rect x="31.8" y="307.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.8" y="318.0">jdk/inte..</text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.06%)</title><rect x="31.8" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="34.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (124 samples, 0.52%)</title><rect x="32.5" y="291.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (124 samples, 0.52%)</title><rect x="32.5" y="275.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (124 samples, 0.52%)</title><rect x="32.5" y="259.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.5" y="270.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.52%)</title><rect x="32.5" y="243.0" width="6.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="35.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (45 samples, 0.19%)</title><rect x="38.6" y="291.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.6" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (45 samples, 0.19%)</title><rect x="38.6" y="275.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.6" y="286.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.19%)</title><rect x="38.6" y="259.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="41.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (129 samples, 0.54%)</title><rect x="40.9" y="291.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (129 samples, 0.54%)</title><rect x="40.9" y="275.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="40.9" y="259.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="43.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (120 samples, 0.50%)</title><rect x="41.3" y="259.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.3" y="270.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.50%)</title><rect x="41.3" y="243.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="44.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.12%)</title><rect x="47.3" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.12%)</title><rect x="47.3" y="275.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.12%)</title><rect x="47.3" y="259.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="50.3" y="270.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.04%)</title><rect x="48.7" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.7" y="302.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.04%)</title><rect x="48.7" y="275.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="51.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (933 samples, 3.92%)</title><rect x="49.1" y="291.0" width="46.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.1" y="302.0">jdk/..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (21 samples, 0.09%)</title><rect x="49.1" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="49.1" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="49.1" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.get$Lambda (21 samples, 0.09%)</title><rect x="49.1" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.1" y="238.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$302 (21 samples, 0.09%)</title><rect x="49.1" y="211.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="52.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (418 samples, 1.76%)</title><rect x="50.2" y="275.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (204 samples, 0.86%)</title><rect x="50.2" y="259.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.2" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (204 samples, 0.86%)</title><rect x="50.2" y="243.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (204 samples, 0.86%)</title><rect x="50.2" y="227.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (204 samples, 0.86%)</title><rect x="50.2" y="211.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.2" y="222.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.85%)</title><rect x="50.2" y="195.0" width="10.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="53.2" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (47 samples, 0.20%)</title><rect x="60.3" y="259.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (17 samples, 0.07%)</title><rect x="60.3" y="243.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="63.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (30 samples, 0.13%)</title><rect x="61.1" y="243.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (30 samples, 0.13%)</title><rect x="61.1" y="227.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (30 samples, 0.13%)</title><rect x="61.1" y="211.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="64.1" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (35 samples, 0.15%)</title><rect x="62.6" y="259.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.6" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (20 samples, 0.08%)</title><rect x="62.6" y="243.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="65.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (15 samples, 0.06%)</title><rect x="63.6" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (15 samples, 0.06%)</title><rect x="63.6" y="227.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="66.6" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.test (132 samples, 0.55%)</title><rect x="64.4" y="259.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.4" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (132 samples, 0.55%)</title><rect x="64.4" y="243.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1995619265.test (132 samples, 0.55%)</title><rect x="64.4" y="227.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (132 samples, 0.55%)</title><rect x="64.4" y="211.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/20094719.test (132 samples, 0.55%)</title><rect x="64.4" y="195.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.4" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (132 samples, 0.55%)</title><rect x="64.4" y="179.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/324457684.test (132 samples, 0.55%)</title><rect x="64.4" y="163.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (132 samples, 0.55%)</title><rect x="64.4" y="147.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (132 samples, 0.55%)</title><rect x="64.4" y="131.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (132 samples, 0.55%)</title><rect x="64.4" y="115.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.31%)</title><rect x="64.4" y="99.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="67.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.25%)</title><rect x="68.0" y="99.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.0" y="110.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.25%)</title><rect x="68.0" y="83.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="71.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (494 samples, 2.07%)</title><rect x="70.9" y="275.0" width="24.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.9" y="286.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (494 samples, 2.07%)</title><rect x="70.9" y="259.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.9" y="270.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (494 samples, 2.07%)</title><rect x="70.9" y="243.0" width="24.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.9" y="254.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (10 samples, 0.04%)</title><rect x="70.9" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="73.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="71.4" y="227.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="74.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (36 samples, 0.15%)</title><rect x="72.1" y="227.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="75.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.04%)</title><rect x="73.9" y="227.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.07%)</title><rect x="74.4" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.07%)</title><rect x="74.4" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (17 samples, 0.07%)</title><rect x="74.4" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.4" y="206.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (17 samples, 0.07%)</title><rect x="74.4" y="179.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="77.4" y="190.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (6 samples, 0.03%)</title><rect x="75.2" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.2" y="238.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (6 samples, 0.03%)</title><rect x="75.2" y="211.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="78.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (373 samples, 1.57%)</title><rect x="75.5" y="227.0" width="18.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.5" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (373 samples, 1.57%)</title><rect x="75.5" y="211.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (373 samples, 1.57%)</title><rect x="75.5" y="195.0" width="18.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.33%)</title><rect x="75.5" y="179.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.33%)</title><rect x="75.5" y="163.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.5" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (78 samples, 0.33%)</title><rect x="75.5" y="147.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.5" y="158.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (78 samples, 0.33%)</title><rect x="75.5" y="131.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="78.5" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (28 samples, 0.12%)</title><rect x="79.4" y="179.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.4" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (28 samples, 0.12%)</title><rect x="79.4" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (28 samples, 0.12%)</title><rect x="79.4" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.12%)</title><rect x="79.4" y="131.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.12%)</title><rect x="79.4" y="115.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.12%)</title><rect x="79.4" y="99.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.12%)</title><rect x="79.4" y="83.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.12%)</title><rect x="79.4" y="67.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.4" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.12%)</title><rect x="79.4" y="51.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="82.4" y="62.0"></text>
</g>
<g>
<title>java/util/List.copyOf (148 samples, 0.62%)</title><rect x="80.8" y="179.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.8" y="190.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (148 samples, 0.62%)</title><rect x="80.8" y="163.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (72 samples, 0.30%)</title><rect x="80.8" y="147.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.30%)</title><rect x="80.8" y="131.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.8" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.30%)</title><rect x="80.8" y="115.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="83.8" y="126.0"></text>
</g>
<g>
<title>java/util/List.of (76 samples, 0.32%)</title><rect x="84.3" y="147.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.3" y="158.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (76 samples, 0.32%)</title><rect x="84.3" y="131.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="87.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (119 samples, 0.50%)</title><rect x="88.1" y="179.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.1" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (119 samples, 0.50%)</title><rect x="88.1" y="163.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="91.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.12%)</title><rect x="94.0" y="227.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.0" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.12%)</title><rect x="94.0" y="211.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="97.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (40 samples, 0.17%)</title><rect x="95.4" y="291.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.15%)</title><rect x="95.6" y="275.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (35 samples, 0.15%)</title><rect x="95.6" y="259.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (35 samples, 0.15%)</title><rect x="95.6" y="243.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.15%)</title><rect x="95.6" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.08%)</title><rect x="95.6" y="211.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.08%)</title><rect x="95.6" y="195.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="98.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.07%)</title><rect x="96.5" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.07%)</title><rect x="96.5" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.5" y="206.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="96.5" y="179.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="99.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (22 samples, 0.09%)</title><rect x="97.4" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (22 samples, 0.09%)</title><rect x="97.4" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.09%)</title><rect x="97.4" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (22 samples, 0.09%)</title><rect x="97.4" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (22 samples, 0.09%)</title><rect x="97.4" y="227.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="97.4" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.05%)</title><rect x="97.4" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="97.4" y="179.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="100.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.04%)</title><rect x="97.9" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.04%)</title><rect x="97.9" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.9" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="97.9" y="163.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="100.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (93 samples, 0.39%)</title><rect x="98.4" y="291.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.4" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.10%)</title><rect x="98.4" y="275.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="101.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (23 samples, 0.10%)</title><rect x="99.6" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.10%)</title><rect x="99.6" y="259.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="102.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (47 samples, 0.20%)</title><rect x="100.7" y="275.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.20%)</title><rect x="100.7" y="259.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="103.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="103.1" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="103.1" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="103.1" y="307.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="106.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (51 samples, 0.21%)</title><rect x="104.2" y="371.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="107.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="106.7" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="109.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (218 samples, 0.92%)</title><rect x="107.4" y="371.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="107.4" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="107.4" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1865137363.get$Lambda (6 samples, 0.03%)</title><rect x="107.4" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (6 samples, 0.03%)</title><rect x="107.4" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="110.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (21 samples, 0.09%)</title><rect x="107.9" y="355.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="110.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (11 samples, 0.05%)</title><rect x="108.9" y="355.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="111.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (17 samples, 0.07%)</title><rect x="109.5" y="355.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="112.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (73 samples, 0.31%)</title><rect x="110.3" y="355.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (73 samples, 0.31%)</title><rect x="110.3" y="339.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (73 samples, 0.31%)</title><rect x="110.3" y="323.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (73 samples, 0.31%)</title><rect x="110.3" y="307.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (73 samples, 0.31%)</title><rect x="110.3" y="291.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (73 samples, 0.31%)</title><rect x="110.3" y="275.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (73 samples, 0.31%)</title><rect x="110.3" y="259.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (73 samples, 0.31%)</title><rect x="110.3" y="243.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (73 samples, 0.31%)</title><rect x="110.3" y="227.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="110.3" y="211.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="110.3" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (8 samples, 0.03%)</title><rect x="110.3" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$264 (8 samples, 0.03%)</title><rect x="110.3" y="163.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="113.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$267/401982671.get$Lambda (23 samples, 0.10%)</title><rect x="110.7" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$267 (23 samples, 0.10%)</title><rect x="110.7" y="163.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="113.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (19 samples, 0.08%)</title><rect x="111.9" y="211.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="114.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (23 samples, 0.10%)</title><rect x="112.8" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (23 samples, 0.10%)</title><rect x="112.8" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (20 samples, 0.08%)</title><rect x="113.0" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (20 samples, 0.08%)</title><rect x="113.0" y="163.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="116.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (70 samples, 0.29%)</title><rect x="114.0" y="355.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.0" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (19 samples, 0.08%)</title><rect x="114.0" y="339.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="117.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (28 samples, 0.12%)</title><rect x="114.9" y="339.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="117.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.10%)</title><rect x="116.3" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.10%)</title><rect x="116.3" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.3" y="334.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="116.3" y="307.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="119.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (16 samples, 0.07%)</title><rect x="117.4" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.07%)</title><rect x="117.4" y="339.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="120.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="118.2" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="118.2" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="118.2" y="451.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="121.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (30 samples, 0.13%)</title><rect x="118.7" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (30 samples, 0.13%)</title><rect x="118.7" y="499.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (13 samples, 0.05%)</title><rect x="118.7" y="483.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="121.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="119.4" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="119.4" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.07%)</title><rect x="119.4" y="451.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="122.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,159 samples, 4.87%)</title><rect x="120.2" y="515.0" width="57.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.2" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="120.2" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="120.2" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$242/1842297967.get$Lambda (17 samples, 0.07%)</title><rect x="120.2" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$242 (17 samples, 0.07%)</title><rect x="120.2" y="451.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="123.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/687077497.get$Lambda (7 samples, 0.03%)</title><rect x="121.0" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$245 (7 samples, 0.03%)</title><rect x="121.0" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="124.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (26 samples, 0.11%)</title><rect x="121.4" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (26 samples, 0.11%)</title><rect x="121.4" y="483.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/687077497.apply (14 samples, 0.06%)</title><rect x="121.4" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (14 samples, 0.06%)</title><rect x="121.4" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (14 samples, 0.06%)</title><rect x="121.4" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="121.4" y="419.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="124.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="122.1" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="122.1" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="122.1" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="125.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.08%)</title><rect x="122.7" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.08%)</title><rect x="122.7" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="122.7" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="122.7" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="122.7" y="435.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="125.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,091 samples, 4.58%)</title><rect x="123.6" y="499.0" width="54.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.6" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="123.6" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="123.6" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.get$Lambda (7 samples, 0.03%)</title><rect x="123.6" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$177 (7 samples, 0.03%)</title><rect x="123.6" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="126.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,014 samples, 4.26%)</title><rect x="123.9" y="483.0" width="50.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.9" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,014 samples, 4.26%)</title><rect x="123.9" y="467.0" width="50.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.9" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (992 samples, 4.17%)</title><rect x="123.9" y="451.0" width="49.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.9" y="462.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.apply (992 samples, 4.17%)</title><rect x="123.9" y="435.0" width="49.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.9" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (992 samples, 4.17%)</title><rect x="123.9" y="419.0" width="49.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.9" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (992 samples, 4.17%)</title><rect x="123.9" y="403.0" width="49.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.9" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="123.9" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="123.9" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.get$Lambda (7 samples, 0.03%)</title><rect x="123.9" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$236 (7 samples, 0.03%)</title><rect x="123.9" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="126.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (395 samples, 1.66%)</title><rect x="124.3" y="387.0" width="19.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (395 samples, 1.66%)</title><rect x="124.3" y="371.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (395 samples, 1.66%)</title><rect x="124.3" y="355.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.apply (387 samples, 1.63%)</title><rect x="124.3" y="339.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (387 samples, 1.63%)</title><rect x="124.3" y="323.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (387 samples, 1.63%)</title><rect x="124.3" y="307.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (387 samples, 1.63%)</title><rect x="124.3" y="291.0" width="19.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (239 samples, 1.00%)</title><rect x="124.3" y="275.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.3" y="286.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (77 samples, 0.32%)</title><rect x="124.3" y="259.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.05%)</title><rect x="124.3" y="243.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="127.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.12%)</title><rect x="124.9" y="243.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.12%)</title><rect x="124.9" y="227.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.9" y="238.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.12%)</title><rect x="124.9" y="211.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="127.9" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (35 samples, 0.15%)</title><rect x="126.3" y="243.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.3" y="254.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.15%)</title><rect x="126.3" y="227.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="129.3" y="238.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (11 samples, 0.05%)</title><rect x="128.1" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.1" y="270.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (11 samples, 0.05%)</title><rect x="128.1" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="131.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (103 samples, 0.43%)</title><rect x="128.6" y="259.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (7 samples, 0.03%)</title><rect x="128.6" y="243.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="131.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (72 samples, 0.30%)</title><rect x="129.0" y="243.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (72 samples, 0.30%)</title><rect x="129.0" y="227.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (47 samples, 0.20%)</title><rect x="129.0" y="211.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.20%)</title><rect x="129.0" y="195.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.get$Lambda (47 samples, 0.20%)</title><rect x="129.0" y="179.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (47 samples, 0.20%)</title><rect x="129.0" y="163.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="132.0" y="174.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.10%)</title><rect x="131.3" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.run (25 samples, 0.10%)</title><rect x="131.3" y="195.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (25 samples, 0.10%)</title><rect x="131.3" y="179.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.3" y="190.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (25 samples, 0.10%)</title><rect x="131.3" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.3" y="174.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (25 samples, 0.10%)</title><rect x="131.3" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Integer (25 samples, 0.10%)</title><rect x="131.3" y="131.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="134.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (24 samples, 0.10%)</title><rect x="132.5" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (24 samples, 0.10%)</title><rect x="132.5" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.5" y="238.0"></text>
</g>
<g>
<title>int[] (24 samples, 0.10%)</title><rect x="132.5" y="211.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="135.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (48 samples, 0.20%)</title><rect x="133.7" y="259.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.7" y="270.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="133.7" y="243.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="136.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.10%)</title><rect x="134.9" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.10%)</title><rect x="134.9" y="227.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.10%)</title><rect x="134.9" y="211.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="137.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (148 samples, 0.62%)</title><rect x="136.1" y="275.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.1" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.13%)</title><rect x="136.1" y="259.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="139.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (49 samples, 0.21%)</title><rect x="137.7" y="259.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.21%)</title><rect x="137.7" y="243.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="140.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (67 samples, 0.28%)</title><rect x="140.1" y="259.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (67 samples, 0.28%)</title><rect x="140.1" y="243.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="143.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="143.4" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="143.4" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="143.4" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="146.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (590 samples, 2.48%)</title><rect x="143.8" y="387.0" width="29.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.8" y="398.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (40 samples, 0.17%)</title><rect x="143.8" y="371.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="146.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (538 samples, 2.26%)</title><rect x="145.8" y="371.0" width="26.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="382.0">j..</text>
</g>
<g>
<title>java.lang.Object (13 samples, 0.05%)</title><rect x="145.8" y="355.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.8" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (11 samples, 0.05%)</title><rect x="146.5" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="149.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (8 samples, 0.03%)</title><rect x="147.0" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="150.0" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.10%)</title><rect x="147.4" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.4" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (23 samples, 0.10%)</title><rect x="147.4" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.4" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (23 samples, 0.10%)</title><rect x="147.4" y="323.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="150.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (13 samples, 0.05%)</title><rect x="148.5" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.05%)</title><rect x="148.5" y="339.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="151.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (42 samples, 0.18%)</title><rect x="149.2" y="355.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="152.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (21 samples, 0.09%)</title><rect x="151.3" y="355.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="154.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (36 samples, 0.15%)</title><rect x="152.3" y="355.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="155.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.11%)</title><rect x="154.1" y="355.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="157.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (171 samples, 0.72%)</title><rect x="155.4" y="355.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (9 samples, 0.04%)</title><rect x="155.4" y="339.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="158.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (9 samples, 0.04%)</title><rect x="155.9" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="158.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (14 samples, 0.06%)</title><rect x="156.3" y="339.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="159.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (12 samples, 0.05%)</title><rect x="157.0" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="160.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="157.6" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="157.6" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.get$Lambda (9 samples, 0.04%)</title><rect x="157.6" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$231 (9 samples, 0.04%)</title><rect x="157.6" y="291.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="160.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (16 samples, 0.07%)</title><rect x="158.1" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.07%)</title><rect x="158.1" y="323.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="161.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (12 samples, 0.05%)</title><rect x="158.8" y="339.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="161.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="159.4" y="339.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="162.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (72 samples, 0.30%)</title><rect x="160.3" y="339.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (12 samples, 0.05%)</title><rect x="160.3" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="163.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (16 samples, 0.07%)</title><rect x="160.9" y="323.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="163.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (15 samples, 0.06%)</title><rect x="161.7" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (15 samples, 0.06%)</title><rect x="161.7" y="307.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="164.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (29 samples, 0.12%)</title><rect x="162.5" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.03%)</title><rect x="162.5" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="165.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (7 samples, 0.03%)</title><rect x="162.9" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="165.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (14 samples, 0.06%)</title><rect x="163.2" y="307.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="166.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (113 samples, 0.47%)</title><rect x="163.9" y="355.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (8 samples, 0.03%)</title><rect x="163.9" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="166.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (15 samples, 0.06%)</title><rect x="164.3" y="339.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="167.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (6 samples, 0.03%)</title><rect x="165.0" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="168.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (11 samples, 0.05%)</title><rect x="165.3" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.05%)</title><rect x="165.3" y="323.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="168.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (73 samples, 0.31%)</title><rect x="165.9" y="339.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (16 samples, 0.07%)</title><rect x="165.9" y="323.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="168.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (22 samples, 0.09%)</title><rect x="166.7" y="323.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="169.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (9 samples, 0.04%)</title><rect x="167.8" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.8" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (9 samples, 0.04%)</title><rect x="167.8" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="170.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (26 samples, 0.11%)</title><rect x="168.2" y="323.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (11 samples, 0.05%)</title><rect x="168.2" y="307.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="171.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (9 samples, 0.04%)</title><rect x="168.8" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (6 samples, 0.03%)</title><rect x="169.2" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="172.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (26 samples, 0.11%)</title><rect x="169.5" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (26 samples, 0.11%)</title><rect x="169.5" y="339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (10 samples, 0.04%)</title><rect x="169.5" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="172.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (16 samples, 0.07%)</title><rect x="170.0" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.07%)</title><rect x="170.0" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (16 samples, 0.07%)</title><rect x="170.0" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (16 samples, 0.07%)</title><rect x="170.0" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.07%)</title><rect x="170.0" y="259.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="173.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (34 samples, 0.14%)</title><rect x="170.8" y="355.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (12 samples, 0.05%)</title><rect x="170.8" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="170.8" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.get$Lambda (12 samples, 0.05%)</title><rect x="170.8" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$187 (12 samples, 0.05%)</title><rect x="170.8" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="173.8" y="302.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (22 samples, 0.09%)</title><rect x="171.4" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.run (22 samples, 0.09%)</title><rect x="171.4" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (22 samples, 0.09%)</title><rect x="171.4" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.4" y="318.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (17 samples, 0.07%)</title><rect x="171.6" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.6" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (12 samples, 0.05%)</title><rect x="171.6" y="275.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="174.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.05%)</title><rect x="172.5" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="172.5" y="355.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="175.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="173.1" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="173.1" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="173.1" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="176.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (26 samples, 0.11%)</title><rect x="174.2" y="483.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (26 samples, 0.11%)</title><rect x="174.2" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.11%)</title><rect x="174.2" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.11%)</title><rect x="174.2" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.11%)</title><rect x="174.2" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="177.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (44 samples, 0.18%)</title><rect x="175.4" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (33 samples, 0.14%)</title><rect x="175.4" y="467.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (33 samples, 0.14%)</title><rect x="175.4" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1188682934.linkToTargetMethod (33 samples, 0.14%)</title><rect x="175.4" y="435.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/189601446.invoke (33 samples, 0.14%)</title><rect x="175.4" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1561732919.invoke (33 samples, 0.14%)</title><rect x="175.4" y="403.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.14%)</title><rect x="175.4" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.06%)</title><rect x="175.4" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="175.4" y="355.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="178.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.08%)</title><rect x="176.1" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.08%)</title><rect x="176.1" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.1" y="366.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="176.1" y="339.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="179.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.05%)</title><rect x="177.1" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="177.1" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="180.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3,464 samples, 14.55%)</title><rect x="177.7" y="659.0" width="171.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.7" y="670.0">java/util/concurrent/F..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.call (3,464 samples, 14.55%)</title><rect x="177.7" y="643.0" width="171.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.7" y="654.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$4 (3,464 samples, 14.55%)</title><rect x="177.7" y="627.0" width="171.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.7" y="638.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (2,491 samples, 10.46%)</title><rect x="177.7" y="611.0" width="123.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.7" y="622.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (2,491 samples, 10.46%)</title><rect x="177.7" y="595.0" width="123.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.7" y="606.0">ru/mail/polis/u..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (805 samples, 3.38%)</title><rect x="177.7" y="579.0" width="39.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.7" y="590.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (306 samples, 1.28%)</title><rect x="177.7" y="563.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.7" y="574.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (46 samples, 0.19%)</title><rect x="177.7" y="547.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="180.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (260 samples, 1.09%)</title><rect x="180.0" y="547.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.0" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (50 samples, 0.21%)</title><rect x="180.0" y="531.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="183.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (55 samples, 0.23%)</title><rect x="182.4" y="531.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.4" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (55 samples, 0.23%)</title><rect x="182.4" y="515.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="185.4" y="526.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (87 samples, 0.37%)</title><rect x="185.2" y="531.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="188.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (68 samples, 0.29%)</title><rect x="189.5" y="531.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (68 samples, 0.29%)</title><rect x="189.5" y="515.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="192.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (499 samples, 2.10%)</title><rect x="192.8" y="563.0" width="24.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.8" y="574.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (78 samples, 0.33%)</title><rect x="192.8" y="547.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="195.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (421 samples, 1.77%)</title><rect x="196.7" y="547.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (421 samples, 1.77%)</title><rect x="196.7" y="531.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (421 samples, 1.77%)</title><rect x="196.7" y="515.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (421 samples, 1.77%)</title><rect x="196.7" y="499.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (172 samples, 0.72%)</title><rect x="196.7" y="483.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (172 samples, 0.72%)</title><rect x="196.7" y="467.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (172 samples, 0.72%)</title><rect x="196.7" y="451.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (106 samples, 0.45%)</title><rect x="196.7" y="435.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (106 samples, 0.45%)</title><rect x="196.7" y="419.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (106 samples, 0.45%)</title><rect x="196.7" y="403.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (106 samples, 0.45%)</title><rect x="196.7" y="387.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (106 samples, 0.45%)</title><rect x="196.7" y="371.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="199.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (66 samples, 0.28%)</title><rect x="202.0" y="435.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.0" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (66 samples, 0.28%)</title><rect x="202.0" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (66 samples, 0.28%)</title><rect x="202.0" y="403.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (66 samples, 0.28%)</title><rect x="202.0" y="387.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.0" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (66 samples, 0.28%)</title><rect x="202.0" y="371.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="205.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (249 samples, 1.05%)</title><rect x="205.2" y="483.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (249 samples, 1.05%)</title><rect x="205.2" y="467.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.2" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (249 samples, 1.05%)</title><rect x="205.2" y="451.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.2" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (249 samples, 1.05%)</title><rect x="205.2" y="435.0" width="12.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="208.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (1,686 samples, 7.08%)</title><rect x="217.6" y="579.0" width="83.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.6" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>java.util.ArrayList (102 samples, 0.43%)</title><rect x="217.6" y="563.0" width="5.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="220.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (172 samples, 0.72%)</title><rect x="222.6" y="563.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (172 samples, 0.72%)</title><rect x="222.6" y="547.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (172 samples, 0.72%)</title><rect x="222.6" y="531.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (172 samples, 0.72%)</title><rect x="222.6" y="515.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (172 samples, 0.72%)</title><rect x="222.6" y="499.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (172 samples, 0.72%)</title><rect x="222.6" y="483.0" width="8.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="225.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (1,412 samples, 5.93%)</title><rect x="231.1" y="563.0" width="70.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.1" y="574.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (323 samples, 1.36%)</title><rect x="231.1" y="547.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.1" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (40 samples, 0.17%)</title><rect x="231.1" y="531.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="234.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (283 samples, 1.19%)</title><rect x="233.1" y="531.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.1" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (61 samples, 0.26%)</title><rect x="233.1" y="515.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="236.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (73 samples, 0.31%)</title><rect x="236.1" y="515.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.1" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (73 samples, 0.31%)</title><rect x="236.1" y="499.0" width="3.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="239.1" y="510.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (92 samples, 0.39%)</title><rect x="239.8" y="515.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="242.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (57 samples, 0.24%)</title><rect x="244.3" y="515.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.24%)</title><rect x="244.3" y="499.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="247.3" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (77 samples, 0.32%)</title><rect x="247.1" y="547.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="250.1" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (209 samples, 0.88%)</title><rect x="251.0" y="547.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.0" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (84 samples, 0.35%)</title><rect x="251.0" y="531.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="254.0" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (125 samples, 0.52%)</title><rect x="255.1" y="531.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (125 samples, 0.52%)</title><rect x="255.1" y="515.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (125 samples, 0.52%)</title><rect x="255.1" y="499.0" width="6.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="258.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (59 samples, 0.25%)</title><rect x="261.3" y="547.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.25%)</title><rect x="261.3" y="531.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="264.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (229 samples, 0.96%)</title><rect x="264.3" y="547.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (66 samples, 0.28%)</title><rect x="264.3" y="531.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="267.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (163 samples, 0.68%)</title><rect x="267.6" y="531.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (163 samples, 0.68%)</title><rect x="267.6" y="515.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (163 samples, 0.68%)</title><rect x="267.6" y="499.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (163 samples, 0.68%)</title><rect x="267.6" y="483.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (94 samples, 0.39%)</title><rect x="267.6" y="467.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (94 samples, 0.39%)</title><rect x="267.6" y="451.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (94 samples, 0.39%)</title><rect x="267.6" y="435.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (94 samples, 0.39%)</title><rect x="267.6" y="419.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.6" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (94 samples, 0.39%)</title><rect x="267.6" y="403.0" width="4.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="270.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (69 samples, 0.29%)</title><rect x="272.3" y="467.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (69 samples, 0.29%)</title><rect x="272.3" y="451.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (69 samples, 0.29%)</title><rect x="272.3" y="435.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (69 samples, 0.29%)</title><rect x="272.3" y="419.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.3" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (69 samples, 0.29%)</title><rect x="272.3" y="403.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="275.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (513 samples, 2.15%)</title><rect x="275.7" y="547.0" width="25.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.7" y="558.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (65 samples, 0.27%)</title><rect x="275.7" y="531.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.7" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (65 samples, 0.27%)</title><rect x="275.7" y="515.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="278.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.17%)</title><rect x="278.9" y="531.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.17%)</title><rect x="278.9" y="515.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.get$Lambda (41 samples, 0.17%)</title><rect x="278.9" y="499.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.table.MemTable$$Lambda$364 (41 samples, 0.17%)</title><rect x="278.9" y="483.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="281.9" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (156 samples, 0.66%)</title><rect x="280.9" y="531.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.9" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (52 samples, 0.22%)</title><rect x="280.9" y="515.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="283.9" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (104 samples, 0.44%)</title><rect x="283.5" y="515.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (104 samples, 0.44%)</title><rect x="283.5" y="499.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (104 samples, 0.44%)</title><rect x="283.5" y="483.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="286.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (93 samples, 0.39%)</title><rect x="288.7" y="531.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.7" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (24 samples, 0.10%)</title><rect x="288.7" y="515.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="291.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (69 samples, 0.29%)</title><rect x="289.9" y="515.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (69 samples, 0.29%)</title><rect x="289.9" y="499.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="292.9" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (158 samples, 0.66%)</title><rect x="293.3" y="531.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (158 samples, 0.66%)</title><rect x="293.3" y="515.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (158 samples, 0.66%)</title><rect x="293.3" y="499.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (158 samples, 0.66%)</title><rect x="293.3" y="483.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (158 samples, 0.66%)</title><rect x="293.3" y="467.0" width="7.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="296.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.valueOf (973 samples, 4.09%)</title><rect x="301.1" y="611.0" width="48.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.1" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (668 samples, 2.80%)</title><rect x="301.1" y="595.0" width="33.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.1" y="606.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (376 samples, 1.58%)</title><rect x="301.1" y="579.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (376 samples, 1.58%)</title><rect x="301.1" y="563.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (376 samples, 1.58%)</title><rect x="301.1" y="547.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (138 samples, 0.58%)</title><rect x="301.1" y="531.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (138 samples, 0.58%)</title><rect x="301.1" y="515.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (138 samples, 0.58%)</title><rect x="301.1" y="499.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (72 samples, 0.30%)</title><rect x="301.1" y="483.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (72 samples, 0.30%)</title><rect x="301.1" y="467.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (72 samples, 0.30%)</title><rect x="301.1" y="451.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (72 samples, 0.30%)</title><rect x="301.1" y="435.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.1" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (72 samples, 0.30%)</title><rect x="301.1" y="419.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="304.1" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (66 samples, 0.28%)</title><rect x="304.7" y="483.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.7" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (66 samples, 0.28%)</title><rect x="304.7" y="467.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (66 samples, 0.28%)</title><rect x="304.7" y="451.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (66 samples, 0.28%)</title><rect x="304.7" y="435.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.7" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (66 samples, 0.28%)</title><rect x="304.7" y="419.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="307.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (238 samples, 1.00%)</title><rect x="307.9" y="531.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (238 samples, 1.00%)</title><rect x="307.9" y="515.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (238 samples, 1.00%)</title><rect x="307.9" y="499.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (238 samples, 1.00%)</title><rect x="307.9" y="483.0" width="11.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="310.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (292 samples, 1.23%)</title><rect x="319.7" y="579.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (292 samples, 1.23%)</title><rect x="319.7" y="563.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (292 samples, 1.23%)</title><rect x="319.7" y="547.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.7" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (292 samples, 1.23%)</title><rect x="319.7" y="531.0" width="14.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="322.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (204 samples, 0.86%)</title><rect x="334.2" y="595.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (204 samples, 0.86%)</title><rect x="334.2" y="579.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (204 samples, 0.86%)</title><rect x="334.2" y="563.0" width="10.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="337.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.present (101 samples, 0.42%)</title><rect x="344.3" y="595.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (101 samples, 0.42%)</title><rect x="344.3" y="579.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="347.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (456 samples, 1.91%)</title><rect x="349.3" y="659.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.3" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (134 samples, 0.56%)</title><rect x="349.3" y="643.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (134 samples, 0.56%)</title><rect x="349.3" y="627.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (134 samples, 0.56%)</title><rect x="349.3" y="611.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (134 samples, 0.56%)</title><rect x="349.3" y="595.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="352.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (215 samples, 0.90%)</title><rect x="355.9" y="643.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (215 samples, 0.90%)</title><rect x="355.9" y="627.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (214 samples, 0.90%)</title><rect x="355.9" y="611.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (214 samples, 0.90%)</title><rect x="355.9" y="595.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (214 samples, 0.90%)</title><rect x="355.9" y="579.0" width="10.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="358.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (73 samples, 0.31%)</title><rect x="366.6" y="643.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (73 samples, 0.31%)</title><rect x="366.6" y="627.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (73 samples, 0.31%)</title><rect x="366.6" y="611.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (73 samples, 0.31%)</title><rect x="366.6" y="595.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="369.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (34 samples, 0.14%)</title><rect x="370.2" y="643.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (34 samples, 0.14%)</title><rect x="370.2" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (34 samples, 0.14%)</title><rect x="370.2" y="611.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (34 samples, 0.14%)</title><rect x="370.2" y="595.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="373.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.run (340 samples, 1.43%)</title><rect x="371.9" y="659.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (340 samples, 1.43%)</title><rect x="371.9" y="643.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (340 samples, 1.43%)</title><rect x="371.9" y="627.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (340 samples, 1.43%)</title><rect x="371.9" y="611.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (340 samples, 1.43%)</title><rect x="371.9" y="595.0" width="16.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (340 samples, 1.43%)</title><rect x="371.9" y="579.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (340 samples, 1.43%)</title><rect x="371.9" y="563.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (340 samples, 1.43%)</title><rect x="371.9" y="547.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (340 samples, 1.43%)</title><rect x="371.9" y="531.0" width="16.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (340 samples, 1.43%)</title><rect x="371.9" y="515.0" width="16.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (340 samples, 1.43%)</title><rect x="371.9" y="499.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (316 samples, 1.33%)</title><rect x="371.9" y="483.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.17%)</title><rect x="371.9" y="467.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.17%)</title><rect x="371.9" y="451.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$304/383822122.get$Lambda (27 samples, 0.11%)</title><rect x="371.9" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$304 (27 samples, 0.11%)</title><rect x="371.9" y="419.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="374.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$313/1568044126.get$Lambda (14 samples, 0.06%)</title><rect x="373.2" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$313 (14 samples, 0.06%)</title><rect x="373.2" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="376.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (275 samples, 1.15%)</title><rect x="373.9" y="467.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (20 samples, 0.08%)</title><rect x="373.9" y="451.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="376.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (255 samples, 1.07%)</title><rect x="374.9" y="451.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (255 samples, 1.07%)</title><rect x="374.9" y="435.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (255 samples, 1.07%)</title><rect x="374.9" y="419.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (110 samples, 0.46%)</title><rect x="374.9" y="403.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (19 samples, 0.08%)</title><rect x="374.9" y="387.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="377.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$308/1021512958.apply (56 samples, 0.24%)</title><rect x="375.9" y="387.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (56 samples, 0.24%)</title><rect x="375.9" y="371.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (56 samples, 0.24%)</title><rect x="375.9" y="355.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.9" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.04%)</title><rect x="375.9" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.04%)</title><rect x="375.9" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.04%)</title><rect x="375.9" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="378.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (46 samples, 0.19%)</title><rect x="376.4" y="339.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="376.4" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="376.4" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.get$Lambda (8 samples, 0.03%)</title><rect x="376.4" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$314 (8 samples, 0.03%)</title><rect x="376.4" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="379.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (38 samples, 0.16%)</title><rect x="376.8" y="323.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (38 samples, 0.16%)</title><rect x="376.8" y="307.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (24 samples, 0.10%)</title><rect x="376.8" y="291.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="379.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="377.9" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="377.9" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="377.9" y="259.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="380.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (35 samples, 0.15%)</title><rect x="378.6" y="387.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (35 samples, 0.15%)</title><rect x="378.6" y="371.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (33 samples, 0.14%)</title><rect x="378.7" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (32 samples, 0.13%)</title><rect x="378.8" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (32 samples, 0.13%)</title><rect x="378.8" y="323.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.13%)</title><rect x="378.9" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (30 samples, 0.13%)</title><rect x="378.9" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (30 samples, 0.13%)</title><rect x="378.9" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.04%)</title><rect x="379.0" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.04%)</title><rect x="379.0" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.04%)</title><rect x="379.0" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.04%)</title><rect x="379.0" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.04%)</title><rect x="379.0" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.04%)</title><rect x="379.0" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (10 samples, 0.04%)</title><rect x="379.0" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.04%)</title><rect x="379.0" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (9 samples, 0.04%)</title><rect x="379.1" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (9 samples, 0.04%)</title><rect x="379.1" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9 samples, 0.04%)</title><rect x="379.1" y="99.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (9 samples, 0.04%)</title><rect x="379.1" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (9 samples, 0.04%)</title><rect x="379.1" y="67.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (9 samples, 0.04%)</title><rect x="379.1" y="51.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.1" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (15 samples, 0.06%)</title><rect x="379.6" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (15 samples, 0.06%)</title><rect x="379.6" y="243.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.06%)</title><rect x="379.6" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.06%)</title><rect x="379.6" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (15 samples, 0.06%)</title><rect x="379.6" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (15 samples, 0.06%)</title><rect x="379.6" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (15 samples, 0.06%)</title><rect x="379.6" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (15 samples, 0.06%)</title><rect x="379.6" y="147.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (14 samples, 0.06%)</title><rect x="379.6" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.6" y="142.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (14 samples, 0.06%)</title><rect x="379.6" y="115.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.6" y="126.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (14 samples, 0.06%)</title><rect x="379.6" y="99.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.6" y="110.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (14 samples, 0.06%)</title><rect x="379.6" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.6" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.06%)</title><rect x="379.6" y="67.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.6" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.06%)</title><rect x="379.6" y="51.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.6" y="62.0"></text>
</g>
<g>
<title>long[] (6 samples, 0.03%)</title><rect x="380.0" y="35.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="383.0" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (145 samples, 0.61%)</title><rect x="380.4" y="403.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (145 samples, 0.61%)</title><rect x="380.4" y="387.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.apply (145 samples, 0.61%)</title><rect x="380.4" y="371.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (145 samples, 0.61%)</title><rect x="380.4" y="355.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (145 samples, 0.61%)</title><rect x="380.4" y="339.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.apply (145 samples, 0.61%)</title><rect x="380.4" y="323.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (145 samples, 0.61%)</title><rect x="380.4" y="307.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="380.4" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="380.4" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$308/1021512958.get$Lambda (8 samples, 0.03%)</title><rect x="380.4" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$308 (8 samples, 0.03%)</title><rect x="380.4" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="383.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (44 samples, 0.18%)</title><rect x="380.8" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (44 samples, 0.18%)</title><rect x="380.8" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.09%)</title><rect x="380.8" y="259.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="383.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="381.9" y="259.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="381.9" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="381.9" y="227.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="384.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (44 samples, 0.18%)</title><rect x="383.0" y="291.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="383.0" y="275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="383.0" y="259.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$309/1621395256.get$Lambda (6 samples, 0.03%)</title><rect x="383.0" y="243.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$309 (6 samples, 0.03%)</title><rect x="383.0" y="227.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="386.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (38 samples, 0.16%)</title><rect x="383.2" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (38 samples, 0.16%)</title><rect x="383.2" y="259.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (18 samples, 0.08%)</title><rect x="383.2" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="386.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="384.1" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="384.1" y="227.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="384.1" y="211.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="387.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (49 samples, 0.21%)</title><rect x="385.1" y="291.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (25 samples, 0.10%)</title><rect x="385.1" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (16 samples, 0.07%)</title><rect x="385.1" y="259.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="388.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (9 samples, 0.04%)</title><rect x="385.9" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (9 samples, 0.04%)</title><rect x="385.9" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="385.9" y="227.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="388.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (24 samples, 0.10%)</title><rect x="386.4" y="275.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (11 samples, 0.05%)</title><rect x="386.4" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="389.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.05%)</title><rect x="386.9" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (13 samples, 0.05%)</title><rect x="386.9" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (13 samples, 0.05%)</title><rect x="386.9" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (13 samples, 0.05%)</title><rect x="386.9" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (13 samples, 0.05%)</title><rect x="386.9" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.05%)</title><rect x="386.9" y="179.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="389.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (24 samples, 0.10%)</title><rect x="387.6" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (24 samples, 0.10%)</title><rect x="387.6" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (24 samples, 0.10%)</title><rect x="387.6" y="451.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (24 samples, 0.10%)</title><rect x="387.6" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (24 samples, 0.10%)</title><rect x="387.6" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.6" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (24 samples, 0.10%)</title><rect x="387.6" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (9 samples, 0.04%)</title><rect x="387.6" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.6" y="398.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (9 samples, 0.04%)</title><rect x="387.6" y="371.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="390.6" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (15 samples, 0.06%)</title><rect x="388.0" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.0" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (15 samples, 0.06%)</title><rect x="388.0" y="371.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="391.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,455 samples, 10.31%)</title><rect x="388.7" y="659.0" width="121.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.7" y="670.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,455 samples, 10.31%)</title><rect x="388.7" y="643.0" width="121.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.7" y="654.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,039 samples, 8.56%)</title><rect x="388.7" y="627.0" width="101.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.7" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (2,039 samples, 8.56%)</title><rect x="388.7" y="611.0" width="101.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.7" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,039 samples, 8.56%)</title><rect x="388.7" y="595.0" width="101.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.7" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (26 samples, 0.11%)</title><rect x="388.7" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (26 samples, 0.11%)</title><rect x="388.7" y="563.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (26 samples, 0.11%)</title><rect x="388.7" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (26 samples, 0.11%)</title><rect x="388.7" y="531.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (14 samples, 0.06%)</title><rect x="388.7" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (14 samples, 0.06%)</title><rect x="388.7" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="388.7" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.06%)</title><rect x="388.7" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.06%)</title><rect x="388.7" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.7" y="462.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="388.7" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="391.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (12 samples, 0.05%)</title><rect x="389.4" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="389.4" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="389.4" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (12 samples, 0.05%)</title><rect x="389.4" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (12 samples, 0.05%)</title><rect x="389.4" y="451.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="392.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,013 samples, 8.45%)</title><rect x="390.0" y="579.0" width="99.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.0" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,013 samples, 8.45%)</title><rect x="390.0" y="563.0" width="99.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.0" y="574.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,013 samples, 8.45%)</title><rect x="390.0" y="547.0" width="99.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.0" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,013 samples, 8.45%)</title><rect x="390.0" y="531.0" width="99.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.0" y="542.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (786 samples, 3.30%)</title><rect x="390.0" y="515.0" width="39.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.0" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (786 samples, 3.30%)</title><rect x="390.0" y="499.0" width="39.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.0" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (786 samples, 3.30%)</title><rect x="390.0" y="483.0" width="39.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.0" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (786 samples, 3.30%)</title><rect x="390.0" y="467.0" width="39.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.0" y="478.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (786 samples, 3.30%)</title><rect x="390.0" y="451.0" width="39.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.0" y="462.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (786 samples, 3.30%)</title><rect x="390.0" y="435.0" width="39.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.0" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (786 samples, 3.30%)</title><rect x="390.0" y="419.0" width="39.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.0" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (763 samples, 3.20%)</title><rect x="390.0" y="403.0" width="37.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.0" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (763 samples, 3.20%)</title><rect x="390.0" y="387.0" width="37.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.0" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (744 samples, 3.12%)</title><rect x="390.0" y="371.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.0" y="382.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (15 samples, 0.06%)</title><rect x="390.0" y="355.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="393.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$309/1621395256.apply (18 samples, 0.08%)</title><rect x="390.8" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (18 samples, 0.08%)</title><rect x="390.8" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (18 samples, 0.08%)</title><rect x="390.8" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (18 samples, 0.08%)</title><rect x="390.8" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="390.8" y="291.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="393.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (682 samples, 2.86%)</title><rect x="391.7" y="355.0" width="33.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.7" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (682 samples, 2.86%)</title><rect x="391.7" y="339.0" width="33.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.7" y="350.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="391.7" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="391.7" y="307.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.get$Lambda (16 samples, 0.07%)</title><rect x="391.7" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$341 (16 samples, 0.07%)</title><rect x="391.7" y="275.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="394.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (27 samples, 0.11%)</title><rect x="392.5" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (27 samples, 0.11%)</title><rect x="392.5" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (14 samples, 0.06%)</title><rect x="392.5" y="291.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="395.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="393.2" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="393.2" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="393.2" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="396.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (639 samples, 2.68%)</title><rect x="393.8" y="323.0" width="31.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.8" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="393.8" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="393.8" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$340/122266442.get$Lambda (10 samples, 0.04%)</title><rect x="393.8" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$340 (10 samples, 0.04%)</title><rect x="393.8" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="396.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.14%)</title><rect x="394.3" y="307.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 0.14%)</title><rect x="394.3" y="291.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.06%)</title><rect x="394.3" y="275.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="397.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="395.0" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="395.0" y="259.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="395.0" y="243.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="398.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (596 samples, 2.50%)</title><rect x="395.9" y="307.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.9" y="318.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$365/462289540.apply (48 samples, 0.20%)</title><rect x="395.9" y="291.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.9" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (48 samples, 0.20%)</title><rect x="395.9" y="275.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (48 samples, 0.20%)</title><rect x="395.9" y="259.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (18 samples, 0.08%)</title><rect x="395.9" y="243.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="398.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (30 samples, 0.13%)</title><rect x="396.8" y="243.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.8" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="396.8" y="227.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="399.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="397.3" y="227.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="400.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (548 samples, 2.30%)</title><rect x="398.3" y="291.0" width="27.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.3" y="302.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="398.3" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="398.3" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.get$Lambda (6 samples, 0.03%)</title><rect x="398.3" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$337 (6 samples, 0.03%)</title><rect x="398.3" y="227.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="401.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$339/609318195.get$Lambda (8 samples, 0.03%)</title><rect x="398.6" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$339 (8 samples, 0.03%)</title><rect x="398.6" y="227.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="401.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2096789396.linkToTargetMethod (21 samples, 0.09%)</title><rect x="399.0" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282651814.invokeStatic (21 samples, 0.09%)</title><rect x="399.0" y="259.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.get$Lambda (21 samples, 0.09%)</title><rect x="399.0" y="243.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$323 (21 samples, 0.09%)</title><rect x="399.0" y="227.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="402.0" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (105 samples, 0.44%)</title><rect x="400.0" y="275.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (43 samples, 0.18%)</title><rect x="400.0" y="259.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="403.0" y="270.0"></text>
</g>
<g>
<title>java/util/List.spliterator (14 samples, 0.06%)</title><rect x="400.0" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.0" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (14 samples, 0.06%)</title><rect x="400.0" y="227.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="403.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (29 samples, 0.12%)</title><rect x="400.7" y="243.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (29 samples, 0.12%)</title><rect x="400.7" y="227.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="403.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (37 samples, 0.16%)</title><rect x="402.2" y="259.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (37 samples, 0.16%)</title><rect x="402.2" y="243.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (37 samples, 0.16%)</title><rect x="402.2" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="405.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (15 samples, 0.06%)</title><rect x="402.2" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (15 samples, 0.06%)</title><rect x="402.2" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (15 samples, 0.06%)</title><rect x="402.2" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.2" y="190.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (15 samples, 0.06%)</title><rect x="402.2" y="163.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="405.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$320/39647453.get (11 samples, 0.05%)</title><rect x="402.9" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.9" y="222.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (11 samples, 0.05%)</title><rect x="402.9" y="195.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="405.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (11 samples, 0.05%)</title><rect x="403.5" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (11 samples, 0.05%)</title><rect x="403.5" y="195.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.5" y="206.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (11 samples, 0.05%)</title><rect x="403.5" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.5" y="190.0"></text>
</g>
<g>
<title>java.util.OptionalLong (11 samples, 0.05%)</title><rect x="403.5" y="163.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="406.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (25 samples, 0.10%)</title><rect x="404.0" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (25 samples, 0.10%)</title><rect x="404.0" y="243.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="407.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (73 samples, 0.31%)</title><rect x="405.2" y="275.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.15%)</title><rect x="405.2" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.08%)</title><rect x="405.2" y="243.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="408.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="406.1" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="406.1" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.07%)</title><rect x="406.1" y="211.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="409.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (38 samples, 0.16%)</title><rect x="407.0" y="259.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (38 samples, 0.16%)</title><rect x="407.0" y="243.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.09%)</title><rect x="407.0" y="227.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="410.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="408.0" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="408.0" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.07%)</title><rect x="408.0" y="195.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="411.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (9 samples, 0.04%)</title><rect x="408.9" y="275.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="411.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (14 samples, 0.06%)</title><rect x="409.3" y="275.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="410.0" y="275.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="413.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (7 samples, 0.03%)</title><rect x="411.0" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (7 samples, 0.03%)</title><rect x="411.0" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="414.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (285 samples, 1.20%)</title><rect x="411.3" y="275.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (285 samples, 1.20%)</title><rect x="411.3" y="259.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (285 samples, 1.20%)</title><rect x="411.3" y="243.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="411.3" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="411.3" y="211.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.get$Lambda (8 samples, 0.03%)</title><rect x="411.3" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (8 samples, 0.03%)</title><rect x="411.3" y="179.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="414.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/1994142006.get$Lambda (10 samples, 0.04%)</title><rect x="411.7" y="195.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$327 (10 samples, 0.04%)</title><rect x="411.7" y="179.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="414.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1978442940.get$Lambda (13 samples, 0.05%)</title><rect x="412.2" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$333 (13 samples, 0.05%)</title><rect x="412.2" y="179.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="415.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.15%)</title><rect x="412.9" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.15%)</title><rect x="412.9" y="211.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.08%)</title><rect x="412.9" y="195.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="415.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="413.9" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="413.9" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.06%)</title><rect x="413.9" y="163.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="416.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (16 samples, 0.07%)</title><rect x="414.6" y="227.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="417.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (18 samples, 0.08%)</title><rect x="415.4" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="415.4" y="211.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="418.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (52 samples, 0.22%)</title><rect x="416.3" y="227.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (52 samples, 0.22%)</title><rect x="416.3" y="211.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="416.3" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="416.3" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$335/1458335372.get$Lambda (16 samples, 0.07%)</title><rect x="416.3" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$335 (16 samples, 0.07%)</title><rect x="416.3" y="147.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="419.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.15%)</title><rect x="417.1" y="195.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.15%)</title><rect x="417.1" y="179.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.15%)</title><rect x="417.1" y="163.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.06%)</title><rect x="417.1" y="147.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="420.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="417.8" y="147.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="417.8" y="131.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.8" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="417.8" y="115.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="420.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (44 samples, 0.18%)</title><rect x="418.9" y="227.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.18%)</title><rect x="418.9" y="211.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122606666.invoke (44 samples, 0.18%)</title><rect x="418.9" y="195.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.18%)</title><rect x="418.9" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.03%)</title><rect x="418.9" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="418.9" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="421.9" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (36 samples, 0.15%)</title><rect x="419.3" y="163.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (36 samples, 0.15%)</title><rect x="419.3" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.3" y="158.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="419.3" y="131.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="422.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (89 samples, 0.37%)</title><rect x="421.1" y="227.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (25 samples, 0.10%)</title><rect x="421.1" y="211.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="424.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (64 samples, 0.27%)</title><rect x="422.3" y="211.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.27%)</title><rect x="422.3" y="195.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122606666.invoke (64 samples, 0.27%)</title><rect x="422.3" y="179.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.27%)</title><rect x="422.3" y="163.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.05%)</title><rect x="422.3" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="422.3" y="131.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="425.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.22%)</title><rect x="422.9" y="147.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.22%)</title><rect x="422.9" y="131.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.9" y="142.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.22%)</title><rect x="422.9" y="115.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="425.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.apply (29 samples, 0.12%)</title><rect x="425.5" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (29 samples, 0.12%)</title><rect x="425.5" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (17 samples, 0.07%)</title><rect x="425.5" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (17 samples, 0.07%)</title><rect x="425.5" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.5" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (17 samples, 0.07%)</title><rect x="425.5" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.5" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (17 samples, 0.07%)</title><rect x="425.5" y="275.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="428.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.05%)</title><rect x="426.3" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="426.3" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="429.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (19 samples, 0.08%)</title><rect x="426.9" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (19 samples, 0.08%)</title><rect x="426.9" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$296/730056817.apply (19 samples, 0.08%)</title><rect x="426.9" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (19 samples, 0.08%)</title><rect x="426.9" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (19 samples, 0.08%)</title><rect x="426.9" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="426.9" y="291.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="429.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.apply (23 samples, 0.10%)</title><rect x="427.8" y="403.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (23 samples, 0.10%)</title><rect x="427.8" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (23 samples, 0.10%)</title><rect x="427.8" y="371.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="430.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,227 samples, 5.15%)</title><rect x="429.0" y="515.0" width="60.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.0" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (65 samples, 0.27%)</title><rect x="429.0" y="499.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (65 samples, 0.27%)</title><rect x="429.0" y="483.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.0" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (65 samples, 0.27%)</title><rect x="429.0" y="467.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (65 samples, 0.27%)</title><rect x="429.0" y="451.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (65 samples, 0.27%)</title><rect x="429.0" y="435.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.0" y="446.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.27%)</title><rect x="429.0" y="419.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="432.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (80 samples, 0.34%)</title><rect x="432.2" y="499.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.2" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (16 samples, 0.07%)</title><rect x="432.2" y="483.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="435.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.10%)</title><rect x="433.0" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.10%)</title><rect x="433.0" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="433.0" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.0" y="462.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="433.0" y="435.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="436.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.05%)</title><rect x="434.1" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="437.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.05%)</title><rect x="434.1" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.1" y="478.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="434.1" y="451.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="437.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (28 samples, 0.12%)</title><rect x="434.8" y="483.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.12%)</title><rect x="434.8" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="434.8" y="451.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="437.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="435.6" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.6" y="462.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="435.6" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="438.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (299 samples, 1.26%)</title><rect x="436.2" y="499.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (299 samples, 1.26%)</title><rect x="436.2" y="483.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (299 samples, 1.26%)</title><rect x="436.2" y="467.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.2" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (10 samples, 0.04%)</title><rect x="436.2" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="439.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.07%)</title><rect x="436.7" y="451.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="439.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (22 samples, 0.09%)</title><rect x="437.5" y="451.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="440.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.03%)</title><rect x="438.6" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="441.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="438.9" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="438.9" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (12 samples, 0.05%)</title><rect x="438.9" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.9" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (12 samples, 0.05%)</title><rect x="438.9" y="403.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="441.9" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (20 samples, 0.08%)</title><rect x="439.5" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.5" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (20 samples, 0.08%)</title><rect x="439.5" y="435.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="442.5" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (194 samples, 0.81%)</title><rect x="440.5" y="451.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (194 samples, 0.81%)</title><rect x="440.5" y="435.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (194 samples, 0.81%)</title><rect x="440.5" y="419.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.10%)</title><rect x="440.5" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.10%)</title><rect x="440.5" y="387.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (25 samples, 0.10%)</title><rect x="440.5" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.5" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (25 samples, 0.10%)</title><rect x="440.5" y="355.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="443.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (29 samples, 0.12%)</title><rect x="441.7" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (29 samples, 0.12%)</title><rect x="441.7" y="387.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (29 samples, 0.12%)</title><rect x="441.7" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (29 samples, 0.12%)</title><rect x="441.7" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (29 samples, 0.12%)</title><rect x="441.7" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.12%)</title><rect x="441.7" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.12%)</title><rect x="441.7" y="307.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.12%)</title><rect x="441.7" y="291.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.12%)</title><rect x="441.7" y="275.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="444.7" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (78 samples, 0.33%)</title><rect x="443.2" y="403.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.2" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (78 samples, 0.33%)</title><rect x="443.2" y="387.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (37 samples, 0.16%)</title><rect x="443.2" y="371.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.16%)</title><rect x="443.2" y="355.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.16%)</title><rect x="443.2" y="339.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="446.2" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (41 samples, 0.17%)</title><rect x="445.0" y="371.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (41 samples, 0.17%)</title><rect x="445.0" y="355.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="448.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.26%)</title><rect x="447.0" y="403.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.0" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.26%)</title><rect x="447.0" y="387.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="450.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (18 samples, 0.08%)</title><rect x="450.1" y="451.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (18 samples, 0.08%)</title><rect x="450.1" y="435.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="453.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (783 samples, 3.29%)</title><rect x="451.0" y="499.0" width="38.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.0" y="510.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (42 samples, 0.18%)</title><rect x="451.0" y="483.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="454.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (38 samples, 0.16%)</title><rect x="453.1" y="483.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (38 samples, 0.16%)</title><rect x="453.1" y="467.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.1" y="478.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.16%)</title><rect x="453.1" y="451.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="456.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (93 samples, 0.39%)</title><rect x="454.9" y="483.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.39%)</title><rect x="454.9" y="467.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.12%)</title><rect x="454.9" y="451.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="457.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.27%)</title><rect x="456.3" y="451.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.3" y="462.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.27%)</title><rect x="456.3" y="435.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="459.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (610 samples, 2.56%)</title><rect x="459.6" y="483.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.6" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (193 samples, 0.81%)</title><rect x="459.6" y="467.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (193 samples, 0.81%)</title><rect x="459.6" y="451.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.33%)</title><rect x="459.6" y="435.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="462.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (115 samples, 0.48%)</title><rect x="463.4" y="435.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.4" y="446.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.48%)</title><rect x="463.4" y="419.0" width="5.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="466.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (97 samples, 0.41%)</title><rect x="469.1" y="467.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (97 samples, 0.41%)</title><rect x="469.1" y="451.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.1" y="462.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.24%)</title><rect x="469.1" y="435.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="472.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.17%)</title><rect x="471.9" y="435.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="474.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.trim (99 samples, 0.42%)</title><rect x="473.9" y="467.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (99 samples, 0.42%)</title><rect x="473.9" y="451.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (99 samples, 0.42%)</title><rect x="473.9" y="435.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.18%)</title><rect x="473.9" y="419.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="476.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.23%)</title><rect x="476.1" y="419.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.1" y="430.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.23%)</title><rect x="476.1" y="403.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="479.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (89 samples, 0.37%)</title><rect x="478.8" y="467.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (89 samples, 0.37%)</title><rect x="478.8" y="451.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (89 samples, 0.37%)</title><rect x="478.8" y="435.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (89 samples, 0.37%)</title><rect x="478.8" y="419.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.37%)</title><rect x="478.8" y="403.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.37%)</title><rect x="478.8" y="387.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="481.8" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (132 samples, 0.55%)</title><rect x="483.2" y="467.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (55 samples, 0.23%)</title><rect x="483.2" y="451.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.2" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (55 samples, 0.23%)</title><rect x="483.2" y="435.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="486.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (37 samples, 0.16%)</title><rect x="486.0" y="451.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.0" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (37 samples, 0.16%)</title><rect x="486.0" y="435.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="489.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$315/1017512857.apply (40 samples, 0.17%)</title><rect x="487.8" y="451.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (40 samples, 0.17%)</title><rect x="487.8" y="435.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.8" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (40 samples, 0.17%)</title><rect x="487.8" y="419.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="490.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (416 samples, 1.75%)</title><rect x="489.8" y="627.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (416 samples, 1.75%)</title><rect x="489.8" y="611.0" width="20.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (416 samples, 1.75%)</title><rect x="489.8" y="595.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (416 samples, 1.75%)</title><rect x="489.8" y="579.0" width="20.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (416 samples, 1.75%)</title><rect x="489.8" y="563.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (53 samples, 0.22%)</title><rect x="489.8" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="489.8" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="489.8" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (8 samples, 0.03%)</title><rect x="489.8" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$264 (8 samples, 0.03%)</title><rect x="489.8" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="492.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$267/401982671.get$Lambda (8 samples, 0.03%)</title><rect x="490.2" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$267 (8 samples, 0.03%)</title><rect x="490.2" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="493.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (13 samples, 0.05%)</title><rect x="490.6" y="531.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="493.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (24 samples, 0.10%)</title><rect x="491.2" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (24 samples, 0.10%)</title><rect x="491.2" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (15 samples, 0.06%)</title><rect x="491.2" y="499.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="494.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.04%)</title><rect x="492.0" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.04%)</title><rect x="492.0" y="483.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (362 samples, 1.52%)</title><rect x="492.4" y="547.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (362 samples, 1.52%)</title><rect x="492.4" y="531.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (362 samples, 1.52%)</title><rect x="492.4" y="515.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (362 samples, 1.52%)</title><rect x="492.4" y="499.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (362 samples, 1.52%)</title><rect x="492.4" y="483.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (362 samples, 1.52%)</title><rect x="492.4" y="467.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.11%)</title><rect x="492.4" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.11%)</title><rect x="492.4" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.11%)</title><rect x="492.4" y="419.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="495.4" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (19 samples, 0.08%)</title><rect x="493.7" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.7" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (19 samples, 0.08%)</title><rect x="493.7" y="435.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="496.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.run (222 samples, 0.93%)</title><rect x="494.7" y="451.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (222 samples, 0.93%)</title><rect x="494.7" y="435.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (222 samples, 0.93%)</title><rect x="494.7" y="419.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (65 samples, 0.27%)</title><rect x="494.7" y="403.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.7" y="414.0"></text>
</g>
<g>
<title>java/util/Collection.stream (43 samples, 0.18%)</title><rect x="494.7" y="387.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.7" y="398.0"></text>
</g>
<g>
<title>java/util/List.spliterator (12 samples, 0.05%)</title><rect x="494.7" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.7" y="382.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (12 samples, 0.05%)</title><rect x="494.7" y="355.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="497.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (31 samples, 0.13%)</title><rect x="495.3" y="371.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.3" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (31 samples, 0.13%)</title><rect x="495.3" y="355.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (22 samples, 0.09%)</title><rect x="496.8" y="387.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.09%)</title><rect x="496.8" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (22 samples, 0.09%)</title><rect x="496.8" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (15 samples, 0.06%)</title><rect x="496.8" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (15 samples, 0.06%)</title><rect x="496.8" y="323.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="499.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (7 samples, 0.03%)</title><rect x="497.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (7 samples, 0.03%)</title><rect x="497.6" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.6" y="334.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.03%)</title><rect x="497.6" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.6" y="318.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.03%)</title><rect x="497.6" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="500.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (157 samples, 0.66%)</title><rect x="497.9" y="403.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.9" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.now (13 samples, 0.05%)</title><rect x="497.9" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.9" y="398.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (13 samples, 0.05%)</title><rect x="497.9" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.9" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.05%)</title><rect x="497.9" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.05%)</title><rect x="497.9" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.9" y="350.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.05%)</title><rect x="497.9" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="500.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (144 samples, 0.60%)</title><rect x="498.5" y="387.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (63 samples, 0.26%)</title><rect x="498.5" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.5" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (13 samples, 0.05%)</title><rect x="498.5" y="355.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.5" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (13 samples, 0.05%)</title><rect x="498.5" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plus (13 samples, 0.05%)</title><rect x="498.5" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.5" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.05%)</title><rect x="498.5" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.5" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.05%)</title><rect x="498.5" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.5" y="302.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.05%)</title><rect x="498.5" y="275.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="501.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (22 samples, 0.09%)</title><rect x="499.2" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="502.2" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (22 samples, 0.09%)</title><rect x="499.2" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.2" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (22 samples, 0.09%)</title><rect x="499.2" y="323.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="502.2" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (9 samples, 0.04%)</title><rect x="500.3" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.3" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (9 samples, 0.04%)</title><rect x="500.3" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="503.3" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (9 samples, 0.04%)</title><rect x="500.3" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="503.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (18 samples, 0.08%)</title><rect x="500.8" y="355.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="503.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (28 samples, 0.12%)</title><rect x="501.7" y="371.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.7" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.06%)</title><rect x="501.7" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.06%)</title><rect x="501.7" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (14 samples, 0.06%)</title><rect x="501.7" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="501.7" y="307.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="504.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.04%)</title><rect x="502.4" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.4" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.04%)</title><rect x="502.4" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.4" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.04%)</title><rect x="502.4" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="505.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (53 samples, 0.22%)</title><rect x="503.1" y="371.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (13 samples, 0.05%)</title><rect x="503.1" y="355.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="506.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (40 samples, 0.17%)</title><rect x="503.7" y="355.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (14 samples, 0.06%)</title><rect x="503.7" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (14 samples, 0.06%)</title><rect x="503.7" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (14 samples, 0.06%)</title><rect x="503.7" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (14 samples, 0.06%)</title><rect x="503.7" y="291.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="506.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.11%)</title><rect x="504.4" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.11%)</title><rect x="504.4" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (17 samples, 0.07%)</title><rect x="504.4" y="307.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="507.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (9 samples, 0.04%)</title><rect x="505.2" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (9 samples, 0.04%)</title><rect x="505.2" y="291.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="508.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (50 samples, 0.21%)</title><rect x="505.7" y="451.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (50 samples, 0.21%)</title><rect x="505.7" y="435.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (50 samples, 0.21%)</title><rect x="505.7" y="419.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (35 samples, 0.15%)</title><rect x="505.7" y="403.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 0.15%)</title><rect x="505.7" y="387.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (35 samples, 0.15%)</title><rect x="505.7" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 0.15%)</title><rect x="505.7" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.accept (35 samples, 0.15%)</title><rect x="505.7" y="339.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (35 samples, 0.15%)</title><rect x="505.7" y="323.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (35 samples, 0.15%)</title><rect x="505.7" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 0.15%)</title><rect x="505.7" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (35 samples, 0.15%)</title><rect x="505.7" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.apply (35 samples, 0.15%)</title><rect x="505.7" y="259.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (35 samples, 0.15%)</title><rect x="505.7" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (35 samples, 0.15%)</title><rect x="505.7" y="227.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="508.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (15 samples, 0.06%)</title><rect x="507.4" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.4" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="507.4" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="510.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (44 samples, 0.18%)</title><rect x="508.2" y="451.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (44 samples, 0.18%)</title><rect x="508.2" y="435.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (44 samples, 0.18%)</title><rect x="508.2" y="419.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (44 samples, 0.18%)</title><rect x="508.2" y="403.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (44 samples, 0.18%)</title><rect x="508.2" y="387.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.2" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (13 samples, 0.05%)</title><rect x="508.2" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.05%)</title><rect x="508.2" y="355.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="511.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (31 samples, 0.13%)</title><rect x="508.8" y="371.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.13%)</title><rect x="508.8" y="355.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.13%)</title><rect x="508.8" y="339.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="511.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.run (4,776 samples, 20.05%)</title><rect x="510.4" y="659.0" width="236.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.4" y="670.0">ru/mail/polis/service/rest/Rest..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$asyncExecute$3 (4,776 samples, 20.05%)</title><rect x="510.4" y="643.0" width="236.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.4" y="654.0">ru/mail/polis/service/rest/Rest..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$349/1174152785.submit (4,479 samples, 18.81%)</title><rect x="510.4" y="627.0" width="221.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.4" y="638.0">ru/mail/polis/service/rest/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$0 (4,479 samples, 18.81%)</title><rect x="510.4" y="611.0" width="221.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.4" y="622.0">ru/mail/polis/service/rest/Re..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.get (4,479 samples, 18.81%)</title><rect x="510.4" y="595.0" width="221.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.4" y="606.0">ru/mail/polis/service/rest/se..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue (9 samples, 0.04%)</title><rect x="510.4" y="579.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="513.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="510.8" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="510.8" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$354/1976306945.get$Lambda (8 samples, 0.03%)</title><rect x="510.8" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.8" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$354 (8 samples, 0.03%)</title><rect x="510.8" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="513.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,279 samples, 9.57%)</title><rect x="511.2" y="579.0" width="113.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.2" y="590.0">java/util/Arra..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$354/1976306945.accept (2,279 samples, 9.57%)</title><rect x="511.2" y="563.0" width="113.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.2" y="574.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$5 (2,279 samples, 9.57%)</title><rect x="511.2" y="547.0" width="113.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.2" y="558.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="511.2" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="511.2" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.get$Lambda (7 samples, 0.03%)</title><rect x="511.2" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$356 (7 samples, 0.03%)</title><rect x="511.2" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="514.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (14 samples, 0.06%)</title><rect x="511.6" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (8 samples, 0.03%)</title><rect x="511.6" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (8 samples, 0.03%)</title><rect x="511.6" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="514.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.03%)</title><rect x="512.0" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.03%)</title><rect x="512.0" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6 samples, 0.03%)</title><rect x="512.0" y="483.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="515.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (16 samples, 0.07%)</title><rect x="512.3" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (16 samples, 0.07%)</title><rect x="512.3" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (16 samples, 0.07%)</title><rect x="512.3" y="499.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="515.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.promise.CompletablePromise (9 samples, 0.04%)</title><rect x="513.1" y="531.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="516.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.get (1,732 samples, 7.27%)</title><rect x="513.5" y="531.0" width="85.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.5" y="542.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (40 samples, 0.17%)</title><rect x="513.5" y="515.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (40 samples, 0.17%)</title><rect x="513.5" y="499.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (20 samples, 0.08%)</title><rect x="513.5" y="483.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="516.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="514.5" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="514.5" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="514.5" y="451.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="517.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,108 samples, 4.65%)</title><rect x="515.5" y="515.0" width="54.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.5" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,108 samples, 4.65%)</title><rect x="515.5" y="499.0" width="54.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.5" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,108 samples, 4.65%)</title><rect x="515.5" y="483.0" width="54.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.5" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,108 samples, 4.65%)</title><rect x="515.5" y="467.0" width="54.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.5" y="478.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="515.5" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="515.5" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$164/1050524402.get$Lambda (10 samples, 0.04%)</title><rect x="515.5" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$164 (10 samples, 0.04%)</title><rect x="515.5" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="518.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (37 samples, 0.16%)</title><rect x="516.0" y="451.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (37 samples, 0.16%)</title><rect x="516.0" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (23 samples, 0.10%)</title><rect x="516.0" y="419.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="519.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="517.1" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="517.1" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="517.1" y="387.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="520.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (34 samples, 0.14%)</title><rect x="517.8" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (34 samples, 0.14%)</title><rect x="517.8" y="435.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.08%)</title><rect x="517.8" y="419.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="520.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.07%)</title><rect x="518.7" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.07%)</title><rect x="518.7" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.07%)</title><rect x="518.7" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="521.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (28 samples, 0.12%)</title><rect x="519.5" y="451.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="522.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (44 samples, 0.18%)</title><rect x="520.9" y="451.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="523.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (583 samples, 2.45%)</title><rect x="523.1" y="451.0" width="28.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.1" y="462.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (53 samples, 0.22%)</title><rect x="523.1" y="435.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (43 samples, 0.18%)</title><rect x="523.1" y="419.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.1" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (14 samples, 0.06%)</title><rect x="523.1" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.1" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (14 samples, 0.06%)</title><rect x="523.1" y="387.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="526.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (29 samples, 0.12%)</title><rect x="523.8" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (29 samples, 0.12%)</title><rect x="523.8" y="387.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="526.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.04%)</title><rect x="525.2" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.04%)</title><rect x="525.2" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.04%)</title><rect x="525.2" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (10 samples, 0.04%)</title><rect x="525.2" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.2" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (10 samples, 0.04%)</title><rect x="525.2" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="528.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (220 samples, 0.92%)</title><rect x="525.7" y="435.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (220 samples, 0.92%)</title><rect x="525.7" y="419.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.7" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (10 samples, 0.04%)</title><rect x="525.7" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="528.7" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="526.2" y="403.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="529.2" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.12%)</title><rect x="526.9" y="403.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="529.9" y="414.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.03%)</title><rect x="528.4" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="531.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="528.7" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="528.7" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (9 samples, 0.04%)</title><rect x="528.7" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (9 samples, 0.04%)</title><rect x="528.7" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="531.7" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (107 samples, 0.45%)</title><rect x="529.1" y="403.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (107 samples, 0.45%)</title><rect x="529.1" y="387.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (107 samples, 0.45%)</title><rect x="529.1" y="371.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (107 samples, 0.45%)</title><rect x="529.1" y="355.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (59 samples, 0.25%)</title><rect x="529.1" y="339.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (38 samples, 0.16%)</title><rect x="529.1" y="323.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (38 samples, 0.16%)</title><rect x="529.1" y="307.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.16%)</title><rect x="529.1" y="291.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.16%)</title><rect x="529.1" y="275.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.16%)</title><rect x="529.1" y="259.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.16%)</title><rect x="529.1" y="243.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.16%)</title><rect x="529.1" y="227.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.16%)</title><rect x="529.1" y="211.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="532.1" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (21 samples, 0.09%)</title><rect x="531.0" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.0" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (21 samples, 0.09%)</title><rect x="531.0" y="307.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="534.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="532.0" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="532.0" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (10 samples, 0.04%)</title><rect x="532.0" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.0" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (10 samples, 0.04%)</title><rect x="532.0" y="291.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="535.0" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (16 samples, 0.07%)</title><rect x="532.5" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.5" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (16 samples, 0.07%)</title><rect x="532.5" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (10 samples, 0.04%)</title><rect x="532.5" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="532.5" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.5" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.04%)</title><rect x="532.5" y="275.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="535.5" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.03%)</title><rect x="533.0" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.0" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.03%)</title><rect x="533.0" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="536.0" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.09%)</title><rect x="533.3" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.3" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.09%)</title><rect x="533.3" y="323.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="536.3" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.05%)</title><rect x="534.4" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.4" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.05%)</title><rect x="534.4" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="537.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (32 samples, 0.13%)</title><rect x="535.0" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.0" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.13%)</title><rect x="535.0" y="387.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="538.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (11 samples, 0.05%)</title><rect x="536.6" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="539.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (220 samples, 0.92%)</title><rect x="537.1" y="435.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.1" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (220 samples, 0.92%)</title><rect x="537.1" y="419.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.1" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (209 samples, 0.88%)</title><rect x="537.1" y="403.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.1" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (209 samples, 0.88%)</title><rect x="537.1" y="387.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.1" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (209 samples, 0.88%)</title><rect x="537.1" y="371.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.1" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.21%)</title><rect x="537.1" y="355.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="540.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.19%)</title><rect x="539.6" y="355.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.19%)</title><rect x="539.6" y="339.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.6" y="350.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.19%)</title><rect x="539.6" y="323.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="542.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (114 samples, 0.48%)</title><rect x="541.9" y="355.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.48%)</title><rect x="541.9" y="339.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.20%)</title><rect x="541.9" y="323.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="544.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.28%)</title><rect x="544.2" y="323.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.2" y="334.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.28%)</title><rect x="544.2" y="307.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="547.2" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (11 samples, 0.05%)</title><rect x="547.5" y="403.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="550.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (35 samples, 0.15%)</title><rect x="548.0" y="435.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (35 samples, 0.15%)</title><rect x="548.0" y="419.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="551.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (44 samples, 0.18%)</title><rect x="549.8" y="435.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.8" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="549.8" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="552.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.04%)</title><rect x="550.3" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="550.3" y="403.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="553.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (24 samples, 0.10%)</title><rect x="550.8" y="419.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (24 samples, 0.10%)</title><rect x="550.8" y="403.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="553.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (236 samples, 0.99%)</title><rect x="552.0" y="451.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.03%)</title><rect x="552.0" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="555.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (35 samples, 0.15%)</title><rect x="552.3" y="435.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="555.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (7 samples, 0.03%)</title><rect x="554.0" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (7 samples, 0.03%)</title><rect x="554.0" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="557.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (187 samples, 0.79%)</title><rect x="554.4" y="435.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (187 samples, 0.79%)</title><rect x="554.4" y="419.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Class[] (13 samples, 0.05%)</title><rect x="554.4" y="403.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="557.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.06%)</title><rect x="555.0" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="558.0" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList (15 samples, 0.06%)</title><rect x="555.8" y="403.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="558.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (81 samples, 0.34%)</title><rect x="556.5" y="403.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (81 samples, 0.34%)</title><rect x="556.5" y="387.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (81 samples, 0.34%)</title><rect x="556.5" y="371.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.5" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (81 samples, 0.34%)</title><rect x="556.5" y="355.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.5" y="366.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (81 samples, 0.34%)</title><rect x="556.5" y="339.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="559.5" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (37 samples, 0.16%)</title><rect x="560.5" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (37 samples, 0.16%)</title><rect x="560.5" y="387.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (11 samples, 0.05%)</title><rect x="560.5" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (11 samples, 0.05%)</title><rect x="560.5" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="563.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (26 samples, 0.11%)</title><rect x="561.1" y="371.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (26 samples, 0.11%)</title><rect x="561.1" y="355.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="564.1" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (26 samples, 0.11%)</title><rect x="562.4" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.4" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (26 samples, 0.11%)</title><rect x="562.4" y="387.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.4" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (26 samples, 0.11%)</title><rect x="562.4" y="371.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="565.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (136 samples, 0.57%)</title><rect x="563.7" y="451.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (26 samples, 0.11%)</title><rect x="563.7" y="435.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (9 samples, 0.04%)</title><rect x="563.7" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="566.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.07%)</title><rect x="564.1" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (16 samples, 0.07%)</title><rect x="564.1" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (16 samples, 0.07%)</title><rect x="564.1" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (16 samples, 0.07%)</title><rect x="564.1" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (16 samples, 0.07%)</title><rect x="564.1" y="355.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="567.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="564.9" y="435.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="567.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (90 samples, 0.38%)</title><rect x="565.9" y="435.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="565.9" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="565.9" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (83 samples, 0.35%)</title><rect x="566.3" y="419.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (83 samples, 0.35%)</title><rect x="566.3" y="403.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (51 samples, 0.21%)</title><rect x="566.3" y="387.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="569.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.13%)</title><rect x="568.8" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.13%)</title><rect x="568.8" y="371.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.13%)</title><rect x="568.8" y="355.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="571.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (217 samples, 0.91%)</title><rect x="570.4" y="515.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (19 samples, 0.08%)</title><rect x="570.4" y="499.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="573.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (198 samples, 0.83%)</title><rect x="571.3" y="499.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (198 samples, 0.83%)</title><rect x="571.3" y="483.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (198 samples, 0.83%)</title><rect x="571.3" y="467.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.3" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.06%)</title><rect x="571.6" y="451.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="574.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.10%)</title><rect x="572.3" y="451.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="575.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.04%)</title><rect x="573.5" y="451.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="576.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="574.0" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="574.0" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (13 samples, 0.05%)</title><rect x="574.0" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (13 samples, 0.05%)</title><rect x="574.0" y="403.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="577.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (19 samples, 0.08%)</title><rect x="574.6" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.6" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (19 samples, 0.08%)</title><rect x="574.6" y="435.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="577.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (96 samples, 0.40%)</title><rect x="575.5" y="451.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (96 samples, 0.40%)</title><rect x="575.5" y="435.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (96 samples, 0.40%)</title><rect x="575.5" y="419.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="575.5" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="575.5" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (6 samples, 0.03%)</title><rect x="575.5" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.5" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (6 samples, 0.03%)</title><rect x="575.5" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (32 samples, 0.13%)</title><rect x="575.8" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (32 samples, 0.13%)</title><rect x="575.8" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (32 samples, 0.13%)</title><rect x="575.8" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (32 samples, 0.13%)</title><rect x="575.8" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (32 samples, 0.13%)</title><rect x="575.8" y="339.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (32 samples, 0.13%)</title><rect x="575.8" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (32 samples, 0.13%)</title><rect x="575.8" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.13%)</title><rect x="575.8" y="291.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.13%)</title><rect x="575.8" y="275.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="578.8" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (32 samples, 0.13%)</title><rect x="577.4" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.4" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (32 samples, 0.13%)</title><rect x="577.4" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (12 samples, 0.05%)</title><rect x="577.4" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="577.4" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.05%)</title><rect x="577.4" y="339.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="580.4" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (20 samples, 0.08%)</title><rect x="578.0" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (20 samples, 0.08%)</title><rect x="578.0" y="355.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="581.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.11%)</title><rect x="579.0" y="403.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.0" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.11%)</title><rect x="579.0" y="387.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="582.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (17 samples, 0.07%)</title><rect x="580.3" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.07%)</title><rect x="580.3" y="435.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="583.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.builder (367 samples, 1.54%)</title><rect x="581.1" y="515.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.17%)</title><rect x="581.1" y="499.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (40 samples, 0.17%)</title><rect x="581.1" y="483.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (40 samples, 0.17%)</title><rect x="581.1" y="467.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.17%)</title><rect x="581.1" y="451.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.05%)</title><rect x="581.1" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="581.1" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="584.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.12%)</title><rect x="581.7" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.12%)</title><rect x="581.7" y="419.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.7" y="430.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.12%)</title><rect x="581.7" y="403.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="584.7" y="414.0"></text>
</g>
<g>
<title>java/net/URI.create (215 samples, 0.90%)</title><rect x="583.1" y="499.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.1" y="510.0"></text>
</g>
<g>
<title>java.net.URI (40 samples, 0.17%)</title><rect x="583.1" y="483.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="586.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (175 samples, 0.73%)</title><rect x="585.1" y="483.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.1" y="494.0"></text>
</g>
<g>
<title>java.net.URI$Parser (12 samples, 0.05%)</title><rect x="585.1" y="467.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="588.1" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (163 samples, 0.68%)</title><rect x="585.7" y="467.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.10%)</title><rect x="585.7" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="588.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.10%)</title><rect x="585.7" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="585.7" y="419.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="588.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.05%)</title><rect x="586.3" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.3" y="430.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="586.3" y="403.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="589.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (138 samples, 0.58%)</title><rect x="586.9" y="451.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.27%)</title><rect x="586.9" y="435.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.27%)</title><rect x="586.9" y="419.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.11%)</title><rect x="586.9" y="403.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="589.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.16%)</title><rect x="588.2" y="403.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.2" y="414.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.16%)</title><rect x="588.2" y="387.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="591.2" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (74 samples, 0.31%)</title><rect x="590.1" y="435.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.15%)</title><rect x="590.1" y="419.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.15%)</title><rect x="590.1" y="403.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.10%)</title><rect x="590.1" y="387.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="593.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.04%)</title><rect x="591.4" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.4" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="591.4" y="371.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="594.4" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (39 samples, 0.16%)</title><rect x="591.8" y="419.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.8" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (39 samples, 0.16%)</title><rect x="591.8" y="403.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.16%)</title><rect x="591.8" y="387.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.16%)</title><rect x="591.8" y="371.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="591.8" y="355.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="594.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.09%)</title><rect x="592.7" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.7" y="366.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="592.7" y="339.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="595.7" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (57 samples, 0.24%)</title><rect x="593.8" y="499.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (23 samples, 0.10%)</title><rect x="593.8" y="483.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="596.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (34 samples, 0.14%)</title><rect x="594.9" y="483.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (7 samples, 0.03%)</title><rect x="594.9" y="467.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="597.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (27 samples, 0.11%)</title><rect x="595.3" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.11%)</title><rect x="595.3" y="451.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="598.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (48 samples, 0.20%)</title><rect x="596.6" y="499.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (48 samples, 0.20%)</title><rect x="596.6" y="483.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (48 samples, 0.20%)</title><rect x="596.6" y="467.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.6" y="478.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (48 samples, 0.20%)</title><rect x="596.6" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 0.10%)</title><rect x="596.6" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (23 samples, 0.10%)</title><rect x="596.6" y="419.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="599.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$135/1156412280.apply (25 samples, 0.10%)</title><rect x="597.7" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (25 samples, 0.10%)</title><rect x="597.7" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.7" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.05%)</title><rect x="597.7" y="403.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 0.05%)</title><rect x="598.4" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.05%)</title><rect x="598.4" y="387.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="601.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.version (7 samples, 0.03%)</title><rect x="599.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.version (7 samples, 0.03%)</title><rect x="599.0" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.0" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.03%)</title><rect x="599.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.0" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.03%)</title><rect x="599.0" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="602.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromise.&lt;init&gt; (19 samples, 0.08%)</title><rect x="599.3" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromiseContext.schedule (18 samples, 0.08%)</title><rect x="599.4" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedScheduledExecutorService.schedule (18 samples, 0.08%)</title><rect x="599.4" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (18 samples, 0.08%)</title><rect x="599.4" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (15 samples, 0.06%)</title><rect x="599.4" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="602.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (368 samples, 1.55%)</title><rect x="600.3" y="531.0" width="18.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (368 samples, 1.55%)</title><rect x="600.3" y="515.0" width="18.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (368 samples, 1.55%)</title><rect x="600.3" y="499.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.3" y="510.0"></text>
</g>
<g>
<title>java/net/URL.toString (368 samples, 1.55%)</title><rect x="600.3" y="483.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.3" y="494.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (368 samples, 1.55%)</title><rect x="600.3" y="467.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.3" y="478.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (368 samples, 1.55%)</title><rect x="600.3" y="451.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.3" y="462.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.23%)</title><rect x="600.3" y="435.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="603.3" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (30 samples, 0.13%)</title><rect x="602.9" y="435.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="605.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.12%)</title><rect x="604.4" y="435.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="607.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (60 samples, 0.25%)</title><rect x="605.9" y="435.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.9" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (60 samples, 0.25%)</title><rect x="605.9" y="419.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.9" y="430.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.25%)</title><rect x="605.9" y="403.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="608.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (96 samples, 0.40%)</title><rect x="608.8" y="435.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.8" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (96 samples, 0.40%)</title><rect x="608.8" y="419.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.8" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (96 samples, 0.40%)</title><rect x="608.8" y="403.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (96 samples, 0.40%)</title><rect x="608.8" y="387.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.8" y="398.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.40%)</title><rect x="608.8" y="371.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="611.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (99 samples, 0.42%)</title><rect x="613.6" y="435.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (99 samples, 0.42%)</title><rect x="613.6" y="419.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.15%)</title><rect x="613.6" y="403.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="616.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.26%)</title><rect x="615.4" y="403.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.4" y="414.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.26%)</title><rect x="615.4" y="387.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="618.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (114 samples, 0.48%)</title><rect x="618.5" y="531.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.5" y="542.0"></text>
</g>
<g>
<title>java/net/URL.toString (114 samples, 0.48%)</title><rect x="618.5" y="515.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.5" y="526.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (114 samples, 0.48%)</title><rect x="618.5" y="499.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.5" y="510.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (114 samples, 0.48%)</title><rect x="618.5" y="483.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.5" y="494.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="618.5" y="467.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="621.5" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.06%)</title><rect x="619.3" y="467.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="622.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="620.0" y="467.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="623.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (24 samples, 0.10%)</title><rect x="620.7" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (24 samples, 0.10%)</title><rect x="620.7" y="451.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.7" y="462.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="620.7" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="623.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (16 samples, 0.07%)</title><rect x="621.9" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (16 samples, 0.07%)</title><rect x="621.9" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.9" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (16 samples, 0.07%)</title><rect x="621.9" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.07%)</title><rect x="621.9" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.9" y="430.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="621.9" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="624.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (30 samples, 0.13%)</title><rect x="622.7" y="467.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.13%)</title><rect x="622.7" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="622.7" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="625.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.09%)</title><rect x="623.1" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.1" y="446.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="623.1" y="419.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="626.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (25 samples, 0.10%)</title><rect x="624.2" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (25 samples, 0.10%)</title><rect x="624.2" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (11 samples, 0.05%)</title><rect x="624.2" y="547.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="627.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="624.7" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (14 samples, 0.06%)</title><rect x="624.7" y="531.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="627.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.&lt;init&gt; (11 samples, 0.05%)</title><rect x="625.4" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (11 samples, 0.05%)</title><rect x="625.4" y="563.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="628.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (752 samples, 3.16%)</title><rect x="625.9" y="579.0" width="37.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.9" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (752 samples, 3.16%)</title><rect x="625.9" y="563.0" width="37.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.9" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (252 samples, 1.06%)</title><rect x="625.9" y="547.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (103 samples, 0.43%)</title><rect x="625.9" y="531.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.9" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (15 samples, 0.06%)</title><rect x="625.9" y="515.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="628.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (88 samples, 0.37%)</title><rect x="626.7" y="515.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.7" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (19 samples, 0.08%)</title><rect x="626.7" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="629.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (15 samples, 0.06%)</title><rect x="627.6" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.6" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (15 samples, 0.06%)</title><rect x="627.6" y="483.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="630.6" y="494.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (38 samples, 0.16%)</title><rect x="628.4" y="499.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="631.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (16 samples, 0.07%)</title><rect x="630.2" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.07%)</title><rect x="630.2" y="483.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="633.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (149 samples, 0.63%)</title><rect x="631.0" y="531.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (14 samples, 0.06%)</title><rect x="631.0" y="515.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="634.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (135 samples, 0.57%)</title><rect x="631.7" y="515.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (135 samples, 0.57%)</title><rect x="631.7" y="499.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (135 samples, 0.57%)</title><rect x="631.7" y="483.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (135 samples, 0.57%)</title><rect x="631.7" y="467.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.26%)</title><rect x="631.7" y="451.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (61 samples, 0.26%)</title><rect x="631.7" y="435.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (61 samples, 0.26%)</title><rect x="631.7" y="419.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (37 samples, 0.16%)</title><rect x="631.7" y="403.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (37 samples, 0.16%)</title><rect x="631.7" y="387.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (37 samples, 0.16%)</title><rect x="631.7" y="371.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (37 samples, 0.16%)</title><rect x="631.7" y="355.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (37 samples, 0.16%)</title><rect x="631.7" y="339.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="634.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (24 samples, 0.10%)</title><rect x="633.6" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (24 samples, 0.10%)</title><rect x="633.6" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.10%)</title><rect x="633.6" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.10%)</title><rect x="633.6" y="355.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.6" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (24 samples, 0.10%)</title><rect x="633.6" y="339.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="636.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (74 samples, 0.31%)</title><rect x="634.8" y="451.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (74 samples, 0.31%)</title><rect x="634.8" y="435.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (74 samples, 0.31%)</title><rect x="634.8" y="419.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (74 samples, 0.31%)</title><rect x="634.8" y="403.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="637.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (500 samples, 2.10%)</title><rect x="638.4" y="547.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.4" y="558.0">r..</text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.10%)</title><rect x="638.4" y="531.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="641.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (40 samples, 0.17%)</title><rect x="639.6" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (40 samples, 0.17%)</title><rect x="639.6" y="515.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (40 samples, 0.17%)</title><rect x="639.6" y="499.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (40 samples, 0.17%)</title><rect x="639.6" y="483.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.17%)</title><rect x="639.6" y="467.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.17%)</title><rect x="639.6" y="451.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="642.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (437 samples, 1.83%)</title><rect x="641.5" y="531.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.5" y="542.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (113 samples, 0.47%)</title><rect x="641.5" y="515.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (110 samples, 0.46%)</title><rect x="641.7" y="499.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.7" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (29 samples, 0.12%)</title><rect x="641.7" y="483.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="644.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (14 samples, 0.06%)</title><rect x="643.1" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.1" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (14 samples, 0.06%)</title><rect x="643.1" y="467.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="646.1" y="478.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (35 samples, 0.15%)</title><rect x="643.8" y="483.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="646.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (32 samples, 0.13%)</title><rect x="645.6" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.13%)</title><rect x="645.6" y="467.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="648.6" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.09%)</title><rect x="647.1" y="515.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="650.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (60 samples, 0.25%)</title><rect x="648.2" y="515.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.2" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (23 samples, 0.10%)</title><rect x="648.2" y="499.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="651.2" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (37 samples, 0.16%)</title><rect x="649.3" y="499.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.3" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (37 samples, 0.16%)</title><rect x="649.3" y="483.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (37 samples, 0.16%)</title><rect x="649.3" y="467.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="652.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.06%)</title><rect x="651.2" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="651.2" y="499.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="654.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (84 samples, 0.35%)</title><rect x="651.9" y="515.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (28 samples, 0.12%)</title><rect x="651.9" y="499.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="654.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (56 samples, 0.24%)</title><rect x="653.2" y="499.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.24%)</title><rect x="653.2" y="483.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (56 samples, 0.24%)</title><rect x="653.2" y="467.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (56 samples, 0.24%)</title><rect x="653.2" y="451.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (37 samples, 0.16%)</title><rect x="653.2" y="435.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (37 samples, 0.16%)</title><rect x="653.2" y="419.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (37 samples, 0.16%)</title><rect x="653.2" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (37 samples, 0.16%)</title><rect x="653.2" y="387.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (37 samples, 0.16%)</title><rect x="653.2" y="371.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="656.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (19 samples, 0.08%)</title><rect x="655.1" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (19 samples, 0.08%)</title><rect x="655.1" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (19 samples, 0.08%)</title><rect x="655.1" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (19 samples, 0.08%)</title><rect x="655.1" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.1" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (19 samples, 0.08%)</title><rect x="655.1" y="371.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="658.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (145 samples, 0.61%)</title><rect x="656.0" y="515.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (24 samples, 0.10%)</title><rect x="656.0" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.0" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (24 samples, 0.10%)</title><rect x="656.0" y="483.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="659.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.07%)</title><rect x="657.2" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.07%)</title><rect x="657.2" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.get$Lambda (17 samples, 0.07%)</title><rect x="657.2" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.2" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.table.MemTable$$Lambda$364 (17 samples, 0.07%)</title><rect x="657.2" y="451.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="660.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (34 samples, 0.14%)</title><rect x="658.0" y="499.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.0" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (10 samples, 0.04%)</title><rect x="658.0" y="483.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="661.0" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (24 samples, 0.10%)</title><rect x="658.5" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (24 samples, 0.10%)</title><rect x="658.5" y="467.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (24 samples, 0.10%)</title><rect x="658.5" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="661.5" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (28 samples, 0.12%)</title><rect x="659.7" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.7" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (11 samples, 0.05%)</title><rect x="659.7" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="662.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (17 samples, 0.07%)</title><rect x="660.3" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (17 samples, 0.07%)</title><rect x="660.3" y="467.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="663.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (42 samples, 0.18%)</title><rect x="661.1" y="499.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (42 samples, 0.18%)</title><rect x="661.1" y="483.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (42 samples, 0.18%)</title><rect x="661.1" y="467.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (42 samples, 0.18%)</title><rect x="661.1" y="451.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (42 samples, 0.18%)</title><rect x="661.1" y="435.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="664.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.valueOf (292 samples, 1.23%)</title><rect x="663.2" y="579.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (237 samples, 1.00%)</title><rect x="663.2" y="563.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (166 samples, 0.70%)</title><rect x="663.2" y="547.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (166 samples, 0.70%)</title><rect x="663.2" y="531.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (166 samples, 0.70%)</title><rect x="663.2" y="515.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (46 samples, 0.19%)</title><rect x="663.2" y="499.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (46 samples, 0.19%)</title><rect x="663.2" y="483.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (46 samples, 0.19%)</title><rect x="663.2" y="467.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (24 samples, 0.10%)</title><rect x="663.2" y="451.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (24 samples, 0.10%)</title><rect x="663.2" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (24 samples, 0.10%)</title><rect x="663.2" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (24 samples, 0.10%)</title><rect x="663.2" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.2" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (24 samples, 0.10%)</title><rect x="663.2" y="387.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="666.2" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (22 samples, 0.09%)</title><rect x="664.4" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (22 samples, 0.09%)</title><rect x="664.4" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (22 samples, 0.09%)</title><rect x="664.4" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (22 samples, 0.09%)</title><rect x="664.4" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.4" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (22 samples, 0.09%)</title><rect x="664.4" y="387.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="667.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (120 samples, 0.50%)</title><rect x="665.5" y="499.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (120 samples, 0.50%)</title><rect x="665.5" y="483.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (120 samples, 0.50%)</title><rect x="665.5" y="467.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.5" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (120 samples, 0.50%)</title><rect x="665.5" y="451.0" width="5.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="668.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (71 samples, 0.30%)</title><rect x="671.4" y="547.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (71 samples, 0.30%)</title><rect x="671.4" y="531.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (71 samples, 0.30%)</title><rect x="671.4" y="515.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (71 samples, 0.30%)</title><rect x="671.4" y="499.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="674.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (55 samples, 0.23%)</title><rect x="674.9" y="563.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (55 samples, 0.23%)</title><rect x="674.9" y="547.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.9" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.23%)</title><rect x="674.9" y="531.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="677.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.fromCompletableFuture (16 samples, 0.07%)</title><rect x="677.7" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (11 samples, 0.05%)</title><rect x="677.9" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (11 samples, 0.05%)</title><rect x="677.9" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (10 samples, 0.04%)</title><rect x="677.9" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (484 samples, 2.03%)</title><rect x="678.5" y="579.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.5" y="590.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (41 samples, 0.17%)</title><rect x="678.6" y="563.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.6" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.spliterator (14 samples, 0.06%)</title><rect x="678.6" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.6" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (14 samples, 0.06%)</title><rect x="678.6" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.6" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (14 samples, 0.06%)</title><rect x="678.6" y="515.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="681.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (27 samples, 0.11%)</title><rect x="679.3" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.3" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (27 samples, 0.11%)</title><rect x="679.3" y="531.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="682.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toCollection (13 samples, 0.05%)</title><rect x="680.8" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.8" y="574.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (13 samples, 0.05%)</title><rect x="680.8" y="547.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="683.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (185 samples, 0.78%)</title><rect x="681.4" y="563.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (175 samples, 0.73%)</title><rect x="681.4" y="547.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (175 samples, 0.73%)</title><rect x="681.4" y="531.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (167 samples, 0.70%)</title><rect x="681.4" y="515.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (133 samples, 0.56%)</title><rect x="681.4" y="499.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (133 samples, 0.56%)</title><rect x="681.4" y="483.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.4" y="494.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (19 samples, 0.08%)</title><rect x="681.4" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.4" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (19 samples, 0.08%)</title><rect x="681.4" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.4" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (19 samples, 0.08%)</title><rect x="681.4" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.4" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (7 samples, 0.03%)</title><rect x="681.4" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="684.4" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (12 samples, 0.05%)</title><rect x="681.8" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (7 samples, 0.03%)</title><rect x="681.8" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (7 samples, 0.03%)</title><rect x="681.8" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="684.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (65 samples, 0.27%)</title><rect x="682.4" y="467.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.4" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (65 samples, 0.27%)</title><rect x="682.4" y="451.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (65 samples, 0.27%)</title><rect x="682.4" y="435.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (65 samples, 0.27%)</title><rect x="682.4" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (52 samples, 0.22%)</title><rect x="682.4" y="403.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (52 samples, 0.22%)</title><rect x="682.4" y="387.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (52 samples, 0.22%)</title><rect x="682.4" y="371.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.4" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (28 samples, 0.12%)</title><rect x="682.4" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.4" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (28 samples, 0.12%)</title><rect x="682.4" y="339.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="685.4" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (24 samples, 0.10%)</title><rect x="683.8" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.8" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (24 samples, 0.10%)</title><rect x="683.8" y="339.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="686.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (13 samples, 0.05%)</title><rect x="685.0" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.accept (13 samples, 0.05%)</title><rect x="685.0" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.05%)</title><rect x="685.0" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.05%)</title><rect x="685.0" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.05%)</title><rect x="685.0" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.05%)</title><rect x="685.0" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.05%)</title><rect x="685.0" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.05%)</title><rect x="685.0" y="291.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="688.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (26 samples, 0.11%)</title><rect x="685.6" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.begin (26 samples, 0.11%)</title><rect x="685.6" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (15 samples, 0.06%)</title><rect x="685.8" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (15 samples, 0.06%)</title><rect x="685.8" y="419.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.begin (6 samples, 0.03%)</title><rect x="686.6" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.begin (6 samples, 0.03%)</title><rect x="686.6" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.6" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="686.6" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="689.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (23 samples, 0.10%)</title><rect x="686.9" y="467.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (23 samples, 0.10%)</title><rect x="686.9" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (23 samples, 0.10%)</title><rect x="686.9" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (23 samples, 0.10%)</title><rect x="686.9" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (17 samples, 0.07%)</title><rect x="686.9" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/1543974463.accept (17 samples, 0.07%)</title><rect x="686.9" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="686.9" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="686.9" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="686.9" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="686.9" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="686.9" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.07%)</title><rect x="686.9" y="291.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="689.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (6 samples, 0.03%)</title><rect x="687.7" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$$Lambda$130/1907408684.get (6 samples, 0.03%)</title><rect x="687.7" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="687.7" y="371.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (34 samples, 0.14%)</title><rect x="688.0" y="499.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (8 samples, 0.03%)</title><rect x="688.2" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (8 samples, 0.03%)</title><rect x="688.2" y="467.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="691.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (11 samples, 0.05%)</title><rect x="688.6" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1$1 (11 samples, 0.05%)</title><rect x="688.6" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="691.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (12 samples, 0.05%)</title><rect x="689.1" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$RefSortingSink (12 samples, 0.05%)</title><rect x="689.1" y="467.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="692.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (8 samples, 0.03%)</title><rect x="689.7" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (8 samples, 0.03%)</title><rect x="689.7" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.7" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (8 samples, 0.03%)</title><rect x="689.7" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="692.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (10 samples, 0.04%)</title><rect x="690.1" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.1" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (10 samples, 0.04%)</title><rect x="690.1" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="693.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.distinct (15 samples, 0.06%)</title><rect x="690.6" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps.makeRef (15 samples, 0.06%)</title><rect x="690.6" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.6" y="558.0"></text>
</g>
<g>
<title>java.util.stream.DistinctOps$1 (15 samples, 0.06%)</title><rect x="690.6" y="531.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="693.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (23 samples, 0.10%)</title><rect x="691.3" y="563.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (23 samples, 0.10%)</title><rect x="691.3" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.3" y="558.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (23 samples, 0.10%)</title><rect x="691.3" y="531.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="694.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (20 samples, 0.08%)</title><rect x="692.5" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.5" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (20 samples, 0.08%)</title><rect x="692.5" y="547.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="695.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (9 samples, 0.04%)</title><rect x="693.5" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (9 samples, 0.04%)</title><rect x="693.5" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (9 samples, 0.04%)</title><rect x="693.5" y="531.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="696.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (172 samples, 0.72%)</title><rect x="693.9" y="563.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.03%)</title><rect x="693.9" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Long (6 samples, 0.03%)</title><rect x="693.9" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="696.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.05%)</title><rect x="694.2" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.05%)</title><rect x="694.2" y="531.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="697.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (148 samples, 0.62%)</title><rect x="695.1" y="547.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.05%)</title><rect x="695.2" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="695.2" y="515.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="698.2" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (15 samples, 0.06%)</title><rect x="695.8" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (15 samples, 0.06%)</title><rect x="695.8" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.8" y="526.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (15 samples, 0.06%)</title><rect x="695.8" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="510.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="695.8" y="483.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="698.8" y="494.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (120 samples, 0.50%)</title><rect x="696.5" y="531.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.5" y="542.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (12 samples, 0.05%)</title><rect x="696.5" y="515.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="699.5" y="526.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (108 samples, 0.45%)</title><rect x="697.1" y="515.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.1" y="526.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (104 samples, 0.44%)</title><rect x="697.3" y="499.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.3" y="510.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (104 samples, 0.44%)</title><rect x="697.3" y="483.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.3" y="494.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (94 samples, 0.39%)</title><rect x="697.3" y="467.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.3" y="478.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (94 samples, 0.39%)</title><rect x="697.3" y="451.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (20 samples, 0.08%)</title><rect x="697.6" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (20 samples, 0.08%)</title><rect x="697.6" y="419.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.6" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (20 samples, 0.08%)</title><rect x="697.6" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (20 samples, 0.08%)</title><rect x="697.6" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.6" y="398.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (20 samples, 0.08%)</title><rect x="697.6" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="700.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (68 samples, 0.29%)</title><rect x="698.6" y="435.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (68 samples, 0.29%)</title><rect x="698.6" y="419.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor1.newInstance (68 samples, 0.29%)</title><rect x="698.6" y="403.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.6" y="414.0"></text>
</g>
<g>
<title>sun.security.provider.MD5 (14 samples, 0.06%)</title><rect x="698.6" y="387.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="701.6" y="398.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (54 samples, 0.23%)</title><rect x="699.3" y="387.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.3" y="398.0"></text>
</g>
<g>
<title>int[] (30 samples, 0.13%)</title><rect x="699.3" y="371.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="702.3" y="382.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (24 samples, 0.10%)</title><rect x="700.8" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.8" y="382.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.10%)</title><rect x="700.8" y="355.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="703.8" y="366.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (10 samples, 0.04%)</title><rect x="701.9" y="467.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="704.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.keyByteBuffer (116 samples, 0.49%)</title><rect x="702.4" y="579.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (47 samples, 0.20%)</title><rect x="702.4" y="563.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (47 samples, 0.20%)</title><rect x="702.4" y="547.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 0.20%)</title><rect x="702.4" y="531.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="705.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.getBytesFromKey (69 samples, 0.29%)</title><rect x="704.8" y="563.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (69 samples, 0.29%)</title><rect x="704.8" y="547.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (69 samples, 0.29%)</title><rect x="704.8" y="531.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (69 samples, 0.29%)</title><rect x="704.8" y="515.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (69 samples, 0.29%)</title><rect x="704.8" y="499.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.8" y="510.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.29%)</title><rect x="704.8" y="483.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="707.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.collapseFutures (301 samples, 1.26%)</title><rect x="708.2" y="579.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.06%)</title><rect x="708.2" y="563.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="711.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (10 samples, 0.04%)</title><rect x="708.9" y="563.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="711.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1401870099.linkToTargetMethod (9 samples, 0.04%)</title><rect x="709.4" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/557383628.invokeStatic (9 samples, 0.04%)</title><rect x="709.4" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.get$Lambda (9 samples, 0.04%)</title><rect x="709.4" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.4" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$168 (9 samples, 0.04%)</title><rect x="709.4" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="712.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEach (268 samples, 1.13%)</title><rect x="709.8" y="563.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEachFrom (268 samples, 1.13%)</title><rect x="709.8" y="547.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.accept (268 samples, 1.13%)</title><rect x="709.8" y="531.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$collapseFutures$2 (268 samples, 1.13%)</title><rect x="709.8" y="515.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (62 samples, 0.26%)</title><rect x="709.8" y="499.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (62 samples, 0.26%)</title><rect x="709.8" y="483.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (40 samples, 0.17%)</title><rect x="709.8" y="467.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="712.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="711.8" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (6 samples, 0.03%)</title><rect x="711.8" y="451.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="714.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.07%)</title><rect x="712.1" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.07%)</title><rect x="712.1" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.07%)</title><rect x="712.1" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="715.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (67 samples, 0.28%)</title><rect x="712.9" y="499.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (67 samples, 0.28%)</title><rect x="712.9" y="483.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (35 samples, 0.15%)</title><rect x="712.9" y="467.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="715.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="714.6" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (10 samples, 0.04%)</title><rect x="714.6" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="717.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="715.1" y="467.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="715.1" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="715.1" y="435.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="718.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (52 samples, 0.22%)</title><rect x="716.2" y="499.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (52 samples, 0.22%)</title><rect x="716.2" y="483.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (27 samples, 0.11%)</title><rect x="716.2" y="467.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="719.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="717.6" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (12 samples, 0.05%)</title><rect x="717.6" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="720.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="718.1" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="718.1" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="718.1" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="721.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.biConsumer (87 samples, 0.37%)</title><rect x="718.8" y="499.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (15 samples, 0.06%)</title><rect x="718.8" y="483.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="721.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1708024697.linkToTargetMethod (39 samples, 0.16%)</title><rect x="719.5" y="483.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/156204642.invokeStatic (39 samples, 0.16%)</title><rect x="719.5" y="467.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.get$Lambda (39 samples, 0.16%)</title><rect x="719.5" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.5" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$169 (39 samples, 0.16%)</title><rect x="719.5" y="435.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="722.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (33 samples, 0.14%)</title><rect x="721.5" y="483.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (33 samples, 0.14%)</title><rect x="721.5" y="467.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="724.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.from (186 samples, 0.78%)</title><rect x="723.1" y="579.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (66 samples, 0.28%)</title><rect x="723.1" y="563.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2136217347.invoke (66 samples, 0.28%)</title><rect x="723.1" y="547.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.28%)</title><rect x="723.1" y="531.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.06%)</title><rect x="723.1" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="723.1" y="499.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="726.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.22%)</title><rect x="723.8" y="515.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.22%)</title><rect x="723.8" y="499.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.8" y="510.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.22%)</title><rect x="723.8" y="483.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="726.8" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.06%)</title><rect x="726.4" y="563.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="729.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (86 samples, 0.36%)</title><rect x="727.1" y="563.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.1" y="574.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.18%)</title><rect x="727.1" y="547.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="730.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.10%)</title><rect x="729.2" y="547.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="732.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="730.4" y="547.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="733.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.body (19 samples, 0.08%)</title><rect x="731.4" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.4" y="574.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="731.4" y="547.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="734.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (297 samples, 1.25%)</title><rect x="732.3" y="627.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (297 samples, 1.25%)</title><rect x="732.3" y="611.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (251 samples, 1.05%)</title><rect x="732.3" y="595.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (197 samples, 0.83%)</title><rect x="732.3" y="579.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (197 samples, 0.83%)</title><rect x="732.3" y="563.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.3" y="574.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.83%)</title><rect x="732.3" y="547.0" width="9.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="735.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 0.23%)</title><rect x="742.1" y="579.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.1" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (54 samples, 0.23%)</title><rect x="742.1" y="563.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="745.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (46 samples, 0.19%)</title><rect x="744.8" y="595.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.19%)</title><rect x="744.8" y="579.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.19%)</title><rect x="744.8" y="563.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="744.8" y="547.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="747.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="745.9" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.9" y="558.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="745.9" y="531.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="748.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,560 samples, 10.75%)</title><rect x="747.0" y="707.0" width="126.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.0" y="718.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,560 samples, 10.75%)</title><rect x="747.0" y="691.0" width="126.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.0" y="702.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,559 samples, 10.75%)</title><rect x="747.1" y="675.0" width="126.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.1" y="686.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,559 samples, 10.75%)</title><rect x="747.1" y="659.0" width="126.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.1" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,559 samples, 10.75%)</title><rect x="747.1" y="643.0" width="126.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.1" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,559 samples, 10.75%)</title><rect x="747.1" y="627.0" width="126.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.1" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,254 samples, 9.46%)</title><rect x="747.1" y="611.0" width="111.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.1" y="622.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,254 samples, 9.46%)</title><rect x="747.1" y="595.0" width="111.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.1" y="606.0">java/util/con..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$376/824065107.apply (2,254 samples, 9.46%)</title><rect x="747.1" y="579.0" width="111.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.1" y="590.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$6 (2,254 samples, 9.46%)</title><rect x="747.1" y="563.0" width="111.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.1" y="574.0">ru/mail/polis..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (456 samples, 1.91%)</title><rect x="747.1" y="547.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.1" y="558.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (456 samples, 1.91%)</title><rect x="747.1" y="531.0" width="22.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.1" y="542.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (456 samples, 1.91%)</title><rect x="747.1" y="515.0" width="22.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.1" y="526.0">c..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (66 samples, 0.28%)</title><rect x="747.1" y="499.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="750.1" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (390 samples, 1.64%)</title><rect x="750.4" y="499.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (390 samples, 1.64%)</title><rect x="750.4" y="483.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (390 samples, 1.64%)</title><rect x="750.4" y="467.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.4" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (390 samples, 1.64%)</title><rect x="750.4" y="451.0" width="19.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.4" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (390 samples, 1.64%)</title><rect x="750.4" y="435.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.4" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (390 samples, 1.64%)</title><rect x="750.4" y="419.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.4" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (390 samples, 1.64%)</title><rect x="750.4" y="403.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (324 samples, 1.36%)</title><rect x="750.4" y="387.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (324 samples, 1.36%)</title><rect x="750.4" y="371.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (63 samples, 0.26%)</title><rect x="750.4" y="355.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.4" y="366.0"></text>
</g>
<g>
<title>java.util.Date (10 samples, 0.04%)</title><rect x="750.4" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="753.4" y="350.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (53 samples, 0.22%)</title><rect x="750.9" y="339.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (11 samples, 0.05%)</title><rect x="750.9" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="753.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (13 samples, 0.05%)</title><rect x="751.4" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.4" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.05%)</title><rect x="751.4" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.4" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="751.4" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="754.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (29 samples, 0.12%)</title><rect x="752.0" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.12%)</title><rect x="752.0" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="752.0" y="291.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="755.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.06%)</title><rect x="752.7" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.7" y="302.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="752.7" y="275.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="755.7" y="286.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.05%)</title><rect x="753.5" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="756.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.04%)</title><rect x="754.1" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.1" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.04%)</title><rect x="754.1" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.1" y="350.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="754.1" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="757.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (173 samples, 0.73%)</title><rect x="754.5" y="355.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.5" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (173 samples, 0.73%)</title><rect x="754.5" y="339.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (173 samples, 0.73%)</title><rect x="754.5" y="323.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (173 samples, 0.73%)</title><rect x="754.5" y="307.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.5" y="318.0"></text>
</g>
<g>
<title>byte[] (173 samples, 0.73%)</title><rect x="754.5" y="291.0" width="8.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="757.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (67 samples, 0.28%)</title><rect x="763.1" y="355.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (67 samples, 0.28%)</title><rect x="763.1" y="339.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="763.1" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="766.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.24%)</title><rect x="763.6" y="323.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.6" y="334.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.24%)</title><rect x="763.6" y="307.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="766.6" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (66 samples, 0.28%)</title><rect x="766.4" y="387.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (66 samples, 0.28%)</title><rect x="766.4" y="371.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (66 samples, 0.28%)</title><rect x="766.4" y="355.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (66 samples, 0.28%)</title><rect x="766.4" y="339.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.28%)</title><rect x="766.4" y="323.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.4" y="334.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.28%)</title><rect x="766.4" y="307.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="769.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1,624 samples, 6.82%)</title><rect x="769.7" y="547.0" width="80.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.7" y="558.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,624 samples, 6.82%)</title><rect x="769.7" y="531.0" width="80.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.7" y="542.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,613 samples, 6.77%)</title><rect x="769.7" y="515.0" width="79.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.7" y="526.0">ch/qos/lo..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (28 samples, 0.12%)</title><rect x="769.7" y="499.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="772.7" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,585 samples, 6.66%)</title><rect x="771.1" y="499.0" width="78.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.1" y="510.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,585 samples, 6.66%)</title><rect x="771.1" y="483.0" width="78.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.1" y="494.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,585 samples, 6.66%)</title><rect x="771.1" y="467.0" width="78.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.1" y="478.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,585 samples, 6.66%)</title><rect x="771.1" y="451.0" width="78.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.1" y="462.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,585 samples, 6.66%)</title><rect x="771.1" y="435.0" width="78.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.1" y="446.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,585 samples, 6.66%)</title><rect x="771.1" y="419.0" width="78.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.1" y="430.0">ch/qos/lo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (970 samples, 4.07%)</title><rect x="771.1" y="403.0" width="48.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.1" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (970 samples, 4.07%)</title><rect x="771.1" y="387.0" width="48.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.1" y="398.0">ch/q..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (970 samples, 4.07%)</title><rect x="771.1" y="371.0" width="48.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.1" y="382.0">org/..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (970 samples, 4.07%)</title><rect x="771.1" y="355.0" width="48.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.1" y="366.0">org/..</text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.03%)</title><rect x="771.1" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="774.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="771.5" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (30 samples, 0.13%)</title><rect x="771.5" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.5" y="334.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="771.5" y="307.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="774.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (130 samples, 0.55%)</title><rect x="772.9" y="339.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (130 samples, 0.55%)</title><rect x="772.9" y="323.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (130 samples, 0.55%)</title><rect x="772.9" y="307.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (130 samples, 0.55%)</title><rect x="772.9" y="291.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.9" y="302.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.55%)</title><rect x="772.9" y="275.0" width="6.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="775.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (95 samples, 0.40%)</title><rect x="779.4" y="339.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.40%)</title><rect x="779.4" y="323.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.08%)</title><rect x="779.4" y="307.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="782.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 0.32%)</title><rect x="780.3" y="307.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.3" y="318.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.32%)</title><rect x="780.3" y="291.0" width="3.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="783.3" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (707 samples, 2.97%)</title><rect x="784.1" y="339.0" width="35.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.1" y="350.0">org..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (707 samples, 2.97%)</title><rect x="784.1" y="323.0" width="35.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.1" y="334.0">org..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (67 samples, 0.28%)</title><rect x="784.1" y="307.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.1" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (67 samples, 0.28%)</title><rect x="784.1" y="291.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.1" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (67 samples, 0.28%)</title><rect x="784.1" y="275.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 0.28%)</title><rect x="784.1" y="259.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.1" y="270.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.28%)</title><rect x="784.1" y="243.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="787.1" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (640 samples, 2.69%)</title><rect x="787.4" y="307.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.4" y="318.0">ja..</text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.05%)</title><rect x="787.4" y="291.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="790.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (12 samples, 0.05%)</title><rect x="788.0" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.0" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (12 samples, 0.05%)</title><rect x="788.0" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.0" y="286.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="788.0" y="259.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="791.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (541 samples, 2.27%)</title><rect x="788.6" y="291.0" width="26.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.6" y="302.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (113 samples, 0.47%)</title><rect x="788.6" y="275.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.6" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (113 samples, 0.47%)</title><rect x="788.6" y="259.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.47%)</title><rect x="788.6" y="243.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.6" y="254.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.47%)</title><rect x="788.6" y="227.0" width="5.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="791.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (396 samples, 1.66%)</title><rect x="794.2" y="275.0" width="19.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Object.toString (396 samples, 1.66%)</title><rect x="794.2" y="259.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.2" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (27 samples, 0.11%)</title><rect x="794.2" y="243.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="797.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (28 samples, 0.12%)</title><rect x="795.5" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.5" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (28 samples, 0.12%)</title><rect x="795.5" y="227.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.5" y="238.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="795.5" y="211.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="798.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (39 samples, 0.16%)</title><rect x="796.9" y="243.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (39 samples, 0.16%)</title><rect x="796.9" y="227.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.9" y="238.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.16%)</title><rect x="796.9" y="211.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="799.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (197 samples, 0.83%)</title><rect x="798.9" y="243.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (197 samples, 0.83%)</title><rect x="798.9" y="227.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (197 samples, 0.83%)</title><rect x="798.9" y="211.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.9" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (197 samples, 0.83%)</title><rect x="798.9" y="195.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.9" y="206.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.83%)</title><rect x="798.9" y="179.0" width="9.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="801.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (105 samples, 0.44%)</title><rect x="808.6" y="243.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.44%)</title><rect x="808.6" y="227.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.6" y="238.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.12%)</title><rect x="808.6" y="211.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="811.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.32%)</title><rect x="810.1" y="211.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.1" y="222.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.32%)</title><rect x="810.1" y="195.0" width="3.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="813.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (32 samples, 0.13%)</title><rect x="813.8" y="275.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (32 samples, 0.13%)</title><rect x="813.8" y="259.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (32 samples, 0.13%)</title><rect x="813.8" y="243.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="816.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.13%)</title><rect x="813.8" y="227.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.8" y="238.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.13%)</title><rect x="813.8" y="211.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="816.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (75 samples, 0.31%)</title><rect x="815.4" y="291.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 0.31%)</title><rect x="815.4" y="275.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="815.4" y="259.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="818.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.26%)</title><rect x="816.0" y="259.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.0" y="270.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.26%)</title><rect x="816.0" y="243.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="819.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (615 samples, 2.58%)</title><rect x="819.1" y="403.0" width="30.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.1" y="414.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (493 samples, 2.07%)</title><rect x="819.1" y="387.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.1" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (493 samples, 2.07%)</title><rect x="819.1" y="371.0" width="24.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.1" y="382.0">c..</text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.05%)</title><rect x="819.1" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="822.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="819.7" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="819.7" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.7" y="350.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="819.7" y="323.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="822.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (352 samples, 1.48%)</title><rect x="820.4" y="355.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.4" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (352 samples, 1.48%)</title><rect x="820.4" y="339.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.4" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (352 samples, 1.48%)</title><rect x="820.4" y="323.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (352 samples, 1.48%)</title><rect x="820.4" y="307.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.4" y="318.0"></text>
</g>
<g>
<title>byte[] (352 samples, 1.48%)</title><rect x="820.4" y="291.0" width="17.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="823.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (115 samples, 0.48%)</title><rect x="837.9" y="355.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 0.48%)</title><rect x="837.9" y="339.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="837.9" y="323.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="840.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (105 samples, 0.44%)</title><rect x="838.4" y="323.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.4" y="334.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.44%)</title><rect x="838.4" y="307.0" width="5.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="841.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (122 samples, 0.51%)</title><rect x="843.6" y="387.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (122 samples, 0.51%)</title><rect x="843.6" y="371.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (122 samples, 0.51%)</title><rect x="843.6" y="355.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (122 samples, 0.51%)</title><rect x="843.6" y="339.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.51%)</title><rect x="843.6" y="323.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.6" y="334.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.51%)</title><rect x="843.6" y="307.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="846.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.05%)</title><rect x="849.6" y="515.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="852.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.responseFromValues (174 samples, 0.73%)</title><rect x="850.1" y="547.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.merge (108 samples, 0.45%)</title><rect x="850.1" y="531.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (35 samples, 0.15%)</title><rect x="850.1" y="515.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (10 samples, 0.04%)</title><rect x="850.1" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.1" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (10 samples, 0.04%)</title><rect x="850.1" y="483.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="853.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (25 samples, 0.10%)</title><rect x="850.6" y="499.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.6" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (25 samples, 0.10%)</title><rect x="850.6" y="483.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="853.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (31 samples, 0.13%)</title><rect x="852.1" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.1" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (31 samples, 0.13%)</title><rect x="852.1" y="499.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="855.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (38 samples, 0.16%)</title><rect x="853.6" y="515.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (35 samples, 0.15%)</title><rect x="853.8" y="499.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (30 samples, 0.13%)</title><rect x="853.8" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (30 samples, 0.13%)</title><rect x="853.8" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (10 samples, 0.04%)</title><rect x="854.0" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (10 samples, 0.04%)</title><rect x="854.0" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (10 samples, 0.04%)</title><rect x="854.0" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="857.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (16 samples, 0.07%)</title><rect x="854.5" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (16 samples, 0.07%)</title><rect x="854.5" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.5" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (16 samples, 0.07%)</title><rect x="854.5" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.5" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (16 samples, 0.07%)</title><rect x="854.5" y="403.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="857.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.from (66 samples, 0.28%)</title><rect x="855.5" y="531.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.5" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.05%)</title><rect x="855.5" y="515.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="858.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (39 samples, 0.16%)</title><rect x="856.1" y="515.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.1" y="526.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="856.1" y="499.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="859.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.05%)</title><rect x="856.8" y="499.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="859.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="857.4" y="499.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="860.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.body (14 samples, 0.06%)</title><rect x="858.1" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.1" y="526.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="858.1" y="499.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="861.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (305 samples, 1.28%)</title><rect x="858.8" y="611.0" width="15.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (279 samples, 1.17%)</title><rect x="858.8" y="595.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (279 samples, 1.17%)</title><rect x="858.8" y="579.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (279 samples, 1.17%)</title><rect x="858.8" y="563.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl$$Lambda$372/1245883880.apply (279 samples, 1.17%)</title><rect x="858.8" y="547.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.fromHttpResponse (279 samples, 1.17%)</title><rect x="858.8" y="531.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (76 samples, 0.32%)</title><rect x="858.8" y="515.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (76 samples, 0.32%)</title><rect x="858.8" y="499.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.8" y="510.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.22%)</title><rect x="858.8" y="483.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="861.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="861.4" y="483.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="864.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (128 samples, 0.54%)</title><rect x="862.5" y="515.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.5" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (93 samples, 0.39%)</title><rect x="862.5" y="499.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.5" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (37 samples, 0.16%)</title><rect x="862.5" y="483.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.5" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (37 samples, 0.16%)</title><rect x="862.5" y="467.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="865.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (56 samples, 0.24%)</title><rect x="864.4" y="483.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (56 samples, 0.24%)</title><rect x="864.4" y="467.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="867.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (35 samples, 0.15%)</title><rect x="867.1" y="499.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (35 samples, 0.15%)</title><rect x="867.1" y="483.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (35 samples, 0.15%)</title><rect x="867.1" y="467.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (19 samples, 0.08%)</title><rect x="867.1" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.1" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (19 samples, 0.08%)</title><rect x="867.1" y="435.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="870.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (16 samples, 0.07%)</title><rect x="868.1" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (16 samples, 0.07%)</title><rect x="868.1" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.1" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (16 samples, 0.07%)</title><rect x="868.1" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.1" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (16 samples, 0.07%)</title><rect x="868.1" y="403.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="871.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.18%)</title><rect x="868.9" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.18%)</title><rect x="868.9" y="499.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.18%)</title><rect x="868.9" y="483.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="871.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.present (32 samples, 0.13%)</title><rect x="871.0" y="515.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (32 samples, 0.13%)</title><rect x="871.0" y="499.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="874.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (26 samples, 0.11%)</title><rect x="872.6" y="595.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.accept (26 samples, 0.11%)</title><rect x="872.6" y="579.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$biConsumer$3 (26 samples, 0.11%)</title><rect x="872.6" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.11%)</title><rect x="872.6" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.11%)</title><rect x="872.6" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.11%)</title><rect x="872.6" y="515.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.11%)</title><rect x="872.6" y="499.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.11%)</title><rect x="872.6" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.11%)</title><rect x="872.6" y="467.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (432 samples, 1.81%)</title><rect x="873.9" y="707.0" width="21.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.9" y="718.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="873.9" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="873.9" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (7 samples, 0.03%)</title><rect x="874.3" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="874.3" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.get$Lambda (7 samples, 0.03%)</title><rect x="874.3" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$291 (7 samples, 0.03%)</title><rect x="874.3" y="643.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="877.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (94 samples, 0.39%)</title><rect x="874.6" y="691.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$292/2116813995.accept (82 samples, 0.34%)</title><rect x="874.6" y="675.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (82 samples, 0.34%)</title><rect x="874.6" y="659.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (82 samples, 0.34%)</title><rect x="874.6" y="643.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (82 samples, 0.34%)</title><rect x="874.6" y="627.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (82 samples, 0.34%)</title><rect x="874.6" y="611.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (82 samples, 0.34%)</title><rect x="874.6" y="595.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 0.34%)</title><rect x="874.6" y="579.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 0.34%)</title><rect x="874.6" y="563.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (82 samples, 0.34%)</title><rect x="874.6" y="547.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (82 samples, 0.34%)</title><rect x="874.6" y="531.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (82 samples, 0.34%)</title><rect x="874.6" y="515.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (82 samples, 0.34%)</title><rect x="874.6" y="499.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.08%)</title><rect x="874.6" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.08%)</title><rect x="874.6" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (19 samples, 0.08%)</title><rect x="874.6" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (6 samples, 0.03%)</title><rect x="874.6" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (6 samples, 0.03%)</title><rect x="874.6" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (6 samples, 0.03%)</title><rect x="874.6" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (6 samples, 0.03%)</title><rect x="874.6" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (6 samples, 0.03%)</title><rect x="874.6" y="371.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="877.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.05%)</title><rect x="874.9" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.05%)</title><rect x="874.9" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.05%)</title><rect x="874.9" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.05%)</title><rect x="874.9" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (13 samples, 0.05%)</title><rect x="874.9" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 0.05%)</title><rect x="874.9" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (13 samples, 0.05%)</title><rect x="874.9" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (13 samples, 0.05%)</title><rect x="874.9" y="323.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="877.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (57 samples, 0.24%)</title><rect x="875.9" y="483.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (25 samples, 0.10%)</title><rect x="875.9" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.06%)</title><rect x="875.9" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.9" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.06%)</title><rect x="875.9" y="435.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="878.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (10 samples, 0.04%)</title><rect x="876.6" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.6" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (10 samples, 0.04%)</title><rect x="876.6" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.6" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (10 samples, 0.04%)</title><rect x="876.6" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="879.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (32 samples, 0.13%)</title><rect x="877.1" y="467.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$199/66698263.get (32 samples, 0.13%)</title><rect x="877.1" y="451.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (32 samples, 0.13%)</title><rect x="877.1" y="435.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.13%)</title><rect x="877.1" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (32 samples, 0.13%)</title><rect x="877.1" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.1" y="414.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="877.2" y="387.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$300/869685903.accept (12 samples, 0.05%)</title><rect x="878.7" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.05%)</title><rect x="878.7" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.run (12 samples, 0.05%)</title><rect x="878.7" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.05%)</title><rect x="878.7" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.05%)</title><rect x="878.7" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.05%)</title><rect x="878.7" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.05%)</title><rect x="878.7" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.7" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12 samples, 0.05%)</title><rect x="878.7" y="563.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="881.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (69 samples, 0.29%)</title><rect x="879.3" y="691.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.3" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (69 samples, 0.29%)</title><rect x="879.3" y="675.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="882.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (29 samples, 0.12%)</title><rect x="882.7" y="691.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.09%)</title><rect x="882.7" y="675.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (21 samples, 0.09%)</title><rect x="882.7" y="659.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (21 samples, 0.09%)</title><rect x="882.7" y="643.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (21 samples, 0.09%)</title><rect x="882.7" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (21 samples, 0.09%)</title><rect x="882.7" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (21 samples, 0.09%)</title><rect x="882.7" y="595.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.7" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (21 samples, 0.09%)</title><rect x="882.7" y="579.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="885.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (8 samples, 0.03%)</title><rect x="883.7" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.7" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (8 samples, 0.03%)</title><rect x="883.7" y="659.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="886.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (50 samples, 0.21%)</title><rect x="884.1" y="691.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$207/2005313997.run (22 samples, 0.09%)</title><rect x="884.1" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (22 samples, 0.09%)</title><rect x="884.1" y="659.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.09%)</title><rect x="884.1" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.09%)</title><rect x="884.1" y="627.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.09%)</title><rect x="884.1" y="611.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (22 samples, 0.09%)</title><rect x="884.1" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (22 samples, 0.09%)</title><rect x="884.1" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (22 samples, 0.09%)</title><rect x="884.1" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (22 samples, 0.09%)</title><rect x="884.1" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (22 samples, 0.09%)</title><rect x="884.1" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (17 samples, 0.07%)</title><rect x="884.1" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (17 samples, 0.07%)</title><rect x="884.1" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (17 samples, 0.07%)</title><rect x="884.1" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (7 samples, 0.03%)</title><rect x="884.1" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (7 samples, 0.03%)</title><rect x="884.1" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="884.1" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.03%)</title><rect x="884.1" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.03%)</title><rect x="884.1" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.1" y="414.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="884.1" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="887.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.04%)</title><rect x="884.5" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="884.5" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="884.5" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (10 samples, 0.04%)</title><rect x="884.5" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (10 samples, 0.04%)</title><rect x="884.5" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="887.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1166291669.run (28 samples, 0.12%)</title><rect x="885.2" y="675.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (28 samples, 0.12%)</title><rect x="885.2" y="659.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="885.2" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="885.2" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.get$Lambda (7 samples, 0.03%)</title><rect x="885.2" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$303 (7 samples, 0.03%)</title><rect x="885.2" y="595.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="888.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.09%)</title><rect x="885.6" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.09%)</title><rect x="885.6" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (21 samples, 0.09%)</title><rect x="885.6" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (21 samples, 0.09%)</title><rect x="885.6" y="595.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (21 samples, 0.09%)</title><rect x="885.6" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (21 samples, 0.09%)</title><rect x="885.6" y="563.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="888.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (85 samples, 0.36%)</title><rect x="886.6" y="691.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.6" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.now (18 samples, 0.08%)</title><rect x="886.6" y="675.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.6" y="686.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (18 samples, 0.08%)</title><rect x="886.6" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.6" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (18 samples, 0.08%)</title><rect x="886.6" y="643.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.create (18 samples, 0.08%)</title><rect x="886.6" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.6" y="638.0"></text>
</g>
<g>
<title>java.time.Instant (18 samples, 0.08%)</title><rect x="886.6" y="611.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="889.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (67 samples, 0.28%)</title><rect x="887.5" y="675.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="887.5" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="887.5" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$347/1906610528.get$Lambda (14 samples, 0.06%)</title><rect x="887.5" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$347 (14 samples, 0.06%)</title><rect x="887.5" y="611.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="890.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (53 samples, 0.22%)</title><rect x="888.2" y="659.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.2" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (25 samples, 0.10%)</title><rect x="888.2" y="643.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="891.2" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (28 samples, 0.12%)</title><rect x="889.4" y="643.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.4" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (28 samples, 0.12%)</title><rect x="889.4" y="627.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.4" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (28 samples, 0.12%)</title><rect x="889.4" y="611.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="892.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (64 samples, 0.27%)</title><rect x="890.8" y="691.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.8" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 0.16%)</title><rect x="891.1" y="675.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (13 samples, 0.05%)</title><rect x="891.1" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.1" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (13 samples, 0.05%)</title><rect x="891.1" y="643.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="894.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (24 samples, 0.10%)</title><rect x="891.7" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (24 samples, 0.10%)</title><rect x="891.7" y="643.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="894.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (22 samples, 0.09%)</title><rect x="892.9" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.9" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (22 samples, 0.09%)</title><rect x="892.9" y="659.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="895.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (11 samples, 0.05%)</title><rect x="894.0" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.05%)</title><rect x="894.0" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.05%)</title><rect x="894.0" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11 samples, 0.05%)</title><rect x="894.0" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.03%)</title><rect x="894.1" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.03%)</title><rect x="894.1" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.03%)</title><rect x="894.1" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.03%)</title><rect x="894.1" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.03%)</title><rect x="894.1" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.1" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (8 samples, 0.03%)</title><rect x="894.1" y="547.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="897.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (13 samples, 0.05%)</title><rect x="894.6" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (13 samples, 0.05%)</title><rect x="894.6" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.05%)</title><rect x="894.6" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.6" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (13 samples, 0.05%)</title><rect x="894.6" y="643.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="897.6" y="654.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (119 samples, 0.50%)</title><rect x="895.3" y="707.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.createSession (119 samples, 0.50%)</title><rect x="895.3" y="691.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.createSession (119 samples, 0.50%)</title><rect x="895.3" y="675.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/session/StorageSession.&lt;init&gt; (118 samples, 0.50%)</title><rect x="895.3" y="659.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (118 samples, 0.50%)</title><rect x="895.3" y="643.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.3" y="654.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="895.3" y="627.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="898.3" y="638.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.45%)</title><rect x="895.8" y="627.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.8" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,829 samples, 24.48%)</title><rect x="901.2" y="707.0" width="288.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="718.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (257 samples, 1.08%)</title><rect x="901.2" y="691.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.2" y="702.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (257 samples, 1.08%)</title><rect x="901.2" y="675.0" width="12.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="904.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.handleException (10 samples, 0.04%)</title><rect x="913.9" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.getRemoteHost (6 samples, 0.03%)</title><rect x="914.1" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.getRemoteAddress (6 samples, 0.03%)</title><rect x="914.1" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,562 samples, 23.36%)</title><rect x="914.4" y="691.0" width="275.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.4" y="702.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,562 samples, 23.36%)</title><rect x="914.4" y="675.0" width="275.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.4" y="686.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,560 samples, 23.35%)</title><rect x="914.4" y="659.0" width="275.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.4" y="670.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,621 samples, 6.81%)</title><rect x="914.4" y="643.0" width="80.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.4" y="654.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,621 samples, 6.81%)</title><rect x="914.4" y="627.0" width="80.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.4" y="638.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1,367 samples, 5.74%)</title><rect x="914.4" y="611.0" width="67.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.4" y="622.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (339 samples, 1.42%)</title><rect x="914.4" y="595.0" width="16.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (339 samples, 1.42%)</title><rect x="914.4" y="579.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (339 samples, 1.42%)</title><rect x="914.4" y="563.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (177 samples, 0.74%)</title><rect x="914.4" y="547.0" width="8.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="917.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (162 samples, 0.68%)</title><rect x="923.2" y="547.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.2" y="558.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.68%)</title><rect x="923.2" y="531.0" width="8.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="926.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.entity (1,028 samples, 4.32%)</title><rect x="931.2" y="595.0" width="50.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.2" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1188682934.linkToTargetMethod (137 samples, 0.58%)</title><rect x="931.2" y="579.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="934.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2036113847.invokeStatic (137 samples, 0.58%)</title><rect x="931.2" y="563.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$349/1174152785.get$Lambda (137 samples, 0.58%)</title><rect x="931.2" y="547.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.2" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$349 (137 samples, 0.58%)</title><rect x="931.2" y="531.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="934.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (76 samples, 0.32%)</title><rect x="938.0" y="579.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (76 samples, 0.32%)</title><rect x="938.0" y="563.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.32%)</title><rect x="938.0" y="547.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.18%)</title><rect x="938.0" y="531.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="941.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.13%)</title><rect x="940.2" y="531.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.2" y="542.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.13%)</title><rect x="940.2" y="515.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="943.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$RF.of (558 samples, 2.34%)</title><rect x="941.8" y="579.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.8" y="590.0">r..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (88 samples, 0.37%)</title><rect x="941.8" y="563.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (45 samples, 0.19%)</title><rect x="941.8" y="547.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.8" y="558.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (45 samples, 0.19%)</title><rect x="941.8" y="531.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="944.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (43 samples, 0.18%)</title><rect x="944.0" y="547.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.0" y="558.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (43 samples, 0.18%)</title><rect x="944.0" y="531.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="947.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (421 samples, 1.77%)</title><rect x="946.1" y="563.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (179 samples, 0.75%)</title><rect x="946.1" y="547.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (179 samples, 0.75%)</title><rect x="946.1" y="531.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (179 samples, 0.75%)</title><rect x="946.1" y="515.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (179 samples, 0.75%)</title><rect x="946.1" y="499.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (179 samples, 0.75%)</title><rect x="946.1" y="483.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (179 samples, 0.75%)</title><rect x="946.1" y="467.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (179 samples, 0.75%)</title><rect x="946.1" y="451.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.33%)</title><rect x="946.1" y="435.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="949.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (101 samples, 0.42%)</title><rect x="950.0" y="435.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.0" y="446.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.42%)</title><rect x="950.0" y="419.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="953.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (55 samples, 0.23%)</title><rect x="955.0" y="547.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (55 samples, 0.23%)</title><rect x="955.0" y="531.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (55 samples, 0.23%)</title><rect x="955.0" y="515.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.0" y="526.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (55 samples, 0.23%)</title><rect x="955.0" y="499.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="958.0" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (56 samples, 0.24%)</title><rect x="957.7" y="547.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="960.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (131 samples, 0.55%)</title><rect x="960.5" y="547.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (131 samples, 0.55%)</title><rect x="960.5" y="531.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (131 samples, 0.55%)</title><rect x="960.5" y="515.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (131 samples, 0.55%)</title><rect x="960.5" y="499.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (131 samples, 0.55%)</title><rect x="960.5" y="483.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (131 samples, 0.55%)</title><rect x="960.5" y="467.0" width="6.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="963.5" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$RF (49 samples, 0.21%)</title><rect x="967.0" y="563.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="970.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.asyncExecute (257 samples, 1.08%)</title><rect x="969.4" y="579.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.44%)</title><rect x="969.4" y="563.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.44%)</title><rect x="969.4" y="547.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.get$Lambda (105 samples, 0.44%)</title><rect x="969.4" y="531.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.4" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$120 (105 samples, 0.44%)</title><rect x="969.4" y="515.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="972.4" y="526.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (152 samples, 0.64%)</title><rect x="974.6" y="563.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (152 samples, 0.64%)</title><rect x="974.6" y="547.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (51 samples, 0.21%)</title><rect x="974.6" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (51 samples, 0.21%)</title><rect x="974.6" y="515.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.05%)</title><rect x="975.0" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.0" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.05%)</title><rect x="975.0" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.0" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (11 samples, 0.05%)</title><rect x="975.0" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.05%)</title><rect x="975.0" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.0" y="462.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="975.0" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="978.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (19 samples, 0.08%)</title><rect x="975.7" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.7" y="510.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (19 samples, 0.08%)</title><rect x="975.7" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (19 samples, 0.08%)</title><rect x="975.7" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="978.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (19 samples, 0.08%)</title><rect x="975.7" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (19 samples, 0.08%)</title><rect x="975.7" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (19 samples, 0.08%)</title><rect x="975.7" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (11 samples, 0.05%)</title><rect x="976.6" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.6" y="510.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (101 samples, 0.42%)</title><rect x="977.1" y="531.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.1" y="542.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (101 samples, 0.42%)</title><rect x="977.1" y="515.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (101 samples, 0.42%)</title><rect x="977.1" y="499.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (101 samples, 0.42%)</title><rect x="977.1" y="483.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (101 samples, 0.42%)</title><rect x="977.1" y="467.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (101 samples, 0.42%)</title><rect x="977.1" y="451.0" width="5.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="980.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (254 samples, 1.07%)</title><rect x="982.1" y="611.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (254 samples, 1.07%)</title><rect x="982.1" y="595.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (254 samples, 1.07%)</title><rect x="982.1" y="579.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.39%)</title><rect x="982.1" y="563.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="985.1" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (162 samples, 0.68%)</title><rect x="986.7" y="563.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.7" y="574.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.68%)</title><rect x="986.7" y="547.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="989.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,138 samples, 4.78%)</title><rect x="994.7" y="643.0" width="56.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.7" y="654.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (154 samples, 0.65%)</title><rect x="994.7" y="627.0" width="7.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="997.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (361 samples, 1.52%)</title><rect x="1002.4" y="627.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (361 samples, 1.52%)</title><rect x="1002.4" y="611.0" width="17.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1005.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (623 samples, 2.62%)</title><rect x="1020.2" y="627.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1023.2" y="638.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (623 samples, 2.62%)</title><rect x="1020.2" y="611.0" width="30.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.2" y="622.0">on..</text>
</g>
<g>
<title>char[] (348 samples, 1.46%)</title><rect x="1020.2" y="595.0" width="17.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1023.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.32%)</title><rect x="1037.5" y="595.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1040.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (198 samples, 0.83%)</title><rect x="1041.3" y="595.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (198 samples, 0.83%)</title><rect x="1041.3" y="579.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (198 samples, 0.83%)</title><rect x="1041.3" y="563.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.3" y="574.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.83%)</title><rect x="1041.3" y="547.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1044.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (38 samples, 0.16%)</title><rect x="1051.1" y="643.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.1" y="654.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.16%)</title><rect x="1051.1" y="627.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1054.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (113 samples, 0.47%)</title><rect x="1053.0" y="643.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (113 samples, 0.47%)</title><rect x="1053.0" y="627.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (113 samples, 0.47%)</title><rect x="1053.0" y="611.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.20%)</title><rect x="1053.0" y="595.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1056.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.27%)</title><rect x="1055.4" y="595.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.4" y="606.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.27%)</title><rect x="1055.4" y="579.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1058.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,650 samples, 11.13%)</title><rect x="1058.6" y="643.0" width="131.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.6" y="654.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,650 samples, 11.13%)</title><rect x="1058.6" y="627.0" width="131.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.6" y="638.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (1,354 samples, 5.69%)</title><rect x="1058.6" y="611.0" width="67.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1061.6" y="622.0">char[]</text>
</g>
<g>
<title>java.lang.String (398 samples, 1.67%)</title><rect x="1125.7" y="611.0" width="19.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1128.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (898 samples, 3.77%)</title><rect x="1145.4" y="611.0" width="44.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.4" y="622.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (898 samples, 3.77%)</title><rect x="1145.4" y="595.0" width="44.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.4" y="606.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (898 samples, 3.77%)</title><rect x="1145.4" y="579.0" width="44.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.4" y="590.0">java..</text>
</g>
<g>
<title>byte[] (898 samples, 3.77%)</title><rect x="1145.4" y="563.0" width="44.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1148.4" y="574.0">byte[]</text>
</g>
</g>
</svg>
