<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (24,313 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (16,747 samples, 68.88%)</title><rect x="10.0" y="803.0" width="812.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16,747 samples, 68.88%)</title><rect x="10.0" y="787.0" width="812.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16,747 samples, 68.88%)</title><rect x="10.0" y="771.0" width="812.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (867 samples, 3.57%)</title><rect x="10.0" y="755.0" width="42.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="766.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$167/1215328857.run (867 samples, 3.57%)</title><rect x="10.0" y="739.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="750.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$upsert$2 (867 samples, 3.57%)</title><rect x="10.0" y="723.0" width="42.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="734.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (867 samples, 3.57%)</title><rect x="10.0" y="707.0" width="42.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="718.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (867 samples, 3.57%)</title><rect x="10.0" y="691.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="702.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (13 samples, 0.05%)</title><rect x="10.0" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (13 samples, 0.05%)</title><rect x="10.0" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (13 samples, 0.05%)</title><rect x="10.0" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.05%)</title><rect x="10.0" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (13 samples, 0.05%)</title><rect x="10.0" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (8 samples, 0.03%)</title><rect x="10.3" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (8 samples, 0.03%)</title><rect x="10.3" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (8 samples, 0.03%)</title><rect x="10.3" y="563.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (854 samples, 3.51%)</title><rect x="10.7" y="675.0" width="41.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.7" y="686.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.of (854 samples, 3.51%)</title><rect x="10.7" y="659.0" width="41.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.7" y="670.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (496 samples, 2.04%)</title><rect x="10.7" y="643.0" width="24.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.7" y="654.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (496 samples, 2.04%)</title><rect x="10.7" y="627.0" width="24.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.7" y="638.0">j..</text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (358 samples, 1.47%)</title><rect x="34.8" y="643.0" width="17.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="37.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,511 samples, 22.67%)</title><rect x="52.1" y="755.0" width="267.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.1" y="766.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,511 samples, 22.67%)</title><rect x="52.1" y="739.0" width="267.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.1" y="750.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5,511 samples, 22.67%)</title><rect x="52.1" y="723.0" width="267.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.1" y="734.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (16 samples, 0.07%)</title><rect x="52.1" y="707.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="55.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/9819169.apply (5,493 samples, 22.59%)</title><rect x="52.9" y="707.0" width="266.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.9" y="718.0">jdk/internal/net/http/MultiExchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (5,493 samples, 22.59%)</title><rect x="52.9" y="691.0" width="266.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.9" y="702.0">jdk/internal/net/http/MultiExchange...</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (5,493 samples, 22.59%)</title><rect x="52.9" y="675.0" width="266.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.9" y="686.0">jdk/internal/net/http/MultiExchange...</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.18%)</title><rect x="52.9" y="659.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.18%)</title><rect x="52.9" y="643.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.get$Lambda (33 samples, 0.14%)</title><rect x="52.9" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$294 (33 samples, 0.14%)</title><rect x="52.9" y="611.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="55.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$296/730056817.get$Lambda (10 samples, 0.04%)</title><rect x="54.5" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$296 (10 samples, 0.04%)</title><rect x="54.5" y="611.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="57.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (36 samples, 0.15%)</title><rect x="55.0" y="659.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (36 samples, 0.15%)</title><rect x="55.0" y="643.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (23 samples, 0.09%)</title><rect x="55.0" y="627.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="58.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="56.1" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="56.1" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="56.1" y="595.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="59.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (91 samples, 0.37%)</title><rect x="56.7" y="659.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (91 samples, 0.37%)</title><rect x="56.7" y="643.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (47 samples, 0.19%)</title><rect x="56.7" y="627.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="59.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.18%)</title><rect x="59.0" y="627.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.18%)</title><rect x="59.0" y="611.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.18%)</title><rect x="59.0" y="595.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (5,323 samples, 21.89%)</title><rect x="61.2" y="659.0" width="258.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.2" y="670.0">jdk/internal/net/http/Exchange.res..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (5,323 samples, 21.89%)</title><rect x="61.2" y="643.0" width="258.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.2" y="654.0">jdk/internal/net/http/Exchange.res..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (5,323 samples, 21.89%)</title><rect x="61.2" y="627.0" width="258.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.2" y="638.0">jdk/internal/net/http/Exchange.res..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.49%)</title><rect x="61.2" y="611.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.49%)</title><rect x="61.2" y="595.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.get$Lambda (85 samples, 0.35%)</title><rect x="61.2" y="579.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$172 (85 samples, 0.35%)</title><rect x="61.2" y="563.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="64.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.get$Lambda (17 samples, 0.07%)</title><rect x="65.3" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$173 (17 samples, 0.07%)</title><rect x="65.3" y="563.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="68.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.get$Lambda (17 samples, 0.07%)</title><rect x="66.1" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$248 (17 samples, 0.07%)</title><rect x="66.1" y="563.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="69.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,309 samples, 13.61%)</title><rect x="66.9" y="611.0" width="160.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="622.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,309 samples, 13.61%)</title><rect x="66.9" y="595.0" width="160.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.9" y="606.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,287 samples, 13.52%)</title><rect x="66.9" y="579.0" width="159.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.9" y="590.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.apply (3,287 samples, 13.52%)</title><rect x="66.9" y="563.0" width="159.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.9" y="574.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,287 samples, 13.52%)</title><rect x="66.9" y="547.0" width="159.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.9" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,287 samples, 13.52%)</title><rect x="66.9" y="531.0" width="159.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.9" y="542.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.apply (3,287 samples, 13.52%)</title><rect x="66.9" y="515.0" width="159.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.9" y="526.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,287 samples, 13.52%)</title><rect x="66.9" y="499.0" width="159.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.9" y="510.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.10%)</title><rect x="66.9" y="483.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.10%)</title><rect x="66.9" y="467.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.get$Lambda (25 samples, 0.10%)</title><rect x="66.9" y="451.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$286 (25 samples, 0.10%)</title><rect x="66.9" y="435.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (105 samples, 0.43%)</title><rect x="68.1" y="483.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (105 samples, 0.43%)</title><rect x="68.1" y="467.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (31 samples, 0.13%)</title><rect x="68.1" y="451.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="71.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (36 samples, 0.15%)</title><rect x="69.6" y="451.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.apply (36 samples, 0.15%)</title><rect x="69.6" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (36 samples, 0.15%)</title><rect x="69.6" y="419.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (36 samples, 0.15%)</title><rect x="69.6" y="403.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.apply (36 samples, 0.15%)</title><rect x="69.6" y="387.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (36 samples, 0.15%)</title><rect x="69.6" y="371.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (29 samples, 0.12%)</title><rect x="70.0" y="355.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (12 samples, 0.05%)</title><rect x="70.0" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (12 samples, 0.05%)</title><rect x="70.0" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (12 samples, 0.05%)</title><rect x="70.0" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (17 samples, 0.07%)</title><rect x="70.6" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (15 samples, 0.06%)</title><rect x="70.7" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (6 samples, 0.02%)</title><rect x="70.7" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (9 samples, 0.04%)</title><rect x="71.0" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.03%)</title><rect x="71.0" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="71.0" y="275.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="74.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.16%)</title><rect x="71.4" y="451.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.16%)</title><rect x="71.4" y="435.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.16%)</title><rect x="71.4" y="419.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (57 samples, 0.23%)</title><rect x="73.2" y="483.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (57 samples, 0.23%)</title><rect x="73.2" y="467.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (27 samples, 0.11%)</title><rect x="73.2" y="451.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="76.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="74.6" y="451.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="74.6" y="435.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.12%)</title><rect x="74.6" y="419.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3,100 samples, 12.75%)</title><rect x="76.0" y="483.0" width="150.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.0" y="494.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="76.0" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="76.0" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.get$Lambda (9 samples, 0.04%)</title><rect x="76.0" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$280 (9 samples, 0.04%)</title><rect x="76.0" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="79.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/1958570298.get$Lambda (14 samples, 0.06%)</title><rect x="76.4" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$283 (14 samples, 0.06%)</title><rect x="76.4" y="419.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="79.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,658 samples, 10.93%)</title><rect x="77.1" y="467.0" width="129.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.1" y="478.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,658 samples, 10.93%)</title><rect x="77.1" y="451.0" width="129.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.1" y="462.0">java/util/concur..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (36 samples, 0.15%)</title><rect x="77.1" y="435.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="80.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.apply (2,567 samples, 10.56%)</title><rect x="78.9" y="435.0" width="124.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.9" y="446.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,567 samples, 10.56%)</title><rect x="78.9" y="419.0" width="124.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.9" y="430.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="78.9" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="78.9" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$297/37694024.get$Lambda (9 samples, 0.04%)</title><rect x="78.9" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$297 (9 samples, 0.04%)</title><rect x="78.9" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="81.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (53 samples, 0.22%)</title><rect x="79.3" y="403.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (53 samples, 0.22%)</title><rect x="79.3" y="387.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.12%)</title><rect x="79.3" y="371.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="82.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.10%)</title><rect x="80.7" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.10%)</title><rect x="80.7" y="355.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.10%)</title><rect x="80.7" y="339.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="83.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.11%)</title><rect x="81.9" y="403.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (39 samples, 0.16%)</title><rect x="83.1" y="403.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (13 samples, 0.05%)</title><rect x="83.1" y="387.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="86.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (26 samples, 0.11%)</title><rect x="83.8" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (22 samples, 0.09%)</title><rect x="83.8" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (22 samples, 0.09%)</title><rect x="83.8" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (22 samples, 0.09%)</title><rect x="83.8" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (22 samples, 0.09%)</title><rect x="83.8" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (22 samples, 0.09%)</title><rect x="83.8" y="307.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="86.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (55 samples, 0.23%)</title><rect x="85.0" y="403.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (55 samples, 0.23%)</title><rect x="85.0" y="387.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (16 samples, 0.07%)</title><rect x="85.0" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (16 samples, 0.07%)</title><rect x="85.0" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (16 samples, 0.07%)</title><rect x="85.0" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (16 samples, 0.07%)</title><rect x="85.0" y="323.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="88.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (39 samples, 0.16%)</title><rect x="85.8" y="371.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (39 samples, 0.16%)</title><rect x="85.8" y="355.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (23 samples, 0.09%)</title><rect x="85.8" y="339.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="88.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (16 samples, 0.07%)</title><rect x="86.9" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (16 samples, 0.07%)</title><rect x="86.9" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,385 samples, 9.81%)</title><rect x="87.7" y="403.0" width="115.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.7" y="414.0">jdk/internal/n..</text>
</g>
<g>
<title>java.lang.StringBuilder (22 samples, 0.09%)</title><rect x="87.7" y="387.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (33 samples, 0.14%)</title><rect x="88.8" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.8" y="398.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.07%)</title><rect x="88.8" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="89.6" y="371.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (180 samples, 0.74%)</title><rect x="90.4" y="387.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (180 samples, 0.74%)</title><rect x="90.4" y="371.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (180 samples, 0.74%)</title><rect x="90.4" y="355.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.4" y="366.0"></text>
</g>
<g>
<title>byte[] (180 samples, 0.74%)</title><rect x="90.4" y="339.0" width="8.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="93.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (64 samples, 0.26%)</title><rect x="99.1" y="387.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (64 samples, 0.26%)</title><rect x="99.1" y="371.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.1" y="382.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.26%)</title><rect x="99.1" y="355.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="102.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (260 samples, 1.07%)</title><rect x="102.2" y="387.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (260 samples, 1.07%)</title><rect x="102.2" y="371.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.11%)</title><rect x="102.2" y="355.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="105.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (234 samples, 0.96%)</title><rect x="103.5" y="355.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.5" y="366.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.96%)</title><rect x="103.5" y="339.0" width="11.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="106.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.14%)</title><rect x="114.8" y="387.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.14%)</title><rect x="114.8" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.14%)</title><rect x="114.8" y="355.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="117.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.07%)</title><rect x="116.5" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.5" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.07%)</title><rect x="116.5" y="371.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="119.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,513 samples, 6.22%)</title><rect x="117.4" y="387.0" width="73.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.4" y="398.0">jdk/inte..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (15 samples, 0.06%)</title><rect x="117.4" y="371.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.06%)</title><rect x="117.4" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.06%)</title><rect x="117.4" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.4" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.get$Lambda (15 samples, 0.06%)</title><rect x="117.4" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.4" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$302 (15 samples, 0.06%)</title><rect x="117.4" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="120.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (728 samples, 2.99%)</title><rect x="118.1" y="371.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.1" y="382.0">jdk..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (357 samples, 1.47%)</title><rect x="118.1" y="355.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.1" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (357 samples, 1.47%)</title><rect x="118.1" y="339.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.1" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (357 samples, 1.47%)</title><rect x="118.1" y="323.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (357 samples, 1.47%)</title><rect x="118.1" y="307.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.1" y="318.0"></text>
</g>
<g>
<title>byte[] (355 samples, 1.46%)</title><rect x="118.1" y="291.0" width="17.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="121.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (65 samples, 0.27%)</title><rect x="135.4" y="355.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (65 samples, 0.27%)</title><rect x="135.4" y="339.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (65 samples, 0.27%)</title><rect x="135.4" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (65 samples, 0.27%)</title><rect x="135.4" y="307.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="138.4" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (54 samples, 0.22%)</title><rect x="138.6" y="355.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (23 samples, 0.09%)</title><rect x="138.6" y="339.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="141.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (31 samples, 0.13%)</title><rect x="139.7" y="339.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (31 samples, 0.13%)</title><rect x="139.7" y="323.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.test (252 samples, 1.04%)</title><rect x="141.2" y="355.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.2" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (252 samples, 1.04%)</title><rect x="141.2" y="339.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1995619265.test (252 samples, 1.04%)</title><rect x="141.2" y="323.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (252 samples, 1.04%)</title><rect x="141.2" y="307.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/20094719.test (252 samples, 1.04%)</title><rect x="141.2" y="291.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (252 samples, 1.04%)</title><rect x="141.2" y="275.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/324457684.test (252 samples, 1.04%)</title><rect x="141.2" y="259.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (252 samples, 1.04%)</title><rect x="141.2" y="243.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (252 samples, 1.04%)</title><rect x="141.2" y="227.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (252 samples, 1.04%)</title><rect x="141.2" y="211.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (141 samples, 0.58%)</title><rect x="141.2" y="195.0" width="6.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="144.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (111 samples, 0.46%)</title><rect x="148.0" y="195.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.0" y="206.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.46%)</title><rect x="148.0" y="179.0" width="5.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="151.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (770 samples, 3.17%)</title><rect x="153.4" y="371.0" width="37.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.4" y="382.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (770 samples, 3.17%)</title><rect x="153.4" y="355.0" width="37.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.4" y="366.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (770 samples, 3.17%)</title><rect x="153.4" y="339.0" width="37.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.4" y="350.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (11 samples, 0.05%)</title><rect x="153.4" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="156.4" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.12%)</title><rect x="154.0" y="323.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="157.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (38 samples, 0.16%)</title><rect x="155.3" y="323.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="158.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (16 samples, 0.07%)</title><rect x="157.2" y="323.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="160.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="157.9" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="157.9" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (31 samples, 0.13%)</title><rect x="157.9" y="291.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.9" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (31 samples, 0.13%)</title><rect x="157.9" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="160.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (24 samples, 0.10%)</title><rect x="159.4" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.4" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (24 samples, 0.10%)</title><rect x="159.4" y="307.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="162.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (582 samples, 2.39%)</title><rect x="160.6" y="323.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.6" y="334.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (582 samples, 2.39%)</title><rect x="160.6" y="307.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.6" y="318.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (582 samples, 2.39%)</title><rect x="160.6" y="291.0" width="28.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.6" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.47%)</title><rect x="160.6" y="275.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.47%)</title><rect x="160.6" y="259.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (115 samples, 0.47%)</title><rect x="160.6" y="243.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.6" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (115 samples, 0.47%)</title><rect x="160.6" y="227.0" width="5.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="163.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (47 samples, 0.19%)</title><rect x="166.2" y="275.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (47 samples, 0.19%)</title><rect x="166.2" y="259.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (47 samples, 0.19%)</title><rect x="166.2" y="243.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.19%)</title><rect x="166.2" y="227.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.19%)</title><rect x="166.2" y="211.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.19%)</title><rect x="166.2" y="195.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.19%)</title><rect x="166.2" y="179.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.19%)</title><rect x="166.2" y="163.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.19%)</title><rect x="166.2" y="147.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="169.2" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (259 samples, 1.07%)</title><rect x="168.5" y="275.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (259 samples, 1.07%)</title><rect x="168.5" y="259.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (134 samples, 0.55%)</title><rect x="168.5" y="243.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.55%)</title><rect x="168.5" y="227.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.55%)</title><rect x="168.5" y="211.0" width="6.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="171.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (125 samples, 0.51%)</title><rect x="175.0" y="243.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.0" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (125 samples, 0.51%)</title><rect x="175.0" y="227.0" width="6.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="178.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (161 samples, 0.66%)</title><rect x="181.0" y="275.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.0" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (161 samples, 0.66%)</title><rect x="181.0" y="259.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="184.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (40 samples, 0.16%)</title><rect x="188.8" y="323.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.16%)</title><rect x="188.8" y="307.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="191.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (88 samples, 0.36%)</title><rect x="190.8" y="387.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (26 samples, 0.11%)</title><rect x="190.8" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.8" y="382.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="190.8" y="355.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="193.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.26%)</title><rect x="192.0" y="371.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (62 samples, 0.26%)</title><rect x="192.0" y="355.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (62 samples, 0.26%)</title><rect x="192.0" y="339.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.26%)</title><rect x="192.0" y="323.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.09%)</title><rect x="192.0" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.09%)</title><rect x="192.0" y="291.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="195.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (39 samples, 0.16%)</title><rect x="193.2" y="307.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (39 samples, 0.16%)</title><rect x="193.2" y="291.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.2" y="302.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.16%)</title><rect x="193.2" y="275.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="196.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (35 samples, 0.14%)</title><rect x="195.1" y="387.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (35 samples, 0.14%)</title><rect x="195.1" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.14%)</title><rect x="195.1" y="355.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (35 samples, 0.14%)</title><rect x="195.1" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (35 samples, 0.14%)</title><rect x="195.1" y="323.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.14%)</title><rect x="195.1" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (35 samples, 0.14%)</title><rect x="195.1" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (35 samples, 0.14%)</title><rect x="195.1" y="275.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.1" y="286.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.14%)</title><rect x="195.1" y="259.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="198.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (138 samples, 0.57%)</title><rect x="196.8" y="387.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.8" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.14%)</title><rect x="196.8" y="371.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="199.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (47 samples, 0.19%)</title><rect x="198.4" y="371.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.19%)</title><rect x="198.4" y="355.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="201.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (58 samples, 0.24%)</title><rect x="200.6" y="371.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (58 samples, 0.24%)</title><rect x="200.6" y="355.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="203.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.23%)</title><rect x="203.5" y="435.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.23%)</title><rect x="203.5" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.23%)</title><rect x="203.5" y="403.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="206.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (94 samples, 0.39%)</title><rect x="206.1" y="467.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="209.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="210.7" y="467.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="213.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (304 samples, 1.25%)</title><rect x="211.7" y="467.0" width="14.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.11%)</title><rect x="211.7" y="451.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.11%)</title><rect x="211.7" y="435.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1865137363.get$Lambda (16 samples, 0.07%)</title><rect x="211.7" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (16 samples, 0.07%)</title><rect x="211.7" y="403.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="214.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$256/725033970.get$Lambda (10 samples, 0.04%)</title><rect x="212.5" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$256 (10 samples, 0.04%)</title><rect x="212.5" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="215.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (28 samples, 0.12%)</title><rect x="213.0" y="451.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="216.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (20 samples, 0.08%)</title><rect x="214.3" y="451.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="217.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (30 samples, 0.12%)</title><rect x="215.3" y="451.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="218.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (99 samples, 0.41%)</title><rect x="216.8" y="451.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 0.41%)</title><rect x="216.8" y="435.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 0.41%)</title><rect x="216.8" y="419.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (99 samples, 0.41%)</title><rect x="216.8" y="403.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (99 samples, 0.41%)</title><rect x="216.8" y="387.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (99 samples, 0.41%)</title><rect x="216.8" y="371.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (99 samples, 0.41%)</title><rect x="216.8" y="355.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (99 samples, 0.41%)</title><rect x="216.8" y="339.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (99 samples, 0.41%)</title><rect x="216.8" y="323.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.16%)</title><rect x="216.8" y="307.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.16%)</title><rect x="216.8" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (18 samples, 0.07%)</title><rect x="216.8" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$264 (18 samples, 0.07%)</title><rect x="216.8" y="259.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="219.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$267/401982671.get$Lambda (22 samples, 0.09%)</title><rect x="217.6" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$267 (22 samples, 0.09%)</title><rect x="217.6" y="259.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="220.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (26 samples, 0.11%)</title><rect x="218.7" y="307.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (33 samples, 0.14%)</title><rect x="220.0" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (33 samples, 0.14%)</title><rect x="220.0" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (15 samples, 0.06%)</title><rect x="220.0" y="275.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="223.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (18 samples, 0.07%)</title><rect x="220.7" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (18 samples, 0.07%)</title><rect x="220.7" y="259.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="223.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (80 samples, 0.33%)</title><rect x="221.6" y="451.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.6" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (18 samples, 0.07%)</title><rect x="221.6" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="224.6" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (44 samples, 0.18%)</title><rect x="222.4" y="435.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="225.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (18 samples, 0.07%)</title><rect x="224.6" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (18 samples, 0.07%)</title><rect x="224.6" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="430.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="224.6" y="403.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="227.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (21 samples, 0.09%)</title><rect x="225.4" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="225.4" y="435.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="228.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="226.5" y="579.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="226.5" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="226.5" y="547.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="229.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 0.18%)</title><rect x="227.5" y="611.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (43 samples, 0.18%)</title><rect x="227.5" y="595.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (20 samples, 0.08%)</title><rect x="227.5" y="579.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="230.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.09%)</title><rect x="228.5" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.09%)</title><rect x="228.5" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="228.5" y="547.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="231.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,852 samples, 7.62%)</title><rect x="229.6" y="611.0" width="89.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.6" y="622.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.16%)</title><rect x="229.6" y="595.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.16%)</title><rect x="229.6" y="579.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$242/1842297967.get$Lambda (28 samples, 0.12%)</title><rect x="229.6" y="563.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$242 (28 samples, 0.12%)</title><rect x="229.6" y="547.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="232.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/687077497.get$Lambda (11 samples, 0.05%)</title><rect x="231.0" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$245 (11 samples, 0.05%)</title><rect x="231.0" y="547.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="234.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (40 samples, 0.16%)</title><rect x="231.5" y="595.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (40 samples, 0.16%)</title><rect x="231.5" y="579.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/687077497.apply (18 samples, 0.07%)</title><rect x="231.5" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (18 samples, 0.07%)</title><rect x="231.5" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (18 samples, 0.07%)</title><rect x="231.5" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.07%)</title><rect x="231.5" y="515.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="234.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="232.4" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="232.4" y="547.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="232.4" y="531.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="235.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (29 samples, 0.12%)</title><rect x="233.4" y="595.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (29 samples, 0.12%)</title><rect x="233.4" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="233.4" y="563.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="233.4" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.12%)</title><rect x="233.4" y="531.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="236.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,744 samples, 7.17%)</title><rect x="234.9" y="595.0" width="84.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.9" y="606.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.07%)</title><rect x="234.9" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.07%)</title><rect x="234.9" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.get$Lambda (18 samples, 0.07%)</title><rect x="234.9" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$177 (18 samples, 0.07%)</title><rect x="234.9" y="531.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="237.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,618 samples, 6.65%)</title><rect x="235.7" y="579.0" width="78.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.7" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,618 samples, 6.65%)</title><rect x="235.7" y="563.0" width="78.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.7" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,596 samples, 6.56%)</title><rect x="235.7" y="547.0" width="77.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.7" y="558.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.apply (1,596 samples, 6.56%)</title><rect x="235.7" y="531.0" width="77.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.7" y="542.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,596 samples, 6.56%)</title><rect x="235.7" y="515.0" width="77.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.7" y="526.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,596 samples, 6.56%)</title><rect x="235.7" y="499.0" width="77.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.7" y="510.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="235.7" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="235.7" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.get$Lambda (13 samples, 0.05%)</title><rect x="235.7" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$236 (13 samples, 0.05%)</title><rect x="235.7" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="238.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (628 samples, 2.58%)</title><rect x="236.4" y="483.0" width="30.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.4" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (628 samples, 2.58%)</title><rect x="236.4" y="467.0" width="30.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.4" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (628 samples, 2.58%)</title><rect x="236.4" y="451.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.4" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.apply (592 samples, 2.43%)</title><rect x="236.4" y="435.0" width="28.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.4" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (592 samples, 2.43%)</title><rect x="236.4" y="419.0" width="28.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.4" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (592 samples, 2.43%)</title><rect x="236.4" y="403.0" width="28.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.4" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (592 samples, 2.43%)</title><rect x="236.4" y="387.0" width="28.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.4" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (392 samples, 1.61%)</title><rect x="236.4" y="371.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.4" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (107 samples, 0.44%)</title><rect x="236.4" y="355.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.08%)</title><rect x="236.4" y="339.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="239.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.21%)</title><rect x="237.3" y="339.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.21%)</title><rect x="237.3" y="323.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.3" y="334.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.21%)</title><rect x="237.3" y="307.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="240.3" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (37 samples, 0.15%)</title><rect x="239.8" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.8" y="350.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.15%)</title><rect x="239.8" y="323.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="242.8" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (19 samples, 0.08%)</title><rect x="241.6" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.6" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (19 samples, 0.08%)</title><rect x="241.6" y="339.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="244.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (187 samples, 0.77%)</title><rect x="242.5" y="355.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (27 samples, 0.11%)</title><rect x="242.5" y="339.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="245.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (125 samples, 0.51%)</title><rect x="243.8" y="339.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (125 samples, 0.51%)</title><rect x="243.8" y="323.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (90 samples, 0.37%)</title><rect x="243.8" y="307.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.37%)</title><rect x="243.8" y="291.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.get$Lambda (90 samples, 0.37%)</title><rect x="243.8" y="275.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (90 samples, 0.37%)</title><rect x="243.8" y="259.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="246.8" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (35 samples, 0.14%)</title><rect x="248.2" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.run (35 samples, 0.14%)</title><rect x="248.2" y="291.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (35 samples, 0.14%)</title><rect x="248.2" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.2" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (35 samples, 0.14%)</title><rect x="248.2" y="259.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (35 samples, 0.14%)</title><rect x="248.2" y="243.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (35 samples, 0.14%)</title><rect x="248.2" y="227.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="251.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (35 samples, 0.14%)</title><rect x="249.9" y="339.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (35 samples, 0.14%)</title><rect x="249.9" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.9" y="334.0"></text>
</g>
<g>
<title>int[] (35 samples, 0.14%)</title><rect x="249.9" y="307.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="252.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (79 samples, 0.32%)</title><rect x="251.6" y="355.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.6" y="366.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.16%)</title><rect x="251.6" y="339.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="254.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.16%)</title><rect x="253.4" y="339.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 0.16%)</title><rect x="253.4" y="323.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.16%)</title><rect x="253.4" y="307.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="256.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (200 samples, 0.82%)</title><rect x="255.4" y="371.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.4" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.21%)</title><rect x="255.4" y="355.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="258.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (59 samples, 0.24%)</title><rect x="257.9" y="355.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.24%)</title><rect x="257.9" y="339.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="260.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (89 samples, 0.37%)</title><rect x="260.8" y="355.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (89 samples, 0.37%)</title><rect x="260.8" y="339.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="263.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.15%)</title><rect x="265.1" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.15%)</title><rect x="265.1" y="419.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.15%)</title><rect x="265.1" y="403.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="268.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (955 samples, 3.93%)</title><rect x="266.8" y="483.0" width="46.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.8" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (68 samples, 0.28%)</title><rect x="266.8" y="467.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="269.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (862 samples, 3.55%)</title><rect x="270.1" y="467.0" width="41.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.1" y="478.0">jdk..</text>
</g>
<g>
<title>java.lang.Object (12 samples, 0.05%)</title><rect x="270.1" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="273.1" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (34 samples, 0.14%)</title><rect x="270.7" y="451.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="273.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (13 samples, 0.05%)</title><rect x="272.4" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="275.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (41 samples, 0.17%)</title><rect x="273.0" y="451.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (41 samples, 0.17%)</title><rect x="273.0" y="435.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.0" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (41 samples, 0.17%)</title><rect x="273.0" y="419.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="276.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (20 samples, 0.08%)</title><rect x="275.0" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (20 samples, 0.08%)</title><rect x="275.0" y="435.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="278.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (68 samples, 0.28%)</title><rect x="276.0" y="451.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="279.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (35 samples, 0.14%)</title><rect x="279.3" y="451.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="282.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (43 samples, 0.18%)</title><rect x="281.0" y="451.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="284.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.19%)</title><rect x="283.1" y="451.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="286.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (253 samples, 1.04%)</title><rect x="285.2" y="451.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (28 samples, 0.12%)</title><rect x="285.2" y="435.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="288.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (16 samples, 0.07%)</title><rect x="286.6" y="435.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="289.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (25 samples, 0.10%)</title><rect x="287.4" y="435.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="290.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (15 samples, 0.06%)</title><rect x="288.6" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="291.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="289.3" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="289.3" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.get$Lambda (24 samples, 0.10%)</title><rect x="289.3" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$231 (24 samples, 0.10%)</title><rect x="289.3" y="387.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="292.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (8 samples, 0.03%)</title><rect x="290.5" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.03%)</title><rect x="290.5" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="293.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (10 samples, 0.04%)</title><rect x="290.9" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="293.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.12%)</title><rect x="291.3" y="435.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="294.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (98 samples, 0.40%)</title><rect x="292.8" y="435.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (22 samples, 0.09%)</title><rect x="292.8" y="419.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="295.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (25 samples, 0.10%)</title><rect x="293.8" y="419.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="296.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (18 samples, 0.07%)</title><rect x="295.0" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (18 samples, 0.07%)</title><rect x="295.0" y="403.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="298.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (33 samples, 0.14%)</title><rect x="295.9" y="419.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (12 samples, 0.05%)</title><rect x="295.9" y="403.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="298.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (7 samples, 0.03%)</title><rect x="296.5" y="403.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="299.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (14 samples, 0.06%)</title><rect x="296.8" y="403.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="299.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (173 samples, 0.71%)</title><rect x="297.5" y="451.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (21 samples, 0.09%)</title><rect x="297.5" y="435.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="300.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (20 samples, 0.08%)</title><rect x="298.5" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="301.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (20 samples, 0.08%)</title><rect x="299.5" y="435.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="302.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (18 samples, 0.07%)</title><rect x="300.5" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (18 samples, 0.07%)</title><rect x="300.5" y="419.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="303.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (94 samples, 0.39%)</title><rect x="301.3" y="435.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (14 samples, 0.06%)</title><rect x="301.3" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="304.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (29 samples, 0.12%)</title><rect x="302.0" y="419.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="305.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (7 samples, 0.03%)</title><rect x="303.4" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.03%)</title><rect x="303.4" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="306.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (44 samples, 0.18%)</title><rect x="303.8" y="419.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (19 samples, 0.08%)</title><rect x="303.8" y="403.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="306.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (16 samples, 0.07%)</title><rect x="304.7" y="403.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="307.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (9 samples, 0.04%)</title><rect x="305.5" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="308.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (46 samples, 0.19%)</title><rect x="305.9" y="451.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (46 samples, 0.19%)</title><rect x="305.9" y="435.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (26 samples, 0.11%)</title><rect x="305.9" y="419.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="308.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (20 samples, 0.08%)</title><rect x="307.2" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.08%)</title><rect x="307.2" y="403.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.08%)</title><rect x="307.2" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (20 samples, 0.08%)</title><rect x="307.2" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.08%)</title><rect x="307.2" y="355.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="310.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (79 samples, 0.32%)</title><rect x="308.1" y="451.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (22 samples, 0.09%)</title><rect x="308.1" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="308.1" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.get$Lambda (22 samples, 0.09%)</title><rect x="308.1" y="403.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$187 (22 samples, 0.09%)</title><rect x="308.1" y="387.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="311.1" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (57 samples, 0.23%)</title><rect x="309.2" y="435.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.run (57 samples, 0.23%)</title><rect x="309.2" y="419.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (57 samples, 0.23%)</title><rect x="309.2" y="403.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.2" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (11 samples, 0.05%)</title><rect x="309.2" y="387.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="312.2" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (46 samples, 0.19%)</title><rect x="309.7" y="387.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.7" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (24 samples, 0.10%)</title><rect x="309.7" y="371.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="312.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (22 samples, 0.09%)</title><rect x="310.9" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.09%)</title><rect x="310.9" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.9" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.09%)</title><rect x="310.9" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.9" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (22 samples, 0.09%)</title><rect x="310.9" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.9" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (22 samples, 0.09%)</title><rect x="310.9" y="307.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="313.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.10%)</title><rect x="312.0" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.10%)</title><rect x="312.0" y="451.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="315.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="313.2" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="313.2" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="313.2" y="515.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="316.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.09%)</title><rect x="314.3" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.09%)</title><rect x="314.3" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="314.3" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="314.3" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="314.3" y="515.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="317.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (86 samples, 0.35%)</title><rect x="315.3" y="579.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (60 samples, 0.25%)</title><rect x="315.3" y="563.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (60 samples, 0.25%)</title><rect x="315.3" y="547.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1188682934.linkToTargetMethod (60 samples, 0.25%)</title><rect x="315.3" y="531.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/189601446.invoke (60 samples, 0.25%)</title><rect x="315.3" y="515.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1561732919.invoke (60 samples, 0.25%)</title><rect x="315.3" y="499.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.25%)</title><rect x="315.3" y="483.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (24 samples, 0.10%)</title><rect x="315.3" y="467.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.10%)</title><rect x="315.3" y="451.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="318.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (36 samples, 0.15%)</title><rect x="316.5" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (36 samples, 0.15%)</title><rect x="316.5" y="451.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.5" y="462.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="316.5" y="435.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="319.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.11%)</title><rect x="318.2" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.11%)</title><rect x="318.2" y="547.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="321.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (533 samples, 2.19%)</title><rect x="319.6" y="755.0" width="25.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.6" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (272 samples, 1.12%)</title><rect x="319.6" y="739.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (271 samples, 1.11%)</title><rect x="319.6" y="723.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (271 samples, 1.11%)</title><rect x="319.6" y="707.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (271 samples, 1.11%)</title><rect x="319.6" y="691.0" width="13.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="322.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (136 samples, 0.56%)</title><rect x="332.8" y="739.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (136 samples, 0.56%)</title><rect x="332.8" y="723.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (136 samples, 0.56%)</title><rect x="332.8" y="707.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (136 samples, 0.56%)</title><rect x="332.8" y="691.0" width="6.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="335.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (125 samples, 0.51%)</title><rect x="339.4" y="739.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (125 samples, 0.51%)</title><rect x="339.4" y="723.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (125 samples, 0.51%)</title><rect x="339.4" y="707.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (125 samples, 0.51%)</title><rect x="339.4" y="691.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="342.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.run (1,106 samples, 4.55%)</title><rect x="345.5" y="755.0" width="53.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.5" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,106 samples, 4.55%)</title><rect x="345.5" y="739.0" width="53.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.5" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,106 samples, 4.55%)</title><rect x="345.5" y="723.0" width="53.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.5" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,106 samples, 4.55%)</title><rect x="345.5" y="707.0" width="53.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.5" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,106 samples, 4.55%)</title><rect x="345.5" y="691.0" width="53.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.5" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,106 samples, 4.55%)</title><rect x="345.5" y="675.0" width="53.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.5" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,106 samples, 4.55%)</title><rect x="345.5" y="659.0" width="53.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.5" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,106 samples, 4.55%)</title><rect x="345.5" y="643.0" width="53.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.5" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,106 samples, 4.55%)</title><rect x="345.5" y="627.0" width="53.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.5" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,106 samples, 4.55%)</title><rect x="345.5" y="611.0" width="53.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.5" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,106 samples, 4.55%)</title><rect x="345.5" y="595.0" width="53.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.5" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,007 samples, 4.14%)</title><rect x="345.5" y="579.0" width="48.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.5" y="590.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.17%)</title><rect x="345.5" y="563.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.17%)</title><rect x="345.5" y="547.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$304/383822122.get$Lambda (26 samples, 0.11%)</title><rect x="345.5" y="531.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$304 (26 samples, 0.11%)</title><rect x="345.5" y="515.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="348.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$312/1117598094.get$Lambda (7 samples, 0.03%)</title><rect x="346.7" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$312 (7 samples, 0.03%)</title><rect x="346.7" y="515.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="349.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$313/1568044126.get$Lambda (9 samples, 0.04%)</title><rect x="347.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$313 (9 samples, 0.04%)</title><rect x="347.1" y="515.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (965 samples, 3.97%)</title><rect x="347.5" y="563.0" width="46.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.5" y="574.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (31 samples, 0.13%)</title><rect x="347.5" y="547.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="350.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (934 samples, 3.84%)</title><rect x="349.0" y="547.0" width="45.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.0" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (934 samples, 3.84%)</title><rect x="349.0" y="531.0" width="45.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.0" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (934 samples, 3.84%)</title><rect x="349.0" y="515.0" width="45.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.0" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (163 samples, 0.67%)</title><rect x="349.0" y="499.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (50 samples, 0.21%)</title><rect x="349.0" y="483.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="352.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$308/1021512958.apply (83 samples, 0.34%)</title><rect x="351.4" y="483.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (83 samples, 0.34%)</title><rect x="351.4" y="467.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (83 samples, 0.34%)</title><rect x="351.4" y="451.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (18 samples, 0.07%)</title><rect x="351.4" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.4" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (18 samples, 0.07%)</title><rect x="351.4" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.4" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (18 samples, 0.07%)</title><rect x="351.4" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="354.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (65 samples, 0.27%)</title><rect x="352.3" y="435.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="352.3" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="352.3" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.get$Lambda (11 samples, 0.05%)</title><rect x="352.3" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$314 (11 samples, 0.05%)</title><rect x="352.3" y="371.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="355.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (54 samples, 0.22%)</title><rect x="352.8" y="419.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (54 samples, 0.22%)</title><rect x="352.8" y="403.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (33 samples, 0.14%)</title><rect x="352.8" y="387.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="355.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="354.4" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="354.4" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="354.4" y="355.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="357.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (30 samples, 0.12%)</title><rect x="355.5" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (30 samples, 0.12%)</title><rect x="355.5" y="467.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (29 samples, 0.12%)</title><rect x="355.5" y="451.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (29 samples, 0.12%)</title><rect x="355.5" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (29 samples, 0.12%)</title><rect x="355.5" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.09%)</title><rect x="355.8" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (23 samples, 0.09%)</title><rect x="355.8" y="387.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (23 samples, 0.09%)</title><rect x="355.8" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.05%)</title><rect x="356.2" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (13 samples, 0.05%)</title><rect x="356.2" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.05%)</title><rect x="356.2" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.05%)</title><rect x="356.2" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.05%)</title><rect x="356.2" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.05%)</title><rect x="356.2" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (11 samples, 0.05%)</title><rect x="356.2" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (11 samples, 0.05%)</title><rect x="356.2" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (11 samples, 0.05%)</title><rect x="356.2" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.2" y="238.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (11 samples, 0.05%)</title><rect x="356.2" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.2" y="222.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (11 samples, 0.05%)</title><rect x="356.2" y="195.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.2" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (11 samples, 0.05%)</title><rect x="356.2" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.2" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.05%)</title><rect x="356.2" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.05%)</title><rect x="356.2" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.2" y="158.0"></text>
</g>
<g>
<title>long[] (7 samples, 0.03%)</title><rect x="356.4" y="131.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="359.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (771 samples, 3.17%)</title><rect x="356.9" y="499.0" width="37.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.9" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (771 samples, 3.17%)</title><rect x="356.9" y="483.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.9" y="494.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.apply (771 samples, 3.17%)</title><rect x="356.9" y="467.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.9" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (771 samples, 3.17%)</title><rect x="356.9" y="451.0" width="37.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.9" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (771 samples, 3.17%)</title><rect x="356.9" y="435.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.9" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.apply (771 samples, 3.17%)</title><rect x="356.9" y="419.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.9" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (771 samples, 3.17%)</title><rect x="356.9" y="403.0" width="37.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.9" y="414.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="356.9" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="356.9" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$308/1021512958.get$Lambda (13 samples, 0.05%)</title><rect x="356.9" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$308 (13 samples, 0.05%)</title><rect x="356.9" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="359.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58 samples, 0.24%)</title><rect x="357.5" y="387.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58 samples, 0.24%)</title><rect x="357.5" y="371.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (35 samples, 0.14%)</title><rect x="357.5" y="355.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="360.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.09%)</title><rect x="359.2" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.09%)</title><rect x="359.2" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="359.2" y="323.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="362.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (66 samples, 0.27%)</title><rect x="360.4" y="387.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="360.4" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="360.4" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$309/1621395256.get$Lambda (8 samples, 0.03%)</title><rect x="360.4" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$309 (8 samples, 0.03%)</title><rect x="360.4" y="323.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="363.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58 samples, 0.24%)</title><rect x="360.8" y="371.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58 samples, 0.24%)</title><rect x="360.8" y="355.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (29 samples, 0.12%)</title><rect x="360.8" y="339.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="363.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="362.2" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="362.2" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.12%)</title><rect x="362.2" y="307.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="365.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (634 samples, 2.61%)</title><rect x="363.6" y="387.0" width="30.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.6" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.12%)</title><rect x="363.6" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.12%)</title><rect x="363.6" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$305/1944453069.get$Lambda (16 samples, 0.07%)</title><rect x="363.6" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$305 (16 samples, 0.07%)</title><rect x="363.6" y="323.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="366.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$307/840568830.get$Lambda (13 samples, 0.05%)</title><rect x="364.3" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$307 (13 samples, 0.05%)</title><rect x="364.3" y="323.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="367.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (208 samples, 0.86%)</title><rect x="365.0" y="371.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (208 samples, 0.86%)</title><rect x="365.0" y="355.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (208 samples, 0.86%)</title><rect x="365.0" y="339.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$305/1944453069.accept (69 samples, 0.28%)</title><rect x="365.0" y="323.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (69 samples, 0.28%)</title><rect x="365.0" y="307.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (69 samples, 0.28%)</title><rect x="365.0" y="291.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.07%)</title><rect x="365.0" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.07%)</title><rect x="365.0" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$306/1143115771.get$Lambda (18 samples, 0.07%)</title><rect x="365.0" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$306 (18 samples, 0.07%)</title><rect x="365.0" y="227.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="368.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (51 samples, 0.21%)</title><rect x="365.8" y="275.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.21%)</title><rect x="365.8" y="259.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (29 samples, 0.12%)</title><rect x="365.8" y="243.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="368.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="367.3" y="243.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="367.3" y="227.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="367.3" y="211.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="370.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$307/840568830.accept (87 samples, 0.36%)</title><rect x="368.3" y="323.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (87 samples, 0.36%)</title><rect x="368.3" y="307.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (87 samples, 0.36%)</title><rect x="368.3" y="291.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (87 samples, 0.36%)</title><rect x="368.3" y="275.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (87 samples, 0.36%)</title><rect x="368.3" y="259.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (87 samples, 0.36%)</title><rect x="368.3" y="243.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (87 samples, 0.36%)</title><rect x="368.3" y="227.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (87 samples, 0.36%)</title><rect x="368.3" y="211.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (87 samples, 0.36%)</title><rect x="368.3" y="195.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (87 samples, 0.36%)</title><rect x="368.3" y="179.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (38 samples, 0.16%)</title><rect x="368.3" y="163.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (38 samples, 0.16%)</title><rect x="368.3" y="147.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (21 samples, 0.09%)</title><rect x="368.3" y="131.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="371.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.07%)</title><rect x="369.3" y="131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (17 samples, 0.07%)</title><rect x="369.3" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (17 samples, 0.07%)</title><rect x="369.3" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (17 samples, 0.07%)</title><rect x="369.3" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (17 samples, 0.07%)</title><rect x="369.3" y="67.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.07%)</title><rect x="369.3" y="51.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="372.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (49 samples, 0.20%)</title><rect x="370.2" y="163.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (49 samples, 0.20%)</title><rect x="370.2" y="147.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.2" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.07%)</title><rect x="370.2" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.2" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.07%)</title><rect x="370.2" y="115.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="373.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.13%)</title><rect x="371.0" y="131.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.0" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (9 samples, 0.04%)</title><rect x="371.0" y="115.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="374.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (22 samples, 0.09%)</title><rect x="371.5" y="115.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (22 samples, 0.09%)</title><rect x="371.5" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (22 samples, 0.09%)</title><rect x="371.5" y="83.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (22 samples, 0.09%)</title><rect x="371.5" y="67.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (22 samples, 0.09%)</title><rect x="371.5" y="51.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (22 samples, 0.09%)</title><rect x="371.5" y="35.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="374.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.21%)</title><rect x="372.5" y="323.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.21%)</title><rect x="372.5" y="307.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.21%)</title><rect x="372.5" y="291.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="375.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (397 samples, 1.63%)</title><rect x="375.1" y="371.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (38 samples, 0.16%)</title><rect x="375.1" y="355.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="378.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (23 samples, 0.09%)</title><rect x="376.9" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (23 samples, 0.09%)</title><rect x="376.9" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="376.9" y="323.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="379.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (336 samples, 1.38%)</title><rect x="378.0" y="355.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (25 samples, 0.10%)</title><rect x="378.0" y="339.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="381.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (181 samples, 0.74%)</title><rect x="379.2" y="339.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (38 samples, 0.16%)</title><rect x="379.2" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.2" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (38 samples, 0.16%)</title><rect x="379.2" y="307.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="382.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (25 samples, 0.10%)</title><rect x="381.1" y="323.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="384.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (118 samples, 0.49%)</title><rect x="382.3" y="323.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (10 samples, 0.04%)</title><rect x="382.3" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="385.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (12 samples, 0.05%)</title><rect x="382.8" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="385.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (26 samples, 0.11%)</title><rect x="383.4" y="307.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="386.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (19 samples, 0.08%)</title><rect x="384.6" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (19 samples, 0.08%)</title><rect x="384.6" y="291.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="387.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (51 samples, 0.21%)</title><rect x="385.6" y="307.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (18 samples, 0.07%)</title><rect x="385.6" y="291.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="388.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (16 samples, 0.07%)</title><rect x="386.4" y="291.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="389.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (17 samples, 0.07%)</title><rect x="387.2" y="291.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="390.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (130 samples, 0.53%)</title><rect x="388.0" y="339.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.0" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.06%)</title><rect x="388.0" y="323.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="391.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (71 samples, 0.29%)</title><rect x="388.7" y="323.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.15%)</title><rect x="388.7" y="307.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="391.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (34 samples, 0.14%)</title><rect x="390.5" y="307.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.5" y="318.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.14%)</title><rect x="390.5" y="291.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="393.5" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (45 samples, 0.19%)</title><rect x="392.2" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (45 samples, 0.19%)</title><rect x="392.2" y="307.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (45 samples, 0.19%)</title><rect x="392.2" y="291.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (45 samples, 0.19%)</title><rect x="392.2" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.19%)</title><rect x="392.2" y="259.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (45 samples, 0.19%)</title><rect x="392.2" y="243.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="395.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (99 samples, 0.41%)</title><rect x="394.3" y="579.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (99 samples, 0.41%)</title><rect x="394.3" y="563.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (99 samples, 0.41%)</title><rect x="394.3" y="547.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (99 samples, 0.41%)</title><rect x="394.3" y="531.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (99 samples, 0.41%)</title><rect x="394.3" y="515.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (99 samples, 0.41%)</title><rect x="394.3" y="499.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (38 samples, 0.16%)</title><rect x="394.3" y="483.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.3" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (38 samples, 0.16%)</title><rect x="394.3" y="467.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="397.3" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (61 samples, 0.25%)</title><rect x="396.2" y="483.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.2" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (61 samples, 0.25%)</title><rect x="396.2" y="467.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="399.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,283 samples, 13.50%)</title><rect x="399.1" y="755.0" width="159.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.1" y="766.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,283 samples, 13.50%)</title><rect x="399.1" y="739.0" width="159.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.1" y="750.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,748 samples, 11.30%)</title><rect x="399.1" y="723.0" width="133.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.1" y="734.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (2,748 samples, 11.30%)</title><rect x="399.1" y="707.0" width="133.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.1" y="718.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,748 samples, 11.30%)</title><rect x="399.1" y="691.0" width="133.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.1" y="702.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (59 samples, 0.24%)</title><rect x="399.1" y="675.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (59 samples, 0.24%)</title><rect x="399.1" y="659.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (59 samples, 0.24%)</title><rect x="399.1" y="643.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (59 samples, 0.24%)</title><rect x="399.1" y="627.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (30 samples, 0.12%)</title><rect x="399.1" y="611.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (30 samples, 0.12%)</title><rect x="399.1" y="595.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.12%)</title><rect x="399.1" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (30 samples, 0.12%)</title><rect x="399.1" y="563.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (30 samples, 0.12%)</title><rect x="399.1" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.1" y="558.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.12%)</title><rect x="399.1" y="531.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="402.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (29 samples, 0.12%)</title><rect x="400.6" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.12%)</title><rect x="400.6" y="595.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.12%)</title><rect x="400.6" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (29 samples, 0.12%)</title><rect x="400.6" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (29 samples, 0.12%)</title><rect x="400.6" y="547.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="403.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,689 samples, 11.06%)</title><rect x="402.0" y="675.0" width="130.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.0" y="686.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,689 samples, 11.06%)</title><rect x="402.0" y="659.0" width="130.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.0" y="670.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,689 samples, 11.06%)</title><rect x="402.0" y="643.0" width="130.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.0" y="654.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,689 samples, 11.06%)</title><rect x="402.0" y="627.0" width="130.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.0" y="638.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,240 samples, 5.10%)</title><rect x="402.0" y="611.0" width="60.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.0" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,240 samples, 5.10%)</title><rect x="402.0" y="595.0" width="60.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.0" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,240 samples, 5.10%)</title><rect x="402.0" y="579.0" width="60.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.0" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,240 samples, 5.10%)</title><rect x="402.0" y="563.0" width="60.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.0" y="574.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,240 samples, 5.10%)</title><rect x="402.0" y="547.0" width="60.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.0" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,240 samples, 5.10%)</title><rect x="402.0" y="531.0" width="60.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.0" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,240 samples, 5.10%)</title><rect x="402.0" y="515.0" width="60.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.0" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,211 samples, 4.98%)</title><rect x="402.0" y="499.0" width="58.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.0" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,211 samples, 4.98%)</title><rect x="402.0" y="483.0" width="58.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.0" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,184 samples, 4.87%)</title><rect x="402.0" y="467.0" width="57.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.0" y="478.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (26 samples, 0.11%)</title><rect x="402.0" y="451.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="405.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$309/1621395256.apply (28 samples, 0.12%)</title><rect x="403.3" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (28 samples, 0.12%)</title><rect x="403.3" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (28 samples, 0.12%)</title><rect x="403.3" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="406.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (28 samples, 0.12%)</title><rect x="403.3" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.12%)</title><rect x="403.3" y="387.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="406.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (1,081 samples, 4.45%)</title><rect x="404.6" y="451.0" width="52.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.6" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,081 samples, 4.45%)</title><rect x="404.6" y="435.0" width="52.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.6" y="446.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="404.6" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="404.6" y="403.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.get$Lambda (23 samples, 0.09%)</title><rect x="404.6" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$341 (23 samples, 0.09%)</title><rect x="404.6" y="371.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="407.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (73 samples, 0.30%)</title><rect x="405.7" y="419.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (73 samples, 0.30%)</title><rect x="405.7" y="403.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (43 samples, 0.18%)</title><rect x="405.7" y="387.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="408.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="407.8" y="387.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="407.8" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.12%)</title><rect x="407.8" y="355.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="410.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (985 samples, 4.05%)</title><rect x="409.3" y="419.0" width="47.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.3" y="430.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="409.3" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="409.3" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$340/122266442.get$Lambda (12 samples, 0.05%)</title><rect x="409.3" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$340 (12 samples, 0.05%)</title><rect x="409.3" y="355.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="412.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (66 samples, 0.27%)</title><rect x="409.9" y="403.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (66 samples, 0.27%)</title><rect x="409.9" y="387.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.15%)</title><rect x="409.9" y="371.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="412.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="411.6" y="371.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.12%)</title><rect x="411.6" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.12%)</title><rect x="411.6" y="339.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="414.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (907 samples, 3.73%)</title><rect x="413.1" y="403.0" width="44.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.1" y="414.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$146/2083139844.apply (65 samples, 0.27%)</title><rect x="413.1" y="387.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (65 samples, 0.27%)</title><rect x="413.1" y="371.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (65 samples, 0.27%)</title><rect x="413.1" y="355.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (30 samples, 0.12%)</title><rect x="413.1" y="339.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="416.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (35 samples, 0.14%)</title><rect x="414.5" y="339.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (12 samples, 0.05%)</title><rect x="414.5" y="323.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="417.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="415.1" y="323.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="418.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (842 samples, 3.46%)</title><rect x="416.2" y="387.0" width="40.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.2" y="398.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="416.2" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="416.2" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.get$Lambda (14 samples, 0.06%)</title><rect x="416.2" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$337 (14 samples, 0.06%)</title><rect x="416.2" y="323.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="419.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$339/609318195.get$Lambda (10 samples, 0.04%)</title><rect x="416.9" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$339 (10 samples, 0.04%)</title><rect x="416.9" y="323.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="419.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2096789396.linkToTargetMethod (15 samples, 0.06%)</title><rect x="417.4" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282651814.invokeStatic (15 samples, 0.06%)</title><rect x="417.4" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.get$Lambda (15 samples, 0.06%)</title><rect x="417.4" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$323 (15 samples, 0.06%)</title><rect x="417.4" y="323.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="420.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (150 samples, 0.62%)</title><rect x="418.1" y="371.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (46 samples, 0.19%)</title><rect x="418.1" y="355.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (20 samples, 0.08%)</title><rect x="418.1" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.1" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (20 samples, 0.08%)</title><rect x="418.1" y="323.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="421.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (26 samples, 0.11%)</title><rect x="419.1" y="339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (26 samples, 0.11%)</title><rect x="419.1" y="323.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="422.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (50 samples, 0.21%)</title><rect x="420.4" y="355.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (50 samples, 0.21%)</title><rect x="420.4" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (50 samples, 0.21%)</title><rect x="420.4" y="323.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 0.07%)</title><rect x="420.4" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (17 samples, 0.07%)</title><rect x="420.4" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (17 samples, 0.07%)</title><rect x="420.4" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (17 samples, 0.07%)</title><rect x="420.4" y="259.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="423.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$320/39647453.get (12 samples, 0.05%)</title><rect x="421.2" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (12 samples, 0.05%)</title><rect x="421.2" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (21 samples, 0.09%)</title><rect x="421.8" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (21 samples, 0.09%)</title><rect x="421.8" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.8" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (21 samples, 0.09%)</title><rect x="421.8" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.8" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (21 samples, 0.09%)</title><rect x="421.8" y="259.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="424.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (54 samples, 0.22%)</title><rect x="422.8" y="355.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (54 samples, 0.22%)</title><rect x="422.8" y="339.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="425.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (115 samples, 0.47%)</title><rect x="425.4" y="371.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (61 samples, 0.25%)</title><rect x="425.4" y="355.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (42 samples, 0.17%)</title><rect x="425.4" y="339.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="428.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="427.4" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="427.4" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="427.4" y="307.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="430.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (54 samples, 0.22%)</title><rect x="428.4" y="355.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (54 samples, 0.22%)</title><rect x="428.4" y="339.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.15%)</title><rect x="428.4" y="323.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="431.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="430.2" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="430.2" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.07%)</title><rect x="430.2" y="291.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="433.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (17 samples, 0.07%)</title><rect x="431.0" y="371.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="434.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (16 samples, 0.07%)</title><rect x="431.8" y="371.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="434.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.13%)</title><rect x="432.6" y="371.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="435.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (15 samples, 0.06%)</title><rect x="434.1" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (15 samples, 0.06%)</title><rect x="434.1" y="355.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="437.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (458 samples, 1.88%)</title><rect x="434.9" y="371.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.9" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (458 samples, 1.88%)</title><rect x="434.9" y="355.0" width="22.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.9" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (458 samples, 1.88%)</title><rect x="434.9" y="339.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.9" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.30%)</title><rect x="434.9" y="323.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.30%)</title><rect x="434.9" y="307.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.get$Lambda (12 samples, 0.05%)</title><rect x="434.9" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (12 samples, 0.05%)</title><rect x="434.9" y="275.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="437.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/1994142006.get$Lambda (32 samples, 0.13%)</title><rect x="435.4" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$327 (32 samples, 0.13%)</title><rect x="435.4" y="275.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="438.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1978442940.get$Lambda (28 samples, 0.12%)</title><rect x="437.0" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$333 (28 samples, 0.12%)</title><rect x="437.0" y="275.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="440.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (64 samples, 0.26%)</title><rect x="438.4" y="323.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (64 samples, 0.26%)</title><rect x="438.4" y="307.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (45 samples, 0.19%)</title><rect x="438.4" y="291.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="441.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="440.5" y="291.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="440.5" y="275.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="440.5" y="259.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="443.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (26 samples, 0.11%)</title><rect x="441.5" y="323.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="444.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (31 samples, 0.13%)</title><rect x="442.7" y="323.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.13%)</title><rect x="442.7" y="307.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="445.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (80 samples, 0.33%)</title><rect x="444.2" y="323.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (80 samples, 0.33%)</title><rect x="444.2" y="307.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="444.2" y="291.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="444.2" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$335/1458335372.get$Lambda (24 samples, 0.10%)</title><rect x="444.2" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$335 (24 samples, 0.10%)</title><rect x="444.2" y="243.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="447.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (56 samples, 0.23%)</title><rect x="445.4" y="291.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (56 samples, 0.23%)</title><rect x="445.4" y="275.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.23%)</title><rect x="445.4" y="259.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.15%)</title><rect x="445.4" y="243.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="448.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="447.1" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.08%)</title><rect x="447.1" y="227.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.08%)</title><rect x="447.1" y="211.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="450.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (69 samples, 0.28%)</title><rect x="448.1" y="323.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.28%)</title><rect x="448.1" y="307.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122606666.invoke (69 samples, 0.28%)</title><rect x="448.1" y="291.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.28%)</title><rect x="448.1" y="275.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.07%)</title><rect x="448.1" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="448.1" y="243.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="451.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (53 samples, 0.22%)</title><rect x="448.9" y="259.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (53 samples, 0.22%)</title><rect x="448.9" y="243.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.9" y="254.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.22%)</title><rect x="448.9" y="227.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="451.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (116 samples, 0.48%)</title><rect x="451.5" y="323.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (41 samples, 0.17%)</title><rect x="451.5" y="307.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="454.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (75 samples, 0.31%)</title><rect x="453.5" y="307.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.31%)</title><rect x="453.5" y="291.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122606666.invoke (75 samples, 0.31%)</title><rect x="453.5" y="275.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.31%)</title><rect x="453.5" y="259.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.05%)</title><rect x="453.5" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="453.5" y="227.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="456.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (64 samples, 0.26%)</title><rect x="454.0" y="243.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (64 samples, 0.26%)</title><rect x="454.0" y="227.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.0" y="238.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.26%)</title><rect x="454.0" y="211.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="457.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.apply (49 samples, 0.20%)</title><rect x="457.1" y="451.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (49 samples, 0.20%)</title><rect x="457.1" y="435.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (26 samples, 0.11%)</title><rect x="457.1" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (26 samples, 0.11%)</title><rect x="457.1" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.1" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (26 samples, 0.11%)</title><rect x="457.1" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.1" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (26 samples, 0.11%)</title><rect x="457.1" y="371.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="460.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (23 samples, 0.09%)</title><rect x="458.4" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.09%)</title><rect x="458.4" y="403.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="461.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (27 samples, 0.11%)</title><rect x="459.5" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (27 samples, 0.11%)</title><rect x="459.5" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$296/730056817.apply (27 samples, 0.11%)</title><rect x="459.5" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (27 samples, 0.11%)</title><rect x="459.5" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (27 samples, 0.11%)</title><rect x="459.5" y="403.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.11%)</title><rect x="459.5" y="387.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="462.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.apply (29 samples, 0.12%)</title><rect x="460.8" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (29 samples, 0.12%)</title><rect x="460.8" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (29 samples, 0.12%)</title><rect x="460.8" y="467.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="463.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,449 samples, 5.96%)</title><rect x="462.2" y="611.0" width="70.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.2" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (81 samples, 0.33%)</title><rect x="462.2" y="595.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (81 samples, 0.33%)</title><rect x="462.2" y="579.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (81 samples, 0.33%)</title><rect x="462.2" y="563.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (81 samples, 0.33%)</title><rect x="462.2" y="547.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.33%)</title><rect x="462.2" y="531.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.2" y="542.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.33%)</title><rect x="462.2" y="515.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="465.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (52 samples, 0.21%)</title><rect x="466.1" y="595.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (52 samples, 0.21%)</title><rect x="466.1" y="579.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (52 samples, 0.21%)</title><rect x="466.1" y="563.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (52 samples, 0.21%)</title><rect x="466.1" y="547.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.21%)</title><rect x="466.1" y="531.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.1" y="542.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.21%)</title><rect x="466.1" y="515.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="469.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (124 samples, 0.51%)</title><rect x="468.6" y="595.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.6" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (33 samples, 0.14%)</title><rect x="468.6" y="579.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="471.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.09%)</title><rect x="470.2" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.09%)</title><rect x="470.2" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.09%)</title><rect x="470.2" y="547.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.2" y="558.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.09%)</title><rect x="470.2" y="531.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="473.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (19 samples, 0.08%)</title><rect x="471.4" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (19 samples, 0.08%)</title><rect x="471.4" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.4" y="574.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="471.4" y="547.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="474.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (49 samples, 0.20%)</title><rect x="472.3" y="579.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.20%)</title><rect x="472.3" y="563.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="472.3" y="547.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="475.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.13%)</title><rect x="473.1" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.1" y="558.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.13%)</title><rect x="473.1" y="531.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="476.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (406 samples, 1.67%)</title><rect x="474.7" y="595.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (406 samples, 1.67%)</title><rect x="474.7" y="579.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (406 samples, 1.67%)</title><rect x="474.7" y="563.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.7" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.05%)</title><rect x="474.7" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="477.7" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.09%)</title><rect x="475.2" y="547.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="478.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (46 samples, 0.19%)</title><rect x="476.4" y="547.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="479.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (15 samples, 0.06%)</title><rect x="478.6" y="547.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="481.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.07%)</title><rect x="479.3" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.07%)</title><rect x="479.3" y="531.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (18 samples, 0.07%)</title><rect x="479.3" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.3" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (18 samples, 0.07%)</title><rect x="479.3" y="499.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="482.3" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (34 samples, 0.14%)</title><rect x="480.2" y="547.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (34 samples, 0.14%)</title><rect x="480.2" y="531.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="483.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (219 samples, 0.90%)</title><rect x="481.8" y="547.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (219 samples, 0.90%)</title><rect x="481.8" y="531.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (219 samples, 0.90%)</title><rect x="481.8" y="515.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.15%)</title><rect x="481.8" y="499.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.15%)</title><rect x="481.8" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (37 samples, 0.15%)</title><rect x="481.8" y="467.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.8" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (37 samples, 0.15%)</title><rect x="481.8" y="451.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="484.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (44 samples, 0.18%)</title><rect x="483.6" y="499.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (44 samples, 0.18%)</title><rect x="483.6" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (44 samples, 0.18%)</title><rect x="483.6" y="467.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.18%)</title><rect x="483.6" y="451.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.18%)</title><rect x="483.6" y="435.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.18%)</title><rect x="483.6" y="419.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.18%)</title><rect x="483.6" y="403.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.18%)</title><rect x="483.6" y="387.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.18%)</title><rect x="483.6" y="371.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="486.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (67 samples, 0.28%)</title><rect x="485.8" y="499.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.8" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (67 samples, 0.28%)</title><rect x="485.8" y="483.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (34 samples, 0.14%)</title><rect x="485.8" y="467.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.14%)</title><rect x="485.8" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.14%)</title><rect x="485.8" y="435.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="488.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (33 samples, 0.14%)</title><rect x="487.4" y="467.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (33 samples, 0.14%)</title><rect x="487.4" y="451.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="490.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (71 samples, 0.29%)</title><rect x="489.0" y="499.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (71 samples, 0.29%)</title><rect x="489.0" y="483.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="492.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (39 samples, 0.16%)</title><rect x="492.5" y="547.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.16%)</title><rect x="492.5" y="531.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="495.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (786 samples, 3.23%)</title><rect x="494.4" y="595.0" width="38.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.4" y="606.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.20%)</title><rect x="494.4" y="579.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="497.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.21%)</title><rect x="496.7" y="579.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.21%)</title><rect x="496.7" y="563.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.7" y="574.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.21%)</title><rect x="496.7" y="547.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="499.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (89 samples, 0.37%)</title><rect x="499.2" y="579.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (89 samples, 0.37%)</title><rect x="499.2" y="563.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.12%)</title><rect x="499.2" y="547.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="502.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.24%)</title><rect x="500.7" y="547.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.7" y="558.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.24%)</title><rect x="500.7" y="531.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="503.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (597 samples, 2.46%)</title><rect x="503.5" y="579.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.5" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (164 samples, 0.67%)</title><rect x="503.5" y="563.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (164 samples, 0.67%)</title><rect x="503.5" y="547.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.33%)</title><rect x="503.5" y="531.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="506.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.35%)</title><rect x="507.4" y="531.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.4" y="542.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.35%)</title><rect x="507.4" y="515.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="510.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (101 samples, 0.42%)</title><rect x="511.5" y="563.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (101 samples, 0.42%)</title><rect x="511.5" y="547.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.5" y="558.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.22%)</title><rect x="511.5" y="531.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="514.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.19%)</title><rect x="514.1" y="531.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="517.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (91 samples, 0.37%)</title><rect x="516.4" y="563.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (91 samples, 0.37%)</title><rect x="516.4" y="547.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (91 samples, 0.37%)</title><rect x="516.4" y="531.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.14%)</title><rect x="516.4" y="515.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="519.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.23%)</title><rect x="518.1" y="515.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.1" y="526.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.23%)</title><rect x="518.1" y="499.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="521.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (79 samples, 0.32%)</title><rect x="520.8" y="563.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (79 samples, 0.32%)</title><rect x="520.8" y="547.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (79 samples, 0.32%)</title><rect x="520.8" y="531.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (79 samples, 0.32%)</title><rect x="520.8" y="515.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 0.32%)</title><rect x="520.8" y="499.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.32%)</title><rect x="520.8" y="483.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="523.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (162 samples, 0.67%)</title><rect x="524.7" y="563.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (60 samples, 0.25%)</title><rect x="524.7" y="547.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (60 samples, 0.25%)</title><rect x="524.7" y="531.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="527.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (72 samples, 0.30%)</title><rect x="527.6" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (72 samples, 0.30%)</title><rect x="527.6" y="531.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="530.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$315/1017512857.apply (30 samples, 0.12%)</title><rect x="531.1" y="547.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (30 samples, 0.12%)</title><rect x="531.1" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.1" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (30 samples, 0.12%)</title><rect x="531.1" y="515.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="534.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (535 samples, 2.20%)</title><rect x="532.5" y="723.0" width="26.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.5" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (535 samples, 2.20%)</title><rect x="532.5" y="707.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.5" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (535 samples, 2.20%)</title><rect x="532.5" y="691.0" width="26.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.5" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (535 samples, 2.20%)</title><rect x="532.5" y="675.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.5" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (535 samples, 2.20%)</title><rect x="532.5" y="659.0" width="26.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.5" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (519 samples, 2.13%)</title><rect x="532.5" y="643.0" width="25.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.5" y="654.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.11%)</title><rect x="532.5" y="627.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.11%)</title><rect x="532.5" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (7 samples, 0.03%)</title><rect x="532.5" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$264 (7 samples, 0.03%)</title><rect x="532.5" y="579.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="535.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$267/401982671.get$Lambda (19 samples, 0.08%)</title><rect x="532.9" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$267 (19 samples, 0.08%)</title><rect x="532.9" y="579.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="535.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (17 samples, 0.07%)</title><rect x="533.8" y="627.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="536.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (42 samples, 0.17%)</title><rect x="534.6" y="627.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (42 samples, 0.17%)</title><rect x="534.6" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (16 samples, 0.07%)</title><rect x="534.6" y="595.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="537.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (26 samples, 0.11%)</title><rect x="535.4" y="595.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (26 samples, 0.11%)</title><rect x="535.4" y="579.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="538.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (434 samples, 1.79%)</title><rect x="536.6" y="627.0" width="21.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.6" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (434 samples, 1.79%)</title><rect x="536.6" y="611.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.run (373 samples, 1.53%)</title><rect x="536.6" y="595.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (373 samples, 1.53%)</title><rect x="536.6" y="579.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (373 samples, 1.53%)</title><rect x="536.6" y="563.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (98 samples, 0.40%)</title><rect x="536.6" y="547.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (76 samples, 0.31%)</title><rect x="536.6" y="531.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (31 samples, 0.13%)</title><rect x="536.6" y="515.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (31 samples, 0.13%)</title><rect x="536.6" y="499.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="539.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (45 samples, 0.19%)</title><rect x="538.1" y="515.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.1" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (45 samples, 0.19%)</title><rect x="538.1" y="499.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="541.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (22 samples, 0.09%)</title><rect x="540.3" y="531.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.09%)</title><rect x="540.3" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (22 samples, 0.09%)</title><rect x="540.3" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (13 samples, 0.05%)</title><rect x="540.3" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.3" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (13 samples, 0.05%)</title><rect x="540.3" y="467.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="543.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (9 samples, 0.04%)</title><rect x="541.0" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (9 samples, 0.04%)</title><rect x="541.0" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.0" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (9 samples, 0.04%)</title><rect x="541.0" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.0" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (9 samples, 0.04%)</title><rect x="541.0" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="544.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (275 samples, 1.13%)</title><rect x="541.4" y="547.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (23 samples, 0.09%)</title><rect x="541.4" y="531.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.4" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (23 samples, 0.09%)</title><rect x="541.4" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (23 samples, 0.09%)</title><rect x="541.4" y="499.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (23 samples, 0.09%)</title><rect x="541.4" y="483.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.4" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (23 samples, 0.09%)</title><rect x="541.4" y="467.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="544.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (252 samples, 1.04%)</title><rect x="542.5" y="531.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (94 samples, 0.39%)</title><rect x="542.5" y="515.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.12%)</title><rect x="542.5" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (28 samples, 0.12%)</title><rect x="542.5" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.12%)</title><rect x="542.5" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.12%)</title><rect x="542.5" y="451.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.12%)</title><rect x="542.5" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.12%)</title><rect x="542.5" y="419.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="545.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (18 samples, 0.07%)</title><rect x="543.9" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (18 samples, 0.07%)</title><rect x="543.9" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (18 samples, 0.07%)</title><rect x="543.9" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (18 samples, 0.07%)</title><rect x="543.9" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (18 samples, 0.07%)</title><rect x="543.9" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.9" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (18 samples, 0.07%)</title><rect x="543.9" y="419.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="546.9" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (20 samples, 0.08%)</title><rect x="544.7" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (20 samples, 0.08%)</title><rect x="544.7" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (20 samples, 0.08%)</title><rect x="544.7" y="467.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="547.7" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (12 samples, 0.05%)</title><rect x="545.7" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (12 samples, 0.05%)</title><rect x="545.7" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.05%)</title><rect x="545.7" y="467.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="548.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (16 samples, 0.07%)</title><rect x="546.3" y="499.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="549.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (60 samples, 0.25%)</title><rect x="547.1" y="515.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.07%)</title><rect x="547.1" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (17 samples, 0.07%)</title><rect x="547.1" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (17 samples, 0.07%)</title><rect x="547.1" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.07%)</title><rect x="547.1" y="451.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="550.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (27 samples, 0.11%)</title><rect x="547.9" y="499.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (27 samples, 0.11%)</title><rect x="547.9" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.9" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.11%)</title><rect x="547.9" y="467.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="550.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (16 samples, 0.07%)</title><rect x="549.2" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (16 samples, 0.07%)</title><rect x="549.2" y="483.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="552.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (98 samples, 0.40%)</title><rect x="550.0" y="515.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (17 samples, 0.07%)</title><rect x="550.0" y="499.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="553.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (81 samples, 0.33%)</title><rect x="550.8" y="499.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (24 samples, 0.10%)</title><rect x="550.8" y="483.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (24 samples, 0.10%)</title><rect x="550.8" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (24 samples, 0.10%)</title><rect x="550.8" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (24 samples, 0.10%)</title><rect x="550.8" y="435.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="553.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (57 samples, 0.23%)</title><rect x="552.0" y="483.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (57 samples, 0.23%)</title><rect x="552.0" y="467.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (42 samples, 0.17%)</title><rect x="552.0" y="451.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="555.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (15 samples, 0.06%)</title><rect x="554.0" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (15 samples, 0.06%)</title><rect x="554.0" y="435.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="557.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (61 samples, 0.25%)</title><rect x="554.7" y="595.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (61 samples, 0.25%)</title><rect x="554.7" y="579.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (61 samples, 0.25%)</title><rect x="554.7" y="563.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (61 samples, 0.25%)</title><rect x="554.7" y="547.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61 samples, 0.25%)</title><rect x="554.7" y="531.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (61 samples, 0.25%)</title><rect x="554.7" y="515.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (61 samples, 0.25%)</title><rect x="554.7" y="499.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.accept (61 samples, 0.25%)</title><rect x="554.7" y="483.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (61 samples, 0.25%)</title><rect x="554.7" y="467.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (61 samples, 0.25%)</title><rect x="554.7" y="451.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61 samples, 0.25%)</title><rect x="554.7" y="435.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (61 samples, 0.25%)</title><rect x="554.7" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.apply (61 samples, 0.25%)</title><rect x="554.7" y="403.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (61 samples, 0.25%)</title><rect x="554.7" y="387.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (61 samples, 0.25%)</title><rect x="554.7" y="371.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="557.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (16 samples, 0.07%)</title><rect x="557.7" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (16 samples, 0.07%)</title><rect x="557.7" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16 samples, 0.07%)</title><rect x="557.7" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16 samples, 0.07%)</title><rect x="557.7" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.04%)</title><rect x="557.7" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.04%)</title><rect x="557.7" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.04%)</title><rect x="557.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.04%)</title><rect x="557.7" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.04%)</title><rect x="557.7" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (9 samples, 0.04%)</title><rect x="557.7" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.04%)</title><rect x="557.7" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9 samples, 0.04%)</title><rect x="557.7" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.04%)</title><rect x="557.7" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9 samples, 0.04%)</title><rect x="557.7" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (9 samples, 0.04%)</title><rect x="557.7" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (9 samples, 0.04%)</title><rect x="557.7" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (9 samples, 0.04%)</title><rect x="557.7" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (6 samples, 0.02%)</title><rect x="557.8" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (6 samples, 0.02%)</title><rect x="557.8" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (7 samples, 0.03%)</title><rect x="558.1" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.run (5,447 samples, 22.40%)</title><rect x="558.5" y="755.0" width="264.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.5" y="766.0">ru/mail/polis/service/rest/RestCont..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$asyncExecute$3 (5,447 samples, 22.40%)</title><rect x="558.5" y="739.0" width="264.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.5" y="750.0">ru/mail/polis/service/rest/RestCont..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$115/59933779.submit (4,682 samples, 19.26%)</title><rect x="558.5" y="723.0" width="227.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.5" y="734.0">ru/mail/polis/service/rest/Res..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$2 (4,682 samples, 19.26%)</title><rect x="558.5" y="707.0" width="227.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.5" y="718.0">ru/mail/polis/service/rest/Res..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.upsert (4,682 samples, 19.26%)</title><rect x="558.5" y="691.0" width="227.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.5" y="702.0">ru/mail/polis/service/rest/ser..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue (7 samples, 0.03%)</title><rect x="558.5" y="675.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="561.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1278628581.linkToTargetMethod (13 samples, 0.05%)</title><rect x="558.8" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="558.8" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$131/1648498957.get$Lambda (13 samples, 0.05%)</title><rect x="558.8" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.8" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$131 (13 samples, 0.05%)</title><rect x="558.8" y="627.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="561.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (248 samples, 1.02%)</title><rect x="559.5" y="675.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (248 samples, 1.02%)</title><rect x="559.5" y="659.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.5" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (248 samples, 1.02%)</title><rect x="559.5" y="643.0" width="12.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="562.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,553 samples, 10.50%)</title><rect x="571.5" y="675.0" width="123.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.5" y="686.0">java/util/Array..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$131/1648498957.accept (2,553 samples, 10.50%)</title><rect x="571.5" y="659.0" width="123.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.5" y="670.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$upsert$3 (2,553 samples, 10.50%)</title><rect x="571.5" y="643.0" width="123.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.5" y="654.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="571.5" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="571.5" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$167/1215328857.get$Lambda (10 samples, 0.04%)</title><rect x="571.5" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.5" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$167 (10 samples, 0.04%)</title><rect x="571.5" y="579.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="574.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (15 samples, 0.06%)</title><rect x="572.0" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (15 samples, 0.06%)</title><rect x="572.0" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (15 samples, 0.06%)</title><rect x="572.0" y="595.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="575.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.upsert (1,972 samples, 8.11%)</title><rect x="572.7" y="627.0" width="95.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.7" y="638.0">ru/mail/pol..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (253 samples, 1.04%)</title><rect x="572.7" y="611.0" width="12.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (21 samples, 0.09%)</title><rect x="572.7" y="595.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="575.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (232 samples, 0.95%)</title><rect x="573.7" y="595.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (226 samples, 0.93%)</title><rect x="573.7" y="579.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (226 samples, 0.93%)</title><rect x="573.7" y="563.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.7" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (7 samples, 0.03%)</title><rect x="573.7" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="576.7" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="574.1" y="547.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="577.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.11%)</title><rect x="574.8" y="547.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.04%)</title><rect x="576.1" y="547.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="579.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="576.5" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="576.5" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (23 samples, 0.09%)</title><rect x="576.5" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (23 samples, 0.09%)</title><rect x="576.5" y="499.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="579.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (16 samples, 0.07%)</title><rect x="577.7" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.7" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (16 samples, 0.07%)</title><rect x="577.7" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="580.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (102 samples, 0.42%)</title><rect x="578.4" y="547.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (102 samples, 0.42%)</title><rect x="578.4" y="531.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (102 samples, 0.42%)</title><rect x="578.4" y="515.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="578.4" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="578.4" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (14 samples, 0.06%)</title><rect x="578.4" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.4" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (14 samples, 0.06%)</title><rect x="578.4" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="581.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (34 samples, 0.14%)</title><rect x="579.1" y="499.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (34 samples, 0.14%)</title><rect x="579.1" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (34 samples, 0.14%)</title><rect x="579.1" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.14%)</title><rect x="579.1" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.14%)</title><rect x="579.1" y="435.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.14%)</title><rect x="579.1" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.14%)</title><rect x="579.1" y="403.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.14%)</title><rect x="579.1" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.14%)</title><rect x="579.1" y="371.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="582.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (27 samples, 0.11%)</title><rect x="580.8" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.8" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (27 samples, 0.11%)</title><rect x="580.8" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.06%)</title><rect x="580.8" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="580.8" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="580.8" y="435.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="583.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.05%)</title><rect x="581.4" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.05%)</title><rect x="581.4" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="584.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (27 samples, 0.11%)</title><rect x="582.1" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (27 samples, 0.11%)</title><rect x="582.1" y="483.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="585.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.11%)</title><rect x="583.4" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.11%)</title><rect x="583.4" y="531.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="586.4" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (6 samples, 0.02%)</title><rect x="584.7" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.7" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (6 samples, 0.02%)</title><rect x="584.7" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.7" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (6 samples, 0.02%)</title><rect x="584.7" y="547.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="587.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.builder (429 samples, 1.76%)</title><rect x="585.0" y="611.0" width="20.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.22%)</title><rect x="585.0" y="595.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (53 samples, 0.22%)</title><rect x="585.0" y="579.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (53 samples, 0.22%)</title><rect x="585.0" y="563.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.22%)</title><rect x="585.0" y="547.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (17 samples, 0.07%)</title><rect x="585.0" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="585.0" y="515.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="588.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (36 samples, 0.15%)</title><rect x="585.8" y="531.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (36 samples, 0.15%)</title><rect x="585.8" y="515.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.8" y="526.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="585.8" y="499.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="588.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (251 samples, 1.03%)</title><rect x="587.6" y="595.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.6" y="606.0"></text>
</g>
<g>
<title>java.net.URI (55 samples, 0.23%)</title><rect x="587.6" y="579.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="590.6" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (196 samples, 0.81%)</title><rect x="590.2" y="579.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.2" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (11 samples, 0.05%)</title><rect x="590.2" y="563.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="593.2" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (185 samples, 0.76%)</title><rect x="590.8" y="563.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.13%)</title><rect x="590.8" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.13%)</title><rect x="590.8" y="531.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="590.8" y="515.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="593.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.07%)</title><rect x="591.4" y="515.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.4" y="526.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="591.4" y="499.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="594.4" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (153 samples, 0.63%)</title><rect x="592.3" y="547.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (83 samples, 0.34%)</title><rect x="592.3" y="531.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (83 samples, 0.34%)</title><rect x="592.3" y="515.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.16%)</title><rect x="592.3" y="499.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="595.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.18%)</title><rect x="594.2" y="499.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.2" y="510.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.18%)</title><rect x="594.2" y="483.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="597.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (70 samples, 0.29%)</title><rect x="596.3" y="531.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.14%)</title><rect x="596.3" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.14%)</title><rect x="596.3" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="596.3" y="483.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.3" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.09%)</title><rect x="596.9" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.9" y="494.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="596.9" y="467.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="599.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (37 samples, 0.15%)</title><rect x="597.9" y="515.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.9" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (37 samples, 0.15%)</title><rect x="597.9" y="499.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.15%)</title><rect x="597.9" y="483.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.15%)</title><rect x="597.9" y="467.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="597.9" y="451.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="600.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.08%)</title><rect x="598.8" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.8" y="462.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.08%)</title><rect x="598.8" y="435.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="601.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (63 samples, 0.26%)</title><rect x="599.7" y="595.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (25 samples, 0.10%)</title><rect x="599.7" y="579.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="602.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (38 samples, 0.16%)</title><rect x="600.9" y="579.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (11 samples, 0.05%)</title><rect x="600.9" y="563.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="603.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (27 samples, 0.11%)</title><rect x="601.5" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.11%)</title><rect x="601.5" y="547.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="604.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (55 samples, 0.23%)</title><rect x="602.8" y="595.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (55 samples, 0.23%)</title><rect x="602.8" y="579.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (55 samples, 0.23%)</title><rect x="602.8" y="563.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.8" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (55 samples, 0.23%)</title><rect x="602.8" y="547.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.09%)</title><rect x="602.8" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (21 samples, 0.09%)</title><rect x="602.8" y="515.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="605.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$135/1156412280.apply (34 samples, 0.14%)</title><rect x="603.8" y="531.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (34 samples, 0.14%)</title><rect x="603.8" y="515.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.8" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="603.8" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="606.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (19 samples, 0.08%)</title><rect x="604.5" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.08%)</title><rect x="604.5" y="483.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="607.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.version (7 samples, 0.03%)</title><rect x="605.5" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.version (7 samples, 0.03%)</title><rect x="605.5" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.5" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.03%)</title><rect x="605.5" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.5" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.03%)</title><rect x="605.5" y="547.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="608.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.ofBytes (18 samples, 0.07%)</title><rect x="605.8" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (18 samples, 0.07%)</title><rect x="605.8" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (18 samples, 0.07%)</title><rect x="605.8" y="579.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="608.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.sendAsyncRequest (1,272 samples, 5.23%)</title><rect x="606.7" y="611.0" width="61.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.7" y="622.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (52 samples, 0.21%)</title><rect x="606.7" y="595.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (52 samples, 0.21%)</title><rect x="606.7" y="579.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.09%)</title><rect x="606.7" y="563.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="609.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="607.8" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.12%)</title><rect x="607.8" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.12%)</title><rect x="607.8" y="531.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="610.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,220 samples, 5.02%)</title><rect x="609.2" y="595.0" width="59.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.2" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,220 samples, 5.02%)</title><rect x="609.2" y="579.0" width="59.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.2" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,220 samples, 5.02%)</title><rect x="609.2" y="563.0" width="59.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.2" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,220 samples, 5.02%)</title><rect x="609.2" y="547.0" width="59.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.2" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="609.2" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="609.2" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$164/1050524402.get$Lambda (12 samples, 0.05%)</title><rect x="609.2" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$164 (12 samples, 0.05%)</title><rect x="609.2" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="612.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (45 samples, 0.19%)</title><rect x="609.8" y="531.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (45 samples, 0.19%)</title><rect x="609.8" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.11%)</title><rect x="609.8" y="499.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="611.0" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="611.0" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="611.0" y="467.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="614.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (34 samples, 0.14%)</title><rect x="612.0" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (34 samples, 0.14%)</title><rect x="612.0" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.05%)</title><rect x="612.0" y="499.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="615.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="612.5" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.09%)</title><rect x="612.5" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="612.5" y="467.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="615.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (33 samples, 0.14%)</title><rect x="613.6" y="531.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="616.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (55 samples, 0.23%)</title><rect x="615.2" y="531.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="618.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (611 samples, 2.51%)</title><rect x="617.9" y="531.0" width="29.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.9" y="542.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (67 samples, 0.28%)</title><rect x="617.9" y="515.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (47 samples, 0.19%)</title><rect x="617.9" y="499.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.9" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (20 samples, 0.08%)</title><rect x="617.9" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (20 samples, 0.08%)</title><rect x="617.9" y="467.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="620.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (27 samples, 0.11%)</title><rect x="618.9" y="483.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.9" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (27 samples, 0.11%)</title><rect x="618.9" y="467.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="621.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (20 samples, 0.08%)</title><rect x="620.2" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.08%)</title><rect x="620.2" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.08%)</title><rect x="620.2" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (20 samples, 0.08%)</title><rect x="620.2" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.2" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (20 samples, 0.08%)</title><rect x="620.2" y="435.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="623.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (251 samples, 1.03%)</title><rect x="621.1" y="515.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (251 samples, 1.03%)</title><rect x="621.1" y="499.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.1" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (6 samples, 0.02%)</title><rect x="621.1" y="483.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="624.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="621.4" y="483.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="624.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.09%)</title><rect x="622.0" y="483.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="625.0" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.04%)</title><rect x="623.1" y="483.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="626.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.09%)</title><rect x="623.5" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="623.5" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (22 samples, 0.09%)</title><rect x="623.5" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.5" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (22 samples, 0.09%)</title><rect x="623.5" y="435.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="626.5" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (121 samples, 0.50%)</title><rect x="624.6" y="483.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (121 samples, 0.50%)</title><rect x="624.6" y="467.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (121 samples, 0.50%)</title><rect x="624.6" y="451.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (121 samples, 0.50%)</title><rect x="624.6" y="435.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (59 samples, 0.24%)</title><rect x="624.6" y="419.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (49 samples, 0.20%)</title><rect x="624.6" y="403.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (49 samples, 0.20%)</title><rect x="624.6" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.20%)</title><rect x="624.6" y="371.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.20%)</title><rect x="624.6" y="355.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.20%)</title><rect x="624.6" y="339.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.20%)</title><rect x="624.6" y="323.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.20%)</title><rect x="624.6" y="307.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.20%)</title><rect x="624.6" y="291.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="627.6" y="302.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (10 samples, 0.04%)</title><rect x="627.0" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.0" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (10 samples, 0.04%)</title><rect x="627.0" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="630.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="627.4" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="627.4" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (16 samples, 0.07%)</title><rect x="627.4" y="387.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (16 samples, 0.07%)</title><rect x="627.4" y="371.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="630.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (26 samples, 0.11%)</title><rect x="628.2" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.2" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (26 samples, 0.11%)</title><rect x="628.2" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.06%)</title><rect x="628.2" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="628.2" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="628.2" y="355.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="631.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (12 samples, 0.05%)</title><rect x="628.9" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (12 samples, 0.05%)</title><rect x="628.9" y="371.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="631.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (20 samples, 0.08%)</title><rect x="629.5" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (20 samples, 0.08%)</title><rect x="629.5" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="632.5" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (23 samples, 0.09%)</title><rect x="630.5" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.5" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (23 samples, 0.09%)</title><rect x="630.5" y="467.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="633.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (36 samples, 0.15%)</title><rect x="631.6" y="483.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (36 samples, 0.15%)</title><rect x="631.6" y="467.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="634.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (6 samples, 0.02%)</title><rect x="633.3" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="636.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (211 samples, 0.87%)</title><rect x="633.6" y="515.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.6" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (211 samples, 0.87%)</title><rect x="633.6" y="499.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.6" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (194 samples, 0.80%)</title><rect x="633.6" y="483.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.6" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (194 samples, 0.80%)</title><rect x="633.6" y="467.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.6" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (194 samples, 0.80%)</title><rect x="633.6" y="451.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.6" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (35 samples, 0.14%)</title><rect x="633.6" y="435.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="636.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (49 samples, 0.20%)</title><rect x="635.3" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (49 samples, 0.20%)</title><rect x="635.3" y="419.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.3" y="430.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.20%)</title><rect x="635.3" y="403.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="638.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (110 samples, 0.45%)</title><rect x="637.7" y="435.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (110 samples, 0.45%)</title><rect x="637.7" y="419.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.23%)</title><rect x="637.7" y="403.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="640.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.23%)</title><rect x="640.4" y="403.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.4" y="414.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.23%)</title><rect x="640.4" y="387.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="643.4" y="398.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (17 samples, 0.07%)</title><rect x="643.0" y="483.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="646.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (29 samples, 0.12%)</title><rect x="643.9" y="515.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.12%)</title><rect x="643.9" y="499.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="646.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (47 samples, 0.19%)</title><rect x="645.3" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.3" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.07%)</title><rect x="645.3" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="648.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.02%)</title><rect x="646.1" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.02%)</title><rect x="646.1" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="649.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (24 samples, 0.10%)</title><rect x="646.4" y="499.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (24 samples, 0.10%)</title><rect x="646.4" y="483.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="649.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (271 samples, 1.11%)</title><rect x="647.5" y="531.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.05%)</title><rect x="647.5" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="650.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (38 samples, 0.16%)</title><rect x="648.2" y="515.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="651.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (7 samples, 0.03%)</title><rect x="650.0" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (7 samples, 0.03%)</title><rect x="650.0" y="499.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="653.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (213 samples, 0.88%)</title><rect x="650.4" y="515.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (213 samples, 0.88%)</title><rect x="650.4" y="499.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Class[] (16 samples, 0.07%)</title><rect x="650.4" y="483.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="653.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.07%)</title><rect x="651.1" y="483.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (20 samples, 0.08%)</title><rect x="652.0" y="483.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="655.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (100 samples, 0.41%)</title><rect x="653.0" y="483.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (100 samples, 0.41%)</title><rect x="653.0" y="467.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (100 samples, 0.41%)</title><rect x="653.0" y="451.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.0" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (100 samples, 0.41%)</title><rect x="653.0" y="435.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.0" y="446.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (100 samples, 0.41%)</title><rect x="653.0" y="419.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="656.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (32 samples, 0.13%)</title><rect x="657.8" y="483.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (32 samples, 0.13%)</title><rect x="657.8" y="467.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (13 samples, 0.05%)</title><rect x="657.8" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (13 samples, 0.05%)</title><rect x="657.8" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="660.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (19 samples, 0.08%)</title><rect x="658.5" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (19 samples, 0.08%)</title><rect x="658.5" y="435.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="661.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (27 samples, 0.11%)</title><rect x="659.4" y="483.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (27 samples, 0.11%)</title><rect x="659.4" y="467.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.4" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.11%)</title><rect x="659.4" y="451.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="662.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (159 samples, 0.65%)</title><rect x="660.7" y="531.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (36 samples, 0.15%)</title><rect x="660.7" y="515.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (15 samples, 0.06%)</title><rect x="660.7" y="499.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="663.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.09%)</title><rect x="661.4" y="499.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (20 samples, 0.08%)</title><rect x="661.4" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (20 samples, 0.08%)</title><rect x="661.4" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (20 samples, 0.08%)</title><rect x="661.4" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (20 samples, 0.08%)</title><rect x="661.4" y="435.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="664.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.09%)</title><rect x="662.4" y="515.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="665.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (101 samples, 0.42%)</title><rect x="663.5" y="515.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="663.5" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="663.5" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/9819169.get$Lambda (6 samples, 0.02%)</title><rect x="663.5" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$152 (6 samples, 0.02%)</title><rect x="663.5" y="451.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="666.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.get$Lambda (8 samples, 0.03%)</title><rect x="663.8" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$158 (8 samples, 0.03%)</title><rect x="663.8" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="666.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (87 samples, 0.36%)</title><rect x="664.2" y="499.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (87 samples, 0.36%)</title><rect x="664.2" y="483.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (49 samples, 0.20%)</title><rect x="664.2" y="467.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="667.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.16%)</title><rect x="666.6" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.16%)</title><rect x="666.6" y="451.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.16%)</title><rect x="666.6" y="435.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="669.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.handleLocal (25 samples, 0.10%)</title><rect x="668.4" y="627.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (25 samples, 0.10%)</title><rect x="668.4" y="611.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (25 samples, 0.10%)</title><rect x="668.4" y="595.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (9 samples, 0.04%)</title><rect x="668.6" y="579.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="671.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.05%)</title><rect x="669.0" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.05%)</title><rect x="669.0" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (12 samples, 0.05%)</title><rect x="669.0" y="547.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="672.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (393 samples, 1.62%)</title><rect x="669.6" y="627.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (393 samples, 1.62%)</title><rect x="669.6" y="611.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (393 samples, 1.62%)</title><rect x="669.6" y="595.0" width="19.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.6" y="606.0"></text>
</g>
<g>
<title>java/net/URL.toString (393 samples, 1.62%)</title><rect x="669.6" y="579.0" width="19.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.6" y="590.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (393 samples, 1.62%)</title><rect x="669.6" y="563.0" width="19.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.6" y="574.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (393 samples, 1.62%)</title><rect x="669.6" y="547.0" width="19.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.6" y="558.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.19%)</title><rect x="669.6" y="531.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="672.6" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (51 samples, 0.21%)</title><rect x="671.9" y="531.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="674.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.13%)</title><rect x="674.3" y="531.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="677.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (54 samples, 0.22%)</title><rect x="675.8" y="531.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.8" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (54 samples, 0.22%)</title><rect x="675.8" y="515.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.8" y="526.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.22%)</title><rect x="675.8" y="499.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="678.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (89 samples, 0.37%)</title><rect x="678.5" y="531.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.5" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (89 samples, 0.37%)</title><rect x="678.5" y="515.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.5" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (89 samples, 0.37%)</title><rect x="678.5" y="499.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.37%)</title><rect x="678.5" y="483.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.5" y="494.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.37%)</title><rect x="678.5" y="467.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="681.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (122 samples, 0.50%)</title><rect x="682.8" y="531.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (122 samples, 0.50%)</title><rect x="682.8" y="515.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.20%)</title><rect x="682.8" y="499.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="685.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.30%)</title><rect x="685.1" y="499.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.1" y="510.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.30%)</title><rect x="685.1" y="483.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="688.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (138 samples, 0.57%)</title><rect x="688.7" y="627.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.7" y="638.0"></text>
</g>
<g>
<title>java/net/URL.toString (138 samples, 0.57%)</title><rect x="688.7" y="611.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.7" y="622.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (138 samples, 0.57%)</title><rect x="688.7" y="595.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.7" y="606.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (138 samples, 0.57%)</title><rect x="688.7" y="579.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.7" y="590.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="688.7" y="563.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="691.7" y="574.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.07%)</title><rect x="689.6" y="563.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="692.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="690.4" y="563.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="693.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.05%)</title><rect x="691.0" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.05%)</title><rect x="691.0" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.0" y="558.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="691.0" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="694.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (44 samples, 0.18%)</title><rect x="691.6" y="563.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (44 samples, 0.18%)</title><rect x="691.6" y="547.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (44 samples, 0.18%)</title><rect x="691.6" y="531.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.18%)</title><rect x="691.6" y="515.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.6" y="526.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.18%)</title><rect x="691.6" y="499.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="694.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (34 samples, 0.14%)</title><rect x="693.7" y="563.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.14%)</title><rect x="693.7" y="547.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="693.7" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="696.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.11%)</title><rect x="694.1" y="531.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.1" y="542.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.11%)</title><rect x="694.1" y="515.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="697.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.&lt;init&gt; (7 samples, 0.03%)</title><rect x="695.4" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (7 samples, 0.03%)</title><rect x="695.4" y="659.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="698.4" y="670.0"></text>
</g>
<g>
<title>one.nio.http.Response (108 samples, 0.44%)</title><rect x="695.7" y="675.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="698.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (295 samples, 1.21%)</title><rect x="701.0" y="675.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.0" y="686.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.53%)</title><rect x="701.0" y="659.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="704.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (94 samples, 0.39%)</title><rect x="707.3" y="659.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="710.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.29%)</title><rect x="711.8" y="659.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="714.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (282 samples, 1.16%)</title><rect x="715.3" y="675.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (282 samples, 1.16%)</title><rect x="715.3" y="659.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (281 samples, 1.16%)</title><rect x="715.3" y="643.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.of (281 samples, 1.16%)</title><rect x="715.3" y="627.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (176 samples, 0.72%)</title><rect x="715.3" y="611.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.3" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (176 samples, 0.72%)</title><rect x="715.3" y="595.0" width="8.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="718.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (105 samples, 0.43%)</title><rect x="723.9" y="611.0" width="5.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="726.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.fromCompletableFuture (18 samples, 0.07%)</title><rect x="729.0" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (16 samples, 0.07%)</title><rect x="729.1" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (16 samples, 0.07%)</title><rect x="729.1" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (15 samples, 0.06%)</title><rect x="729.1" y="627.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.responseFuture (314 samples, 1.29%)</title><rect x="729.9" y="675.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (22 samples, 0.09%)</title><rect x="729.9" y="659.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (22 samples, 0.09%)</title><rect x="729.9" y="643.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (18 samples, 0.07%)</title><rect x="729.9" y="627.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="732.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.collapseFutures (290 samples, 1.19%)</title><rect x="731.0" y="659.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.0" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="731.0" y="643.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="734.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (9 samples, 0.04%)</title><rect x="731.6" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="734.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1401870099.linkToTargetMethod (11 samples, 0.05%)</title><rect x="732.0" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/557383628.invokeStatic (11 samples, 0.05%)</title><rect x="732.0" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.get$Lambda (11 samples, 0.05%)</title><rect x="732.0" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$168 (11 samples, 0.05%)</title><rect x="732.0" y="595.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="735.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEach (259 samples, 1.07%)</title><rect x="732.5" y="643.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEachFrom (259 samples, 1.07%)</title><rect x="732.5" y="627.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.accept (259 samples, 1.07%)</title><rect x="732.5" y="611.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$collapseFutures$2 (259 samples, 1.07%)</title><rect x="732.5" y="595.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (65 samples, 0.27%)</title><rect x="732.5" y="579.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (65 samples, 0.27%)</title><rect x="732.5" y="563.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (42 samples, 0.17%)</title><rect x="732.5" y="547.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="735.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.07%)</title><rect x="734.8" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.07%)</title><rect x="734.8" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.07%)</title><rect x="734.8" y="515.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="737.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (56 samples, 0.23%)</title><rect x="735.7" y="579.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (56 samples, 0.23%)</title><rect x="735.7" y="563.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (26 samples, 0.11%)</title><rect x="735.7" y="547.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="738.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.11%)</title><rect x="737.1" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.11%)</title><rect x="737.1" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.11%)</title><rect x="737.1" y="515.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="740.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (56 samples, 0.23%)</title><rect x="738.4" y="579.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.23%)</title><rect x="738.4" y="563.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.14%)</title><rect x="738.4" y="547.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="741.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="740.3" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.07%)</title><rect x="740.3" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.07%)</title><rect x="740.3" y="515.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="743.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.biConsumer (82 samples, 0.34%)</title><rect x="741.1" y="579.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (17 samples, 0.07%)</title><rect x="741.1" y="563.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="744.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1708024697.linkToTargetMethod (36 samples, 0.15%)</title><rect x="741.9" y="563.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/156204642.invokeStatic (36 samples, 0.15%)</title><rect x="741.9" y="547.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.get$Lambda (36 samples, 0.15%)</title><rect x="741.9" y="531.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.9" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$169 (36 samples, 0.15%)</title><rect x="741.9" y="515.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="744.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (29 samples, 0.12%)</title><rect x="743.7" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (29 samples, 0.12%)</title><rect x="743.7" y="547.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="746.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (556 samples, 2.29%)</title><rect x="745.1" y="675.0" width="27.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.1" y="686.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 0.15%)</title><rect x="745.5" y="659.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.spliterator (12 samples, 0.05%)</title><rect x="745.5" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.5" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (12 samples, 0.05%)</title><rect x="745.5" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.5" y="638.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (12 samples, 0.05%)</title><rect x="745.5" y="611.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="748.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (25 samples, 0.10%)</title><rect x="746.1" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.1" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (25 samples, 0.10%)</title><rect x="746.1" y="627.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="749.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toCollection (9 samples, 0.04%)</title><rect x="747.4" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (9 samples, 0.04%)</title><rect x="747.4" y="643.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="750.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (218 samples, 0.90%)</title><rect x="747.9" y="659.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (205 samples, 0.84%)</title><rect x="747.9" y="643.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (205 samples, 0.84%)</title><rect x="747.9" y="627.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (191 samples, 0.79%)</title><rect x="747.9" y="611.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (150 samples, 0.62%)</title><rect x="747.9" y="595.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (150 samples, 0.62%)</title><rect x="747.9" y="579.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.9" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (30 samples, 0.12%)</title><rect x="747.9" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.9" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (30 samples, 0.12%)</title><rect x="747.9" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.9" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (30 samples, 0.12%)</title><rect x="747.9" y="531.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.9" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (9 samples, 0.04%)</title><rect x="747.9" y="515.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="750.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (21 samples, 0.09%)</title><rect x="748.3" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (14 samples, 0.06%)</title><rect x="748.3" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (14 samples, 0.06%)</title><rect x="748.3" y="483.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="751.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (7 samples, 0.03%)</title><rect x="749.0" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (7 samples, 0.03%)</title><rect x="749.0" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="752.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (65 samples, 0.27%)</title><rect x="749.3" y="563.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.3" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (65 samples, 0.27%)</title><rect x="749.3" y="547.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (65 samples, 0.27%)</title><rect x="749.3" y="531.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (65 samples, 0.27%)</title><rect x="749.3" y="515.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (48 samples, 0.20%)</title><rect x="749.3" y="499.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (48 samples, 0.20%)</title><rect x="749.3" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (48 samples, 0.20%)</title><rect x="749.3" y="467.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 0.12%)</title><rect x="749.3" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.3" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 0.12%)</title><rect x="749.3" y="435.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="752.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (19 samples, 0.08%)</title><rect x="750.7" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.7" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (19 samples, 0.08%)</title><rect x="750.7" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="753.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (17 samples, 0.07%)</title><rect x="751.6" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.accept (17 samples, 0.07%)</title><rect x="751.6" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="751.6" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="751.6" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="751.6" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="751.6" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="751.6" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.07%)</title><rect x="751.6" y="387.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="754.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (32 samples, 0.13%)</title><rect x="752.5" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.begin (32 samples, 0.13%)</title><rect x="752.5" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (18 samples, 0.07%)</title><rect x="752.6" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (18 samples, 0.07%)</title><rect x="752.6" y="515.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="755.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.begin (12 samples, 0.05%)</title><rect x="753.4" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.begin (12 samples, 0.05%)</title><rect x="753.4" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.4" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.05%)</title><rect x="753.4" y="499.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="756.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (23 samples, 0.09%)</title><rect x="754.0" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (23 samples, 0.09%)</title><rect x="754.0" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (23 samples, 0.09%)</title><rect x="754.0" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (23 samples, 0.09%)</title><rect x="754.0" y="515.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (16 samples, 0.07%)</title><rect x="754.0" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/1543974463.accept (16 samples, 0.07%)</title><rect x="754.0" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.07%)</title><rect x="754.0" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.07%)</title><rect x="754.0" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.07%)</title><rect x="754.0" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.07%)</title><rect x="754.0" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.07%)</title><rect x="754.0" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.07%)</title><rect x="754.0" y="387.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="757.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (7 samples, 0.03%)</title><rect x="754.8" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$$Lambda$130/1907408684.get (7 samples, 0.03%)</title><rect x="754.8" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.8" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="754.8" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="757.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (41 samples, 0.17%)</title><rect x="755.1" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1.opWrapSink (13 samples, 0.05%)</title><rect x="755.1" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.DistinctOps$1$2 (13 samples, 0.05%)</title><rect x="755.1" y="563.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="758.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (9 samples, 0.04%)</title><rect x="755.8" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (9 samples, 0.04%)</title><rect x="755.8" y="563.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="758.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (13 samples, 0.05%)</title><rect x="756.2" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1$1 (13 samples, 0.05%)</title><rect x="756.2" y="563.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="759.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (6 samples, 0.02%)</title><rect x="756.8" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$RefSortingSink (6 samples, 0.02%)</title><rect x="756.8" y="563.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="759.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (14 samples, 0.06%)</title><rect x="757.1" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (14 samples, 0.06%)</title><rect x="757.1" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.1" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (14 samples, 0.06%)</title><rect x="757.1" y="579.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="760.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (13 samples, 0.05%)</title><rect x="757.8" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (13 samples, 0.05%)</title><rect x="757.8" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="760.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.distinct (21 samples, 0.09%)</title><rect x="758.4" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps.makeRef (21 samples, 0.09%)</title><rect x="758.4" y="643.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.4" y="654.0"></text>
</g>
<g>
<title>java.util.stream.DistinctOps$1 (21 samples, 0.09%)</title><rect x="758.4" y="627.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="761.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (24 samples, 0.10%)</title><rect x="759.5" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (24 samples, 0.10%)</title><rect x="759.5" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (24 samples, 0.10%)</title><rect x="759.5" y="627.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="762.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (31 samples, 0.13%)</title><rect x="760.6" y="659.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (31 samples, 0.13%)</title><rect x="760.6" y="643.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="763.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (15 samples, 0.06%)</title><rect x="762.1" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (15 samples, 0.06%)</title><rect x="762.1" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.1" y="654.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (15 samples, 0.06%)</title><rect x="762.1" y="627.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="765.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (190 samples, 0.78%)</title><rect x="762.9" y="659.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.02%)</title><rect x="762.9" y="643.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.9" y="654.0"></text>
</g>
<g>
<title>java.lang.Long (6 samples, 0.02%)</title><rect x="762.9" y="627.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="765.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.05%)</title><rect x="763.1" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.05%)</title><rect x="763.1" y="627.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="766.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (13 samples, 0.05%)</title><rect x="763.8" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (13 samples, 0.05%)</title><rect x="763.8" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (13 samples, 0.05%)</title><rect x="763.8" y="611.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="766.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (158 samples, 0.65%)</title><rect x="764.4" y="643.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.4" y="654.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="764.4" y="627.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="767.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.04%)</title><rect x="764.9" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.9" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="764.9" y="611.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="767.9" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (133 samples, 0.55%)</title><rect x="765.6" y="627.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.6" y="638.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (14 samples, 0.06%)</title><rect x="765.6" y="611.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="768.6" y="622.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (119 samples, 0.49%)</title><rect x="766.3" y="611.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.3" y="622.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (119 samples, 0.49%)</title><rect x="766.3" y="595.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.3" y="606.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (119 samples, 0.49%)</title><rect x="766.3" y="579.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.3" y="590.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (114 samples, 0.47%)</title><rect x="766.3" y="563.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.3" y="574.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (114 samples, 0.47%)</title><rect x="766.3" y="547.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (36 samples, 0.15%)</title><rect x="766.7" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (36 samples, 0.15%)</title><rect x="766.7" y="515.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.7" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (36 samples, 0.15%)</title><rect x="766.7" y="499.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (36 samples, 0.15%)</title><rect x="766.7" y="483.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.7" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (36 samples, 0.15%)</title><rect x="766.7" y="467.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="769.7" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (70 samples, 0.29%)</title><rect x="768.4" y="531.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (70 samples, 0.29%)</title><rect x="768.4" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor1.newInstance (70 samples, 0.29%)</title><rect x="768.4" y="499.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.4" y="510.0"></text>
</g>
<g>
<title>sun.security.provider.MD5 (14 samples, 0.06%)</title><rect x="768.4" y="483.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="771.4" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (56 samples, 0.23%)</title><rect x="769.1" y="483.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.1" y="494.0"></text>
</g>
<g>
<title>int[] (36 samples, 0.15%)</title><rect x="769.1" y="467.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="772.1" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (20 samples, 0.08%)</title><rect x="770.9" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.9" y="478.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.08%)</title><rect x="770.9" y="451.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="773.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.keyByteBuffer (281 samples, 1.16%)</title><rect x="772.1" y="675.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (197 samples, 0.81%)</title><rect x="772.1" y="659.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (197 samples, 0.81%)</title><rect x="772.1" y="643.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (197 samples, 0.81%)</title><rect x="772.1" y="627.0" width="9.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="775.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.getBytesFromKey (84 samples, 0.35%)</title><rect x="781.6" y="659.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (84 samples, 0.35%)</title><rect x="781.6" y="643.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (84 samples, 0.35%)</title><rect x="781.6" y="627.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (84 samples, 0.35%)</title><rect x="781.6" y="611.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.35%)</title><rect x="781.6" y="595.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.6" y="606.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.35%)</title><rect x="781.6" y="579.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="784.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (765 samples, 3.15%)</title><rect x="785.7" y="723.0" width="37.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.7" y="734.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (765 samples, 3.15%)</title><rect x="785.7" y="707.0" width="37.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.7" y="718.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (540 samples, 2.22%)</title><rect x="785.7" y="691.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.7" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (411 samples, 1.69%)</title><rect x="785.7" y="675.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (411 samples, 1.69%)</title><rect x="785.7" y="659.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.7" y="670.0"></text>
</g>
<g>
<title>byte[] (411 samples, 1.69%)</title><rect x="785.7" y="643.0" width="20.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="788.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (129 samples, 0.53%)</title><rect x="805.7" y="675.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (129 samples, 0.53%)</title><rect x="805.7" y="659.0" width="6.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="808.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (225 samples, 0.93%)</title><rect x="811.9" y="691.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (225 samples, 0.93%)</title><rect x="811.9" y="675.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (225 samples, 0.93%)</title><rect x="811.9" y="659.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.42%)</title><rect x="811.9" y="643.0" width="5.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="814.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (123 samples, 0.51%)</title><rect x="816.9" y="643.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.9" y="654.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.51%)</title><rect x="816.9" y="627.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="819.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,282 samples, 5.27%)</title><rect x="822.8" y="803.0" width="62.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.8" y="814.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,282 samples, 5.27%)</title><rect x="822.8" y="787.0" width="62.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.8" y="798.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,279 samples, 5.26%)</title><rect x="823.0" y="771.0" width="62.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.0" y="782.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,279 samples, 5.26%)</title><rect x="823.0" y="755.0" width="62.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.0" y="766.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,279 samples, 5.26%)</title><rect x="823.0" y="739.0" width="62.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.0" y="750.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,279 samples, 5.26%)</title><rect x="823.0" y="723.0" width="62.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.0" y="734.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (868 samples, 3.57%)</title><rect x="823.0" y="707.0" width="42.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.0" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (868 samples, 3.57%)</title><rect x="823.0" y="691.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.0" y="702.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$175/1215300405.apply (868 samples, 3.57%)</title><rect x="823.0" y="675.0" width="42.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.0" y="686.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$responseFuture$7 (868 samples, 3.57%)</title><rect x="823.0" y="659.0" width="42.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.0" y="670.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.createResponse (868 samples, 3.57%)</title><rect x="823.0" y="643.0" width="42.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.0" y="654.0">ru/m..</text>
</g>
<g>
<title>one.nio.http.Response (192 samples, 0.79%)</title><rect x="823.0" y="627.0" width="9.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="826.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (676 samples, 2.78%)</title><rect x="832.3" y="627.0" width="32.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.3" y="638.0">on..</text>
</g>
<g>
<title>byte[] (252 samples, 1.04%)</title><rect x="832.3" y="611.0" width="12.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="835.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (245 samples, 1.01%)</title><rect x="844.5" y="611.0" width="11.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="847.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (179 samples, 0.74%)</title><rect x="856.4" y="611.0" width="8.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="859.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (411 samples, 1.69%)</title><rect x="865.1" y="707.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (409 samples, 1.68%)</title><rect x="865.2" y="691.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.accept (409 samples, 1.68%)</title><rect x="865.2" y="675.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$biConsumer$3 (409 samples, 1.68%)</title><rect x="865.2" y="659.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (409 samples, 1.68%)</title><rect x="865.2" y="643.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (409 samples, 1.68%)</title><rect x="865.2" y="627.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (409 samples, 1.68%)</title><rect x="865.2" y="611.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (409 samples, 1.68%)</title><rect x="865.2" y="595.0" width="19.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (409 samples, 1.68%)</title><rect x="865.2" y="579.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.2" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (386 samples, 1.59%)</title><rect x="865.2" y="563.0" width="18.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="868.2" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.09%)</title><rect x="883.9" y="563.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="886.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (431 samples, 1.77%)</title><rect x="885.1" y="803.0" width="20.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="885.1" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="885.1" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$299/1124917692.get$Lambda (7 samples, 0.03%)</title><rect x="885.4" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$299 (7 samples, 0.03%)</title><rect x="885.4" y="739.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="888.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (8 samples, 0.03%)</title><rect x="885.7" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="885.7" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.get$Lambda (8 samples, 0.03%)</title><rect x="885.7" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$291 (8 samples, 0.03%)</title><rect x="885.7" y="739.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="888.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (89 samples, 0.37%)</title><rect x="886.1" y="787.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$292/2116813995.accept (74 samples, 0.30%)</title><rect x="886.1" y="771.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (74 samples, 0.30%)</title><rect x="886.1" y="755.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (74 samples, 0.30%)</title><rect x="886.1" y="739.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (74 samples, 0.30%)</title><rect x="886.1" y="723.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (74 samples, 0.30%)</title><rect x="886.1" y="707.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (74 samples, 0.30%)</title><rect x="886.1" y="691.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.30%)</title><rect x="886.1" y="675.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.30%)</title><rect x="886.1" y="659.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (74 samples, 0.30%)</title><rect x="886.1" y="643.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (74 samples, 0.30%)</title><rect x="886.1" y="627.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (74 samples, 0.30%)</title><rect x="886.1" y="611.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (74 samples, 0.30%)</title><rect x="886.1" y="595.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 0.07%)</title><rect x="886.1" y="579.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 0.07%)</title><rect x="886.1" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (17 samples, 0.07%)</title><rect x="886.1" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (6 samples, 0.02%)</title><rect x="886.1" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (6 samples, 0.02%)</title><rect x="886.1" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (6 samples, 0.02%)</title><rect x="886.1" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (6 samples, 0.02%)</title><rect x="886.1" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (6 samples, 0.02%)</title><rect x="886.1" y="467.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="889.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.05%)</title><rect x="886.4" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.05%)</title><rect x="886.4" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.05%)</title><rect x="886.4" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.05%)</title><rect x="886.4" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (11 samples, 0.05%)</title><rect x="886.4" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 0.05%)</title><rect x="886.4" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (11 samples, 0.05%)</title><rect x="886.4" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (11 samples, 0.05%)</title><rect x="886.4" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="889.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (50 samples, 0.21%)</title><rect x="887.3" y="579.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (27 samples, 0.11%)</title><rect x="887.3" y="563.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.07%)</title><rect x="887.3" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.07%)</title><rect x="887.3" y="531.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="890.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (9 samples, 0.04%)</title><rect x="888.2" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.2" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.04%)</title><rect x="888.2" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.2" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.04%)</title><rect x="888.2" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="891.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (23 samples, 0.09%)</title><rect x="888.6" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$199/66698263.get (23 samples, 0.09%)</title><rect x="888.6" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (23 samples, 0.09%)</title><rect x="888.6" y="531.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.09%)</title><rect x="888.6" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.09%)</title><rect x="888.6" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.6" y="510.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.09%)</title><rect x="888.6" y="483.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="891.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$300/869685903.accept (15 samples, 0.06%)</title><rect x="889.7" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (15 samples, 0.06%)</title><rect x="889.7" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.run (15 samples, 0.06%)</title><rect x="889.7" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (15 samples, 0.06%)</title><rect x="889.7" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (15 samples, 0.06%)</title><rect x="889.7" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (15 samples, 0.06%)</title><rect x="889.7" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (15 samples, 0.06%)</title><rect x="889.7" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.7" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (15 samples, 0.06%)</title><rect x="889.7" y="659.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="892.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (60 samples, 0.25%)</title><rect x="890.4" y="787.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="893.4" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (60 samples, 0.25%)</title><rect x="890.4" y="771.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="893.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (18 samples, 0.07%)</title><rect x="893.4" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.04%)</title><rect x="893.4" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.04%)</title><rect x="893.4" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.04%)</title><rect x="893.4" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.04%)</title><rect x="893.4" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.04%)</title><rect x="893.4" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (10 samples, 0.04%)</title><rect x="893.4" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (10 samples, 0.04%)</title><rect x="893.4" y="675.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="896.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (8 samples, 0.03%)</title><rect x="893.8" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.8" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (8 samples, 0.03%)</title><rect x="893.8" y="755.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="896.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (80 samples, 0.33%)</title><rect x="894.2" y="787.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$207/2005313997.run (46 samples, 0.19%)</title><rect x="894.2" y="771.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (46 samples, 0.19%)</title><rect x="894.2" y="755.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.19%)</title><rect x="894.2" y="739.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.19%)</title><rect x="894.2" y="723.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (46 samples, 0.19%)</title><rect x="894.2" y="707.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (46 samples, 0.19%)</title><rect x="894.2" y="691.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (46 samples, 0.19%)</title><rect x="894.2" y="675.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (46 samples, 0.19%)</title><rect x="894.2" y="659.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (45 samples, 0.19%)</title><rect x="894.2" y="643.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (45 samples, 0.19%)</title><rect x="894.2" y="627.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (26 samples, 0.11%)</title><rect x="894.2" y="611.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (26 samples, 0.11%)</title><rect x="894.2" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (26 samples, 0.11%)</title><rect x="894.2" y="579.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (22 samples, 0.09%)</title><rect x="894.2" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (22 samples, 0.09%)</title><rect x="894.2" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.09%)</title><rect x="894.2" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.09%)</title><rect x="894.2" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.09%)</title><rect x="894.2" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.2" y="510.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.09%)</title><rect x="894.2" y="483.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="897.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (19 samples, 0.08%)</title><rect x="895.5" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="895.5" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="895.5" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.08%)</title><rect x="895.5" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.08%)</title><rect x="895.5" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (19 samples, 0.08%)</title><rect x="895.5" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (19 samples, 0.08%)</title><rect x="895.5" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (19 samples, 0.08%)</title><rect x="895.5" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (19 samples, 0.08%)</title><rect x="895.5" y="483.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="898.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1166291669.run (34 samples, 0.14%)</title><rect x="896.5" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (34 samples, 0.14%)</title><rect x="896.5" y="755.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="896.5" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="896.5" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.get$Lambda (13 samples, 0.05%)</title><rect x="896.5" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$303 (13 samples, 0.05%)</title><rect x="896.5" y="691.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="899.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.09%)</title><rect x="897.1" y="739.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.09%)</title><rect x="897.1" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (21 samples, 0.09%)</title><rect x="897.1" y="707.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (21 samples, 0.09%)</title><rect x="897.1" y="691.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (21 samples, 0.09%)</title><rect x="897.1" y="675.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (21 samples, 0.09%)</title><rect x="897.1" y="659.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (67 samples, 0.28%)</title><rect x="898.1" y="787.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.08%)</title><rect x="898.1" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (19 samples, 0.08%)</title><rect x="898.1" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.08%)</title><rect x="898.1" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.08%)</title><rect x="898.1" y="723.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.1" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.08%)</title><rect x="898.1" y="707.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="901.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (48 samples, 0.20%)</title><rect x="899.0" y="771.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="899.0" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="899.0" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$347/1906610528.get$Lambda (10 samples, 0.04%)</title><rect x="899.0" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$347 (10 samples, 0.04%)</title><rect x="899.0" y="707.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="902.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (38 samples, 0.16%)</title><rect x="899.5" y="755.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.5" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.06%)</title><rect x="899.5" y="739.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="902.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (23 samples, 0.09%)</title><rect x="900.3" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.3" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (23 samples, 0.09%)</title><rect x="900.3" y="723.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.3" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (23 samples, 0.09%)</title><rect x="900.3" y="707.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="903.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (63 samples, 0.26%)</title><rect x="901.4" y="787.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.4" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (30 samples, 0.12%)</title><rect x="901.6" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (13 samples, 0.05%)</title><rect x="901.6" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (13 samples, 0.05%)</title><rect x="901.6" y="739.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="904.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (17 samples, 0.07%)</title><rect x="902.2" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.2" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (17 samples, 0.07%)</title><rect x="902.2" y="739.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="905.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (28 samples, 0.12%)</title><rect x="903.1" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (28 samples, 0.12%)</title><rect x="903.1" y="755.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="906.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (17 samples, 0.07%)</title><rect x="904.4" y="787.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (17 samples, 0.07%)</title><rect x="904.4" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (17 samples, 0.07%)</title><rect x="904.4" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (17 samples, 0.07%)</title><rect x="904.4" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.03%)</title><rect x="904.4" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.03%)</title><rect x="904.4" y="707.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="907.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.04%)</title><rect x="904.8" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.04%)</title><rect x="904.8" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.04%)</title><rect x="904.8" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.04%)</title><rect x="904.8" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.04%)</title><rect x="904.8" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.8" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.04%)</title><rect x="904.8" y="643.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="907.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (10 samples, 0.04%)</title><rect x="905.5" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (10 samples, 0.04%)</title><rect x="905.5" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (10 samples, 0.04%)</title><rect x="905.5" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.5" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (10 samples, 0.04%)</title><rect x="905.5" y="739.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="908.5" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,850 samples, 24.06%)</title><rect x="906.1" y="803.0" width="283.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.1" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (197 samples, 0.81%)</title><rect x="906.1" y="787.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (197 samples, 0.81%)</title><rect x="906.1" y="771.0" width="9.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="909.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,653 samples, 23.25%)</title><rect x="915.6" y="787.0" width="274.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.6" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,653 samples, 23.25%)</title><rect x="915.6" y="771.0" width="274.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.6" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,653 samples, 23.25%)</title><rect x="915.6" y="755.0" width="274.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.6" y="766.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,389 samples, 5.71%)</title><rect x="915.6" y="739.0" width="67.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.6" y="750.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,389 samples, 5.71%)</title><rect x="915.6" y="723.0" width="67.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.6" y="734.0">one/nio..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1,194 samples, 4.91%)</title><rect x="915.6" y="707.0" width="58.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.6" y="718.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (278 samples, 1.14%)</title><rect x="915.6" y="691.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (278 samples, 1.14%)</title><rect x="915.6" y="675.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (278 samples, 1.14%)</title><rect x="915.6" y="659.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.63%)</title><rect x="915.6" y="643.0" width="7.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="918.6" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (126 samples, 0.52%)</title><rect x="923.0" y="643.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.0" y="654.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.52%)</title><rect x="923.0" y="627.0" width="6.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="926.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.entity (916 samples, 3.77%)</title><rect x="929.1" y="691.0" width="44.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.1" y="702.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1933348758.linkToTargetMethod (156 samples, 0.64%)</title><rect x="929.1" y="675.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/575276969.invokeStatic (156 samples, 0.64%)</title><rect x="929.1" y="659.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$115/59933779.get$Lambda (156 samples, 0.64%)</title><rect x="929.1" y="643.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$115 (156 samples, 0.64%)</title><rect x="929.1" y="627.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="932.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (88 samples, 0.36%)</title><rect x="936.7" y="675.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="939.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.36%)</title><rect x="936.7" y="659.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.36%)</title><rect x="936.7" y="643.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="939.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.21%)</title><rect x="936.7" y="627.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="939.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.15%)</title><rect x="939.2" y="627.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.2" y="638.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.15%)</title><rect x="939.2" y="611.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="942.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$RF.of (465 samples, 1.91%)</title><rect x="941.0" y="675.0" width="22.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.0" y="686.0">r..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (54 samples, 0.22%)</title><rect x="941.0" y="659.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="944.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (26 samples, 0.11%)</title><rect x="941.0" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.0" y="654.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (26 samples, 0.11%)</title><rect x="941.0" y="627.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="944.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (28 samples, 0.12%)</title><rect x="942.2" y="643.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.2" y="654.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (28 samples, 0.12%)</title><rect x="942.2" y="627.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="945.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (381 samples, 1.57%)</title><rect x="943.6" y="659.0" width="18.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (143 samples, 0.59%)</title><rect x="943.6" y="643.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (143 samples, 0.59%)</title><rect x="943.6" y="627.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (143 samples, 0.59%)</title><rect x="943.6" y="611.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (143 samples, 0.59%)</title><rect x="943.6" y="595.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (143 samples, 0.59%)</title><rect x="943.6" y="579.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="946.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (143 samples, 0.59%)</title><rect x="943.6" y="563.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.59%)</title><rect x="943.6" y="547.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.33%)</title><rect x="943.6" y="531.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="946.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.26%)</title><rect x="947.5" y="531.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.5" y="542.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.26%)</title><rect x="947.5" y="515.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="950.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (138 samples, 0.57%)</title><rect x="950.5" y="643.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (138 samples, 0.57%)</title><rect x="950.5" y="627.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (138 samples, 0.57%)</title><rect x="950.5" y="611.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.5" y="622.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (138 samples, 0.57%)</title><rect x="950.5" y="595.0" width="6.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="953.5" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.09%)</title><rect x="957.2" y="643.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="960.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (78 samples, 0.32%)</title><rect x="958.3" y="643.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (78 samples, 0.32%)</title><rect x="958.3" y="627.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (78 samples, 0.32%)</title><rect x="958.3" y="611.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (78 samples, 0.32%)</title><rect x="958.3" y="595.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (78 samples, 0.32%)</title><rect x="958.3" y="579.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.3" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.32%)</title><rect x="958.3" y="563.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="961.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$RF (30 samples, 0.12%)</title><rect x="962.1" y="659.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="965.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.asyncExecute (207 samples, 0.85%)</title><rect x="963.5" y="675.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.42%)</title><rect x="963.5" y="659.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.42%)</title><rect x="963.5" y="643.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.get$Lambda (101 samples, 0.42%)</title><rect x="963.5" y="627.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="966.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$120 (101 samples, 0.42%)</title><rect x="963.5" y="611.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="966.5" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (106 samples, 0.44%)</title><rect x="968.4" y="659.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (106 samples, 0.44%)</title><rect x="968.4" y="643.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.4" y="654.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (105 samples, 0.43%)</title><rect x="968.5" y="627.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (105 samples, 0.43%)</title><rect x="968.5" y="611.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (105 samples, 0.43%)</title><rect x="968.5" y="595.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (105 samples, 0.43%)</title><rect x="968.5" y="579.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (105 samples, 0.43%)</title><rect x="968.5" y="563.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (105 samples, 0.43%)</title><rect x="968.5" y="547.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="971.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (195 samples, 0.80%)</title><rect x="973.6" y="707.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (195 samples, 0.80%)</title><rect x="973.6" y="691.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (195 samples, 0.80%)</title><rect x="973.6" y="675.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.34%)</title><rect x="973.6" y="659.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="976.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.46%)</title><rect x="977.6" y="659.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.6" y="670.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.46%)</title><rect x="977.6" y="643.0" width="5.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="980.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,260 samples, 5.18%)</title><rect x="983.1" y="739.0" width="61.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.1" y="750.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (155 samples, 0.64%)</title><rect x="983.1" y="723.0" width="7.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="986.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (434 samples, 1.79%)</title><rect x="990.6" y="723.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.6" y="734.0">o..</text>
</g>
<g>
<title>java.lang.String[] (434 samples, 1.79%)</title><rect x="990.6" y="707.0" width="21.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="993.6" y="718.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (671 samples, 2.76%)</title><rect x="1011.6" y="723.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.6" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (671 samples, 2.76%)</title><rect x="1011.6" y="707.0" width="32.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.6" y="718.0">on..</text>
</g>
<g>
<title>char[] (389 samples, 1.60%)</title><rect x="1011.6" y="691.0" width="18.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1014.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.40%)</title><rect x="1030.5" y="691.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1033.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (184 samples, 0.76%)</title><rect x="1035.3" y="691.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (184 samples, 0.76%)</title><rect x="1035.3" y="675.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (184 samples, 0.76%)</title><rect x="1035.3" y="659.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.3" y="670.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.76%)</title><rect x="1035.3" y="643.0" width="8.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1038.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (130 samples, 0.53%)</title><rect x="1044.2" y="739.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.2" y="750.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.53%)</title><rect x="1044.2" y="723.0" width="6.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1047.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (195 samples, 0.80%)</title><rect x="1050.5" y="739.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (195 samples, 0.80%)</title><rect x="1050.5" y="723.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (195 samples, 0.80%)</title><rect x="1050.5" y="707.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1053.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.34%)</title><rect x="1050.5" y="691.0" width="4.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1053.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (113 samples, 0.46%)</title><rect x="1054.5" y="691.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.5" y="702.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.46%)</title><rect x="1054.5" y="675.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1057.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,679 samples, 11.02%)</title><rect x="1060.0" y="739.0" width="130.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.0" y="750.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,679 samples, 11.02%)</title><rect x="1060.0" y="723.0" width="130.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.0" y="734.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (1,361 samples, 5.60%)</title><rect x="1060.0" y="707.0" width="66.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1063.0" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (428 samples, 1.76%)</title><rect x="1126.0" y="707.0" width="20.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1129.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (890 samples, 3.66%)</title><rect x="1146.8" y="707.0" width="43.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.8" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (890 samples, 3.66%)</title><rect x="1146.8" y="691.0" width="43.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.8" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (890 samples, 3.66%)</title><rect x="1146.8" y="675.0" width="43.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.8" y="686.0">java..</text>
</g>
<g>
<title>byte[] (890 samples, 3.66%)</title><rect x="1146.8" y="659.0" width="43.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1149.8" y="670.0">byte[]</text>
</g>
</g>
</svg>
