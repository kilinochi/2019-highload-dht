<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2101"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2101"> </text>
<g id="frames">
<g>
<title>all (3,395 samples, 100.00%)</title><rect x="10.0" y="2067.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="2078.0">all</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="10.0" y="2051.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="2062.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="2051.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="2062.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="2035.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="2046.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="2019.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="2030.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="2003.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="2014.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1987.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="1998.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1971.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="1982.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1955.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="1966.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1939.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1923.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1907.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1891.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1875.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1859.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1843.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1827.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1811.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="1822.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1795.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1806.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1779.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1790.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1763.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="1774.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1747.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="1758.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1731.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.3" y="1742.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1715.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="1726.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1699.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.3" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1683.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="1694.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1667.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.3" y="1678.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1651.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.3" y="1662.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1635.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="1646.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1619.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="1630.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1603.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="1614.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1587.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1598.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1571.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.3" y="1582.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1555.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.3" y="1566.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1539.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="1550.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1523.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.3" y="1534.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1507.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="1518.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1491.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.3" y="1502.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1475.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="1486.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1459.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="1470.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1443.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1427.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.3" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1411.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1395.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1379.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.3" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1363.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1347.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1331.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.3" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1315.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1299.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1283.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1267.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1251.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1235.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.3" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1219.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1203.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1187.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1171.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1155.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.3" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1139.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1123.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1107.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.3" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1091.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1059.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.3" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1043.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.3" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="1011.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="995.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="963.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="947.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="931.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="915.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.3" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.3" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.3" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="563.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="574.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="547.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="558.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="531.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="542.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.3" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="483.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.3" y="478.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="451.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.3" y="462.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="435.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="446.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="419.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.3" y="430.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="403.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.3" y="414.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="387.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.3" y="398.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="371.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.3" y="382.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="355.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="366.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="339.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.3" y="350.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="323.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="334.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="307.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="318.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="291.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="302.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="275.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="286.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="259.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.3" y="270.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="243.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.3" y="254.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="227.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.3" y="238.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="211.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.3" y="222.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="195.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="206.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="179.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.3" y="190.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="163.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.3" y="174.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="147.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="158.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="131.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="142.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="115.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.3" y="126.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="99.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.3" y="110.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="83.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="94.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="67.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="78.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.03%)</title><rect x="10.3" y="51.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.3" y="62.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.321] (1 samples, 0.03%)</title><rect x="10.3" y="35.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.3" y="46.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="10.7" y="2051.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.7" y="2062.0"></text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (1 samples, 0.03%)</title><rect x="11.0" y="2051.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="2062.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="11.4" y="2051.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.4" y="2062.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="11.7" y="2051.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.7" y="2062.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.7" y="2035.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.7" y="2046.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="11.7" y="2019.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.7" y="2030.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="11.7" y="2003.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.7" y="2014.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="11.7" y="1987.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.7" y="1998.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="11.7" y="1971.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.7" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="12.1" y="1955.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.1" y="1966.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.21%)</title><rect x="12.4" y="2051.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.4" y="2062.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.15%)</title><rect x="13.1" y="2035.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.1" y="2046.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.15%)</title><rect x="13.1" y="2019.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.1" y="2030.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.15%)</title><rect x="13.1" y="2003.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.1" y="2014.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.15%)</title><rect x="13.1" y="1987.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.1" y="1998.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="13.1" y="1971.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.1" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="13.5" y="1971.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.5" y="1982.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.09%)</title><rect x="13.8" y="1971.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.8" y="1982.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="13.8" y="1955.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.8" y="1966.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="14.2" y="1955.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.2" y="1966.0"></text>
</g>
<g>
<title>G1AllocRegion::par_allocate(HeapRegion*, unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="14.2" y="1939.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.2" y="1950.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="14.5" y="1955.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="17.5" y="1966.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.18%)</title><rect x="14.9" y="2051.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.9" y="2062.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.15%)</title><rect x="14.9" y="2035.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.9" y="2046.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="14.9" y="2019.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.9" y="2030.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="15.2" y="2019.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.2" y="2030.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="15.2" y="2003.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.2" y="2014.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="15.6" y="2019.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.6" y="2030.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="15.6" y="2003.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.6" y="2014.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="15.9" y="2019.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="18.9" y="2030.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="16.3" y="2019.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="19.3" y="2030.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="16.6" y="2035.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="19.6" y="2046.0"></text>
</g>
<g>
<title>[not_walkable] (5 samples, 0.15%)</title><rect x="17.0" y="2051.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.0" y="2062.0"></text>
</g>
<g>
<title>[not_walkable_Java] (43 samples, 1.27%)</title><rect x="18.7" y="2051.0" width="14.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.7" y="2062.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="19.4" y="2035.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.4" y="2046.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.03%)</title><rect x="19.4" y="2019.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="22.4" y="2030.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.06%)</title><rect x="19.7" y="2035.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.7" y="2046.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="19.7" y="2019.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.7" y="2030.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="20.1" y="2019.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="23.1" y="2030.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="20.4" y="2035.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="23.4" y="2046.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.06%)</title><rect x="20.4" y="2019.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.4" y="2030.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="20.4" y="2003.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="23.4" y="2014.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="20.4" y="1987.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="23.4" y="1998.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="20.8" y="2003.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="23.8" y="2014.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="20.8" y="1987.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.8" y="1998.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.03%)</title><rect x="20.8" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="23.8" y="1982.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (3 samples, 0.09%)</title><rect x="21.1" y="2035.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.1" y="2046.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="21.1" y="2019.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="24.1" y="2030.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="21.8" y="2019.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.8" y="2030.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="22.2" y="2035.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.2" y="2046.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="22.2" y="2019.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.94%)</title><rect x="22.5" y="2035.0" width="11.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="25.5" y="2046.0"></text>
</g>
<g>
<title>clock_gettime (32 samples, 0.94%)</title><rect x="22.5" y="2019.0" width="11.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="25.5" y="2030.0"></text>
</g>
<g>
<title>[vdso] (29 samples, 0.85%)</title><rect x="23.6" y="2003.0" width="10.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="26.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1987.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="36.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1971.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="36.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1955.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="36.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1939.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="36.3" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1923.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="36.3" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1907.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="36.3" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="1891.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="36.3" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="33.6" y="2051.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="36.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="2035.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="36.6" y="2046.0"></text>
</g>
<g>
<title>__fxstat64 (2 samples, 0.06%)</title><rect x="33.6" y="2019.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="36.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="2003.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="36.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="1987.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="36.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="1971.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="36.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="1955.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="36.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="1939.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="36.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="33.6" y="1923.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="36.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1907.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="37.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1891.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="37.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1875.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="37.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1859.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="37.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1843.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1827.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="37.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1811.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="37.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.0" y="1795.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="37.0" y="1806.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.06%)</title><rect x="34.3" y="2035.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="37.3" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="34.3" y="2019.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="37.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="34.3" y="2003.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="37.3" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="34.3" y="1987.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="37.3" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="34.3" y="1971.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="37.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="34.3" y="1955.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="37.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="34.3" y="1939.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="37.3" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.7" y="1923.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="37.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.7" y="1907.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="37.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.7" y="1891.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="37.7" y="1902.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="35.0" y="2035.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="38.0" y="2046.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="35.0" y="2019.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="38.0" y="2030.0"></text>
</g>
<g>
<title>[unknown_Java] (67 samples, 1.97%)</title><rect x="35.4" y="2051.0" width="23.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="38.4" y="2062.0">[..</text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="54.1" y="2035.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="57.1" y="2046.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="54.5" y="2035.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="57.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="54.8" y="2035.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="57.8" y="2046.0"></text>
</g>
<g>
<title>SharedRuntime::ldiv(long, long) (1 samples, 0.03%)</title><rect x="54.8" y="2019.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="57.8" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.2" y="2019.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="58.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.2" y="2003.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="58.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.2" y="1987.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="58.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="55.2" y="1971.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="58.2" y="1982.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="55.5" y="2019.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="58.5" y="2030.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="55.9" y="2035.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="58.9" y="2046.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.09%)</title><rect x="56.6" y="2035.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="59.6" y="2046.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.09%)</title><rect x="57.6" y="2035.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="60.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="2019.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="60.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="2003.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="60.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="1987.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="60.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="1971.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="60.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="1955.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="60.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="1939.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="60.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="1923.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="60.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="57.6" y="1907.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="60.6" y="1918.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="58.7" y="2051.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="61.7" y="2062.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.18%)</title><rect x="59.0" y="2051.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="62.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="59.7" y="2035.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="62.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="59.7" y="2019.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="62.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="59.7" y="2003.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="62.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="59.7" y="1987.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="62.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="60.1" y="1971.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="63.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="60.1" y="1955.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="63.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="60.7" y="1939.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="63.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,628 samples, 47.95%)</title><rect x="61.1" y="2051.0" width="565.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.1" y="2062.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,628 samples, 47.95%)</title><rect x="61.1" y="2035.0" width="565.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.1" y="2046.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,628 samples, 47.95%)</title><rect x="61.1" y="2019.0" width="565.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.1" y="2030.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="62.8" y="2003.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="2003.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="66.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="1987.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="66.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="1971.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="66.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="1955.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="66.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="1939.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="66.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="1923.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="66.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="63.2" y="1907.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="66.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (207 samples, 6.10%)</title><rect x="63.5" y="2003.0" width="72.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.5" y="2014.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.09%)</title><rect x="63.5" y="1987.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.5" y="1998.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="63.5" y="1971.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="66.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/576940551.get (2 samples, 0.06%)</title><rect x="63.9" y="1971.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.9" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (204 samples, 6.01%)</title><rect x="64.6" y="1987.0" width="70.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.6" y="1998.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (202 samples, 5.95%)</title><rect x="64.9" y="1971.0" width="70.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.9" y="1982.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="64.9" y="1955.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="64.9" y="1939.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="64.9" y="1923.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/9819169.apply (201 samples, 5.92%)</title><rect x="65.3" y="1955.0" width="69.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.3" y="1966.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (200 samples, 5.89%)</title><rect x="65.6" y="1939.0" width="69.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.6" y="1950.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (200 samples, 5.89%)</title><rect x="65.6" y="1923.0" width="69.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.6" y="1934.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="65.6" y="1907.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="65.6" y="1891.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="65.6" y="1875.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.6" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="65.6" y="1859.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (191 samples, 5.63%)</title><rect x="66.0" y="1907.0" width="66.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.0" y="1918.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (191 samples, 5.63%)</title><rect x="66.0" y="1891.0" width="66.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.0" y="1902.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (191 samples, 5.63%)</title><rect x="66.0" y="1875.0" width="66.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.0" y="1886.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (88 samples, 2.59%)</title><rect x="66.3" y="1859.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.3" y="1870.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (88 samples, 2.59%)</title><rect x="66.3" y="1843.0" width="30.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.3" y="1854.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.03%)</title><rect x="66.3" y="1827.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="66.3" y="1811.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.3" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (87 samples, 2.56%)</title><rect x="66.7" y="1827.0" width="30.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.7" y="1838.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.apply (87 samples, 2.56%)</title><rect x="66.7" y="1811.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.7" y="1822.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (87 samples, 2.56%)</title><rect x="66.7" y="1795.0" width="30.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.7" y="1806.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (87 samples, 2.56%)</title><rect x="66.7" y="1779.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.7" y="1790.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.apply (87 samples, 2.56%)</title><rect x="66.7" y="1763.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.7" y="1774.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (86 samples, 2.53%)</title><rect x="67.0" y="1747.0" width="29.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.0" y="1758.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="67.0" y="1731.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.0" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="67.0" y="1715.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.0" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="67.0" y="1699.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.0" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="67.0" y="1683.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (85 samples, 2.50%)</title><rect x="67.3" y="1731.0" width="29.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.3" y="1742.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (77 samples, 2.27%)</title><rect x="67.7" y="1715.0" width="26.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.7" y="1726.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (77 samples, 2.27%)</title><rect x="67.7" y="1699.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.7" y="1710.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.apply (74 samples, 2.18%)</title><rect x="67.7" y="1683.0" width="25.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.7" y="1694.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (72 samples, 2.12%)</title><rect x="68.4" y="1667.0" width="25.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.4" y="1678.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.18%)</title><rect x="68.4" y="1651.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.18%)</title><rect x="68.4" y="1635.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.4" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.03%)</title><rect x="68.4" y="1619.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.4" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="68.4" y="1603.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.4" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="68.4" y="1587.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.4" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.03%)</title><rect x="68.4" y="1571.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="68.4" y="1555.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="68.4" y="1539.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.15%)</title><rect x="68.7" y="1619.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.15%)</title><rect x="68.7" y="1603.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.15%)</title><rect x="68.7" y="1587.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.15%)</title><rect x="68.7" y="1571.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.06%)</title><rect x="68.7" y="1555.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.03%)</title><rect x="68.7" y="1539.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="69.1" y="1539.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="69.1" y="1523.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="69.1" y="1507.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="69.1" y="1491.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.03%)</title><rect x="69.1" y="1475.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="69.1" y="1459.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="69.1" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.09%)</title><rect x="69.4" y="1555.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.09%)</title><rect x="69.4" y="1539.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.09%)</title><rect x="69.4" y="1523.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.09%)</title><rect x="69.4" y="1507.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.09%)</title><rect x="69.4" y="1491.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.09%)</title><rect x="69.4" y="1475.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$311/767570311.run (1 samples, 0.03%)</title><rect x="69.4" y="1459.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1 samples, 0.03%)</title><rect x="69.4" y="1443.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.03%)</title><rect x="69.4" y="1427.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.06%)</title><rect x="69.8" y="1459.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.8" y="1470.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.06%)</title><rect x="69.8" y="1443.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.8" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.06%)</title><rect x="69.8" y="1427.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.8" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.06%)</title><rect x="69.8" y="1411.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.8" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.06%)</title><rect x="69.8" y="1395.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.06%)</title><rect x="69.8" y="1379.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.8" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.06%)</title><rect x="69.8" y="1363.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1347.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="72.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1331.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="72.8" y="1342.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.06%)</title><rect x="69.8" y="1315.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="72.8" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1299.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="72.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1283.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="72.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1267.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="72.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1251.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="72.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1235.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="72.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1219.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="72.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1203.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="72.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1187.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="72.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1171.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="72.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1155.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="72.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1139.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="72.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1123.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="72.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1107.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="72.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1091.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="72.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1075.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="72.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="69.8" y="1059.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="72.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="1043.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="73.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="1027.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="73.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="1011.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="73.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="995.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="73.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="979.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="73.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="963.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="947.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="73.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="931.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="73.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="915.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="73.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="899.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="73.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="883.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="73.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="867.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="73.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="851.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="73.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="835.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="73.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="819.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="73.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="803.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="73.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="73.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="771.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="73.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="755.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="73.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="739.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="73.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="723.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="73.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="707.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="73.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="691.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="73.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="675.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="73.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="659.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="73.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="643.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="73.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.1" y="627.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="73.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (16 samples, 0.47%)</title><rect x="70.5" y="1651.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.5" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (16 samples, 0.47%)</title><rect x="70.5" y="1635.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.5" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.06%)</title><rect x="70.5" y="1619.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.5" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.06%)</title><rect x="70.5" y="1603.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.06%)</title><rect x="70.5" y="1587.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.06%)</title><rect x="70.5" y="1571.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.06%)</title><rect x="70.5" y="1555.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.5" y="1566.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="70.5" y="1539.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.5" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="70.5" y="1523.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.5" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="70.5" y="1507.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.5" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="70.5" y="1491.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.5" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.03%)</title><rect x="70.5" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.5" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="70.8" y="1539.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.8" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="70.8" y="1523.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.8" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1507.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="73.8" y="1518.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (1 samples, 0.03%)</title><rect x="70.8" y="1491.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="73.8" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1475.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.8" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1459.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="73.8" y="1470.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="70.8" y="1443.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="73.8" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.41%)</title><rect x="71.2" y="1619.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.41%)</title><rect x="71.2" y="1603.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (13 samples, 0.38%)</title><rect x="71.5" y="1587.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13 samples, 0.38%)</title><rect x="71.5" y="1571.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13 samples, 0.38%)</title><rect x="71.5" y="1555.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.5" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.38%)</title><rect x="71.5" y="1539.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.5" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.38%)</title><rect x="71.5" y="1523.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="71.5" y="1507.0" width="4.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="74.5" y="1518.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (1 samples, 0.03%)</title><rect x="71.5" y="1491.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="74.5" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1475.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="74.5" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1459.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="74.5" y="1470.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="71.5" y="1443.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="74.5" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1427.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="74.5" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1411.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="74.5" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1395.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="74.5" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1379.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="74.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1363.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="74.5" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1347.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="74.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1331.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="74.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1315.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="74.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1299.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="74.5" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="71.5" y="1283.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="74.5" y="1294.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="71.9" y="1491.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="74.9" y="1502.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="71.9" y="1475.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="74.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="71.9" y="1459.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="74.9" y="1470.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="71.9" y="1443.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="74.9" y="1454.0"></text>
</g>
<g>
<title>__write (9 samples, 0.27%)</title><rect x="72.2" y="1443.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="75.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1427.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="75.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1411.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="75.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1395.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="75.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1379.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="75.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1363.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="75.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1347.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="75.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="72.2" y="1331.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="75.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="72.6" y="1315.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="75.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="72.6" y="1299.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="75.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="72.6" y="1283.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="75.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="72.6" y="1267.0" width="2.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="75.6" y="1278.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="75.3" y="1475.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="78.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1459.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1443.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="78.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1427.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="78.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1411.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="78.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1395.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="78.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1379.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="78.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1363.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="78.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1347.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="78.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1331.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1315.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="78.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.3" y="1299.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="78.3" y="1310.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="75.7" y="1507.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1491.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="78.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1475.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="78.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1459.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="78.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1443.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="78.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1427.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="78.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1411.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="78.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1395.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="78.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1379.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="78.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1363.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="78.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1347.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="78.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="75.7" y="1331.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="78.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (50 samples, 1.47%)</title><rect x="76.0" y="1651.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.0" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="76.0" y="1635.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="76.0" y="1619.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.03%)</title><rect x="76.0" y="1603.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.0" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (42 samples, 1.24%)</title><rect x="76.4" y="1635.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (5 samples, 0.15%)</title><rect x="76.4" y="1619.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.4" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.06%)</title><rect x="76.7" y="1603.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.7" y="1614.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="76.7" y="1587.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.7" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="76.7" y="1571.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.7" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="76.7" y="1555.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.7" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="76.7" y="1539.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="76.7" y="1523.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.7" y="1534.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="76.7" y="1507.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="76.7" y="1491.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="77.1" y="1475.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="77.1" y="1459.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="77.1" y="1443.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.1" y="1454.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.06%)</title><rect x="77.4" y="1603.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.4" y="1614.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.06%)</title><rect x="77.4" y="1587.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (18 samples, 0.53%)</title><rect x="78.1" y="1619.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.09%)</title><rect x="78.5" y="1603.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.5" y="1614.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.09%)</title><rect x="78.5" y="1587.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.5" y="1598.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="78.8" y="1571.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="81.8" y="1582.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.06%)</title><rect x="79.5" y="1603.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.5" y="1614.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.06%)</title><rect x="79.5" y="1587.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.5" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.06%)</title><rect x="79.5" y="1571.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.5" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.06%)</title><rect x="79.5" y="1555.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.5" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.06%)</title><rect x="79.5" y="1539.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.5" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="79.9" y="1523.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.9" y="1534.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.09%)</title><rect x="80.2" y="1603.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.2" y="1614.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.09%)</title><rect x="80.2" y="1587.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.2" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.09%)</title><rect x="80.2" y="1571.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.2" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="80.6" y="1555.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.6" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="80.6" y="1539.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.6" y="1550.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="81.3" y="1603.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.3" y="1614.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.03%)</title><rect x="81.3" y="1587.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.3" y="1598.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.test (8 samples, 0.24%)</title><rect x="81.6" y="1603.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.6" y="1614.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (8 samples, 0.24%)</title><rect x="81.6" y="1587.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.6" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1995619265.test (8 samples, 0.24%)</title><rect x="81.6" y="1571.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.6" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (8 samples, 0.24%)</title><rect x="81.6" y="1555.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.6" y="1566.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/20094719.test (8 samples, 0.24%)</title><rect x="81.6" y="1539.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.6" y="1550.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (8 samples, 0.24%)</title><rect x="81.6" y="1523.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/324457684.test (8 samples, 0.24%)</title><rect x="81.6" y="1507.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (8 samples, 0.24%)</title><rect x="81.6" y="1491.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.09%)</title><rect x="81.6" y="1475.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="81.6" y="1459.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="81.6" y="1443.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.15%)</title><rect x="82.6" y="1475.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.15%)</title><rect x="82.6" y="1459.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.09%)</title><rect x="83.0" y="1443.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.06%)</title><rect x="83.3" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.3" y="1438.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.06%)</title><rect x="83.3" y="1411.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="86.3" y="1422.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="84.0" y="1443.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (1 samples, 0.03%)</title><rect x="84.4" y="1619.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.4" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (1 samples, 0.03%)</title><rect x="84.4" y="1603.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="84.4" y="1587.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="84.4" y="1571.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="84.4" y="1555.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (18 samples, 0.53%)</title><rect x="84.7" y="1619.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.7" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.53%)</title><rect x="84.7" y="1603.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.7" y="1614.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.53%)</title><rect x="84.7" y="1587.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="85.1" y="1571.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="85.1" y="1555.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.1" y="1566.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (1 samples, 0.03%)</title><rect x="85.1" y="1539.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.1" y="1550.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.03%)</title><rect x="85.4" y="1571.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.4" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="85.4" y="1555.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.4" y="1566.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="85.4" y="1539.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="88.4" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (15 samples, 0.44%)</title><rect x="85.8" y="1571.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.8" y="1582.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (15 samples, 0.44%)</title><rect x="85.8" y="1555.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.8" y="1566.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.41%)</title><rect x="86.1" y="1539.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.15%)</title><rect x="86.1" y="1523.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.15%)</title><rect x="86.1" y="1507.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="87.2" y="1491.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.2" y="1502.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="87.2" y="1475.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.2" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1431467659.test (1 samples, 0.03%)</title><rect x="87.5" y="1459.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="87.9" y="1523.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.9" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="87.9" y="1507.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.9" y="1518.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (1 samples, 0.03%)</title><rect x="87.9" y="1491.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.9" y="1502.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.&lt;init&gt; (1 samples, 0.03%)</title><rect x="87.9" y="1475.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.06%)</title><rect x="88.2" y="1523.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.2" y="1534.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (2 samples, 0.06%)</title><rect x="88.2" y="1507.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.2" y="1518.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.06%)</title><rect x="88.2" y="1491.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.2" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="88.6" y="1475.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.6" y="1486.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="88.6" y="1459.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="91.6" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.18%)</title><rect x="88.9" y="1523.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.9" y="1534.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="89.6" y="1507.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.6" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.09%)</title><rect x="89.9" y="1507.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.9" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (3 samples, 0.09%)</title><rect x="89.9" y="1491.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.03%)</title><rect x="91.0" y="1635.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="91.0" y="1619.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.18%)</title><rect x="91.3" y="1635.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.3" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="91.7" y="1619.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.7" y="1630.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="91.7" y="1603.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.7" y="1614.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="91.7" y="1587.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="91.7" y="1571.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.7" y="1582.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="91.7" y="1555.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.7" y="1566.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="91.7" y="1539.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="94.7" y="1550.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="92.0" y="1555.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="95.0" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.09%)</title><rect x="92.4" y="1619.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.4" y="1630.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="93.1" y="1603.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.1" y="1614.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="93.1" y="1587.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="93.1" y="1571.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="93.1" y="1555.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.1" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.09%)</title><rect x="93.4" y="1683.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.09%)</title><rect x="93.4" y="1667.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (7 samples, 0.21%)</title><rect x="94.5" y="1715.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.5" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="95.5" y="1699.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="95.5" y="1683.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$251/1613021659.get$Lambda (1 samples, 0.03%)</title><rect x="95.5" y="1667.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.09%)</title><rect x="95.8" y="1699.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.09%)</title><rect x="95.8" y="1683.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.09%)</title><rect x="95.8" y="1667.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.09%)</title><rect x="95.8" y="1651.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.8" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.09%)</title><rect x="95.8" y="1635.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.8" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="95.8" y="1619.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="95.8" y="1603.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.06%)</title><rect x="96.2" y="1619.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (2 samples, 0.06%)</title><rect x="96.2" y="1603.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.06%)</title><rect x="96.2" y="1587.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="96.2" y="1571.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="96.2" y="1555.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.2" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="96.2" y="1539.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.run (1 samples, 0.03%)</title><rect x="96.2" y="1523.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.2" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="96.2" y="1507.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.2" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.03%)</title><rect x="96.2" y="1491.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="96.2" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.2" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.03%)</title><rect x="96.2" y="1459.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.03%)</title><rect x="96.2" y="1443.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.2" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="96.2" y="1427.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.2" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="96.2" y="1411.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.03%)</title><rect x="96.5" y="1571.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (1 samples, 0.03%)</title><rect x="96.5" y="1555.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.5" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.06%)</title><rect x="96.9" y="1859.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.06%)</title><rect x="96.9" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.9" y="1854.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$33/510854293.apply (2 samples, 0.06%)</title><rect x="96.9" y="1827.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (100 samples, 2.95%)</title><rect x="97.6" y="1859.0" width="34.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.6" y="1870.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="97.6" y="1843.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.6" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="97.6" y="1827.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/687077497.apply (1 samples, 0.03%)</title><rect x="97.6" y="1811.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="97.9" y="1843.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.9" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="97.9" y="1827.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="97.9" y="1811.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="97.9" y="1795.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="97.9" y="1779.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.getCancelCause (1 samples, 0.03%)</title><rect x="98.3" y="1843.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (97 samples, 2.86%)</title><rect x="98.6" y="1843.0" width="33.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.6" y="1854.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (91 samples, 2.68%)</title><rect x="98.6" y="1827.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.6" y="1838.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (91 samples, 2.68%)</title><rect x="98.6" y="1811.0" width="31.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.6" y="1822.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (91 samples, 2.68%)</title><rect x="98.6" y="1795.0" width="31.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.6" y="1806.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.apply (91 samples, 2.68%)</title><rect x="98.6" y="1779.0" width="31.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.6" y="1790.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (90 samples, 2.65%)</title><rect x="99.0" y="1763.0" width="31.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.0" y="1774.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (90 samples, 2.65%)</title><rect x="99.0" y="1747.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.0" y="1758.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (37 samples, 1.09%)</title><rect x="99.3" y="1731.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.3" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (37 samples, 1.09%)</title><rect x="99.3" y="1715.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (37 samples, 1.09%)</title><rect x="99.3" y="1699.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.03%)</title><rect x="99.7" y="1683.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.apply (34 samples, 1.00%)</title><rect x="100.0" y="1683.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (34 samples, 1.00%)</title><rect x="100.0" y="1667.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (34 samples, 1.00%)</title><rect x="100.0" y="1651.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (34 samples, 1.00%)</title><rect x="100.0" y="1635.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (24 samples, 0.71%)</title><rect x="100.0" y="1619.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.0" y="1630.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.03%)</title><rect x="100.0" y="1603.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.0" y="1614.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.03%)</title><rect x="100.0" y="1587.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.0" y="1598.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.outLength (1 samples, 0.03%)</title><rect x="100.0" y="1571.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.0" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (22 samples, 0.65%)</title><rect x="100.4" y="1603.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (22 samples, 0.65%)</title><rect x="100.4" y="1587.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (22 samples, 0.65%)</title><rect x="100.4" y="1571.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (1 samples, 0.03%)</title><rect x="100.7" y="1555.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.7" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="100.7" y="1539.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.get$Lambda (1 samples, 0.03%)</title><rect x="100.7" y="1523.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.7" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.&lt;init&gt; (1 samples, 0.03%)</title><rect x="100.7" y="1507.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.7" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="100.7" y="1491.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.7" y="1502.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.59%)</title><rect x="101.1" y="1555.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.1" y="1566.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.50%)</title><rect x="101.1" y="1539.0" width="5.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="104.1" y="1550.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="101.4" y="1523.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="104.4" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.03%)</title><rect x="101.8" y="1523.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.8" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.09%)</title><rect x="102.1" y="1523.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="105.1" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.09%)</title><rect x="102.1" y="1507.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="105.1" y="1518.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="103.1" y="1523.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="106.1" y="1534.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.12%)</title><rect x="103.5" y="1523.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="106.5" y="1534.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.03%)</title><rect x="103.8" y="1507.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="106.8" y="1518.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.03%)</title><rect x="104.2" y="1507.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="107.2" y="1518.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="104.5" y="1507.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="107.5" y="1518.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="104.9" y="1523.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="107.9" y="1534.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="104.9" y="1507.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="107.9" y="1518.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="104.9" y="1491.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.9" y="1502.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.15%)</title><rect x="105.2" y="1523.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="108.2" y="1534.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.06%)</title><rect x="105.6" y="1507.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="108.6" y="1518.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="105.9" y="1491.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="108.9" y="1502.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.06%)</title><rect x="106.3" y="1507.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="109.3" y="1518.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="106.6" y="1491.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="109.6" y="1502.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="106.6" y="1475.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.6" y="1486.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="107.0" y="1539.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="110.0" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.run (1 samples, 0.03%)</title><rect x="107.3" y="1539.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.3" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (1 samples, 0.03%)</title><rect x="107.3" y="1523.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.3" y="1534.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (1 samples, 0.03%)</title><rect x="107.3" y="1507.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.03%)</title><rect x="107.3" y="1491.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.3" y="1502.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="107.3" y="1475.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.3" y="1486.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="107.3" y="1459.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="107.3" y="1443.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.3" y="1454.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="107.7" y="1539.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="110.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.03%)</title><rect x="108.0" y="1603.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.0" y="1614.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="108.0" y="1587.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.0" y="1598.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="108.0" y="1571.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.0" y="1582.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.0" y="1555.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.0" y="1566.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.0" y="1539.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.0" y="1550.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="108.0" y="1523.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.0" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.29%)</title><rect x="108.4" y="1619.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.4" y="1630.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="108.4" y="1603.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.4" y="1614.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="108.4" y="1587.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.4" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="108.4" y="1571.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.4" y="1582.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="108.4" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.4" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.24%)</title><rect x="109.1" y="1603.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.1" y="1614.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="111.1" y="1587.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="111.1" y="1571.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="111.1" y="1555.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="111.1" y="1539.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.1" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="111.5" y="1587.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.5" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.03%)</title><rect x="111.5" y="1571.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="111.8" y="1683.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.8" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="111.8" y="1667.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (51 samples, 1.50%)</title><rect x="112.2" y="1731.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (49 samples, 1.44%)</title><rect x="112.9" y="1715.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.9" y="1726.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.03%)</title><rect x="113.9" y="1699.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="116.9" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="114.3" y="1699.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.3" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.03%)</title><rect x="114.6" y="1699.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.09%)</title><rect x="115.0" y="1699.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="115.3" y="1683.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.03%)</title><rect x="115.3" y="1667.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="115.7" y="1683.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="115.7" y="1667.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="115.7" y="1651.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="115.7" y="1635.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (5 samples, 0.15%)</title><rect x="116.0" y="1699.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.0" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="117.1" y="1683.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.1" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="117.1" y="1667.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.1" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$181/1303688099.get$Lambda (1 samples, 0.03%)</title><rect x="117.1" y="1651.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="117.4" y="1683.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="117.4" y="1667.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="117.4" y="1651.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="117.4" y="1635.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="117.4" y="1619.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.4" y="1630.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="117.4" y="1603.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.4" y="1614.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.03%)</title><rect x="117.4" y="1587.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (2 samples, 0.06%)</title><rect x="117.7" y="1699.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (2 samples, 0.06%)</title><rect x="117.7" y="1683.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (2 samples, 0.06%)</title><rect x="117.7" y="1667.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.7" y="1678.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="117.7" y="1651.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.7" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="118.1" y="1635.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="118.1" y="1619.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.1" y="1630.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.03%)</title><rect x="118.1" y="1603.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.1" y="1614.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.03%)</title><rect x="118.1" y="1587.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.1" y="1598.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.03%)</title><rect x="118.1" y="1571.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.1" y="1582.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.03%)</title><rect x="118.1" y="1555.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.1" y="1566.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.03%)</title><rect x="118.1" y="1539.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (33 samples, 0.97%)</title><rect x="118.4" y="1699.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.4" y="1710.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 0.97%)</title><rect x="118.4" y="1683.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.4" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="118.4" y="1667.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="121.4" y="1678.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (24 samples, 0.71%)</title><rect x="118.8" y="1667.0" width="8.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="121.8" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="119.1" y="1651.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="122.1" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.03%)</title><rect x="119.1" y="1635.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="122.1" y="1646.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.15%)</title><rect x="119.5" y="1651.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="122.5" y="1662.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.12%)</title><rect x="119.8" y="1635.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="122.8" y="1646.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.06%)</title><rect x="120.5" y="1619.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.5" y="1630.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="121.2" y="1651.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="124.2" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="121.6" y="1651.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="124.6" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="121.6" y="1635.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="124.6" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="121.6" y="1619.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="124.6" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="121.6" y="1603.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="124.6" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="121.6" y="1587.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="124.6" y="1598.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (2 samples, 0.06%)</title><rect x="121.9" y="1651.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="124.9" y="1662.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.09%)</title><rect x="122.6" y="1651.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="125.6" y="1662.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.09%)</title><rect x="122.6" y="1635.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="125.6" y="1646.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="122.6" y="1619.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="125.6" y="1630.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="122.6" y="1603.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="125.6" y="1614.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="123.0" y="1619.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="126.0" y="1630.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.29%)</title><rect x="123.7" y="1651.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="126.7" y="1662.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="124.4" y="1635.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.4" y="1646.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="124.7" y="1635.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="127.7" y="1646.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.12%)</title><rect x="125.0" y="1635.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="128.0" y="1646.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.06%)</title><rect x="126.4" y="1635.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="129.4" y="1646.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="126.8" y="1619.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="129.8" y="1630.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="126.8" y="1603.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="129.8" y="1614.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.03%)</title><rect x="127.1" y="1667.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="130.1" y="1678.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.06%)</title><rect x="127.5" y="1667.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="130.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.run (5 samples, 0.15%)</title><rect x="128.2" y="1667.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (4 samples, 0.12%)</title><rect x="128.5" y="1651.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.5" y="1662.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.09%)</title><rect x="128.9" y="1635.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.9" y="1646.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.06%)</title><rect x="129.2" y="1619.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.2" y="1630.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.06%)</title><rect x="129.2" y="1603.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.2" y="1614.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.06%)</title><rect x="129.2" y="1587.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.2" y="1598.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.06%)</title><rect x="129.2" y="1571.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.2" y="1582.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="129.2" y="1555.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="132.2" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.03%)</title><rect x="129.6" y="1555.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.6" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="129.6" y="1539.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.6" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="129.6" y="1523.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="129.6" y="1507.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.baseHead (1 samples, 0.03%)</title><rect x="129.6" y="1491.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="129.9" y="1731.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.9" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.06%)</title><rect x="130.3" y="1827.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.06%)</title><rect x="130.3" y="1811.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.3" y="1822.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="130.3" y="1795.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="133.3" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="130.6" y="1795.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (1 samples, 0.03%)</title><rect x="131.0" y="1827.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (1 samples, 0.03%)</title><rect x="131.0" y="1811.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.0" y="1822.0"></text>
</g>
<g>
<title>java/util/Optional.orElse (1 samples, 0.03%)</title><rect x="131.0" y="1795.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (3 samples, 0.09%)</title><rect x="131.3" y="1827.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="131.3" y="1811.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.3" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="131.3" y="1795.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="131.3" y="1779.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.3" y="1790.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="131.6" y="1811.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="134.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.03%)</title><rect x="132.0" y="1811.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.0" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="132.0" y="1795.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.0" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="132.0" y="1779.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.0" y="1790.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="132.0" y="1763.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (8 samples, 0.24%)</title><rect x="132.3" y="1907.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.3" y="1918.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.12%)</title><rect x="132.7" y="1891.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.7" y="1902.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.12%)</title><rect x="132.7" y="1875.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.7" y="1886.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.12%)</title><rect x="132.7" y="1859.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.7" y="1870.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.12%)</title><rect x="132.7" y="1843.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.7" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (3 samples, 0.09%)</title><rect x="134.1" y="1891.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.09%)</title><rect x="134.1" y="1875.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.1" y="1886.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.06%)</title><rect x="134.4" y="1859.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.4" y="1870.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="134.4" y="1843.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.4" y="1854.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="134.4" y="1827.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.4" y="1838.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.03%)</title><rect x="134.8" y="1843.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.03%)</title><rect x="135.1" y="1971.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (35 samples, 1.03%)</title><rect x="135.5" y="2003.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.5" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="135.5" y="1987.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="135.5" y="1971.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.5" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.call (34 samples, 1.00%)</title><rect x="135.8" y="1987.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.8" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$4 (34 samples, 1.00%)</title><rect x="135.8" y="1971.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (31 samples, 0.91%)</title><rect x="135.8" y="1955.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.8" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (31 samples, 0.91%)</title><rect x="135.8" y="1939.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.8" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (3 samples, 0.09%)</title><rect x="135.8" y="1923.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.8" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.09%)</title><rect x="135.8" y="1907.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.8" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="135.8" y="1891.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.8" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.09%)</title><rect x="135.8" y="1875.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.8" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.09%)</title><rect x="135.8" y="1859.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.8" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.09%)</title><rect x="135.8" y="1843.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.8" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="135.8" y="1827.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.8" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="135.8" y="1811.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.8" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="135.8" y="1795.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.8" y="1806.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="135.8" y="1779.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.8" y="1790.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="135.8" y="1763.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.8" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="135.8" y="1747.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.8" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="135.8" y="1731.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.8" y="1742.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="135.8" y="1715.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.8" y="1726.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (2 samples, 0.06%)</title><rect x="136.2" y="1827.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.2" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (2 samples, 0.06%)</title><rect x="136.2" y="1811.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="1822.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.06%)</title><rect x="136.2" y="1795.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.2" y="1806.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.06%)</title><rect x="136.2" y="1779.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.2" y="1790.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="136.2" y="1763.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.2" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="136.2" y="1747.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="1758.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="136.2" y="1731.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.2" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="136.5" y="1715.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.5" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="136.5" y="1699.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.5" y="1710.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="136.5" y="1683.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.5" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (28 samples, 0.82%)</title><rect x="136.9" y="1923.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.03%)</title><rect x="136.9" y="1907.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.9" y="1918.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.03%)</title><rect x="136.9" y="1891.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="139.9" y="1902.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="136.9" y="1875.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="139.9" y="1886.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="136.9" y="1859.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="139.9" y="1870.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="136.9" y="1843.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="139.9" y="1854.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.03%)</title><rect x="136.9" y="1827.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="139.9" y="1838.0"></text>
</g>
<g>
<title>CompiledMethod::attached_method(unsigned char*) (1 samples, 0.03%)</title><rect x="136.9" y="1811.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="139.9" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (27 samples, 0.80%)</title><rect x="137.2" y="1907.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.2" y="1918.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="137.2" y="1891.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.2" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="137.2" y="1875.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.2" y="1886.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.03%)</title><rect x="137.2" y="1859.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.2" y="1870.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.06%)</title><rect x="137.6" y="1891.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1875.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="140.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1859.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="140.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1843.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="140.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1827.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="140.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1811.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="140.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1795.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="140.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="137.9" y="1779.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="140.9" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.12%)</title><rect x="138.3" y="1891.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.12%)</title><rect x="138.3" y="1875.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.12%)</title><rect x="138.3" y="1859.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.3" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.06%)</title><rect x="138.6" y="1843.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.6" y="1854.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.03%)</title><rect x="139.3" y="1843.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.3" y="1854.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="139.3" y="1827.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.3" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.06%)</title><rect x="139.6" y="1891.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.6" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="139.6" y="1875.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.6" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="140.0" y="1875.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.0" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="140.0" y="1859.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.0" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="140.0" y="1843.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.0" y="1854.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="140.0" y="1827.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.0" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="140.0" y="1811.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.0" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="140.0" y="1795.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.0" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="140.0" y="1779.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.0" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (1 samples, 0.03%)</title><rect x="140.0" y="1763.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.0" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (1 samples, 0.03%)</title><rect x="140.0" y="1747.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.0" y="1758.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="140.0" y="1731.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.0" y="1742.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="140.0" y="1715.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.0" y="1726.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="140.0" y="1699.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.0" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (18 samples, 0.53%)</title><rect x="140.3" y="1891.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.3" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.06%)</title><rect x="140.3" y="1875.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.3" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (1 samples, 0.03%)</title><rect x="140.3" y="1859.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.3" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="140.3" y="1843.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.3" y="1854.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="140.7" y="1859.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.7" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.03%)</title><rect x="140.7" y="1843.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.7" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.03%)</title><rect x="140.7" y="1827.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.03%)</title><rect x="140.7" y="1811.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.03%)</title><rect x="140.7" y="1795.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.03%)</title><rect x="140.7" y="1779.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.7" y="1790.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.03%)</title><rect x="140.7" y="1763.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.7" y="1774.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.03%)</title><rect x="140.7" y="1747.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.03%)</title><rect x="140.7" y="1731.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.7" y="1742.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.03%)</title><rect x="140.7" y="1715.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="143.7" y="1726.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.03%)</title><rect x="140.7" y="1699.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="143.7" y="1710.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.03%)</title><rect x="140.7" y="1683.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="143.7" y="1694.0"></text>
</g>
<g>
<title>PerfClassTraceTime::initialize() (1 samples, 0.03%)</title><rect x="140.7" y="1667.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="143.7" y="1678.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.03%)</title><rect x="140.7" y="1651.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="143.7" y="1662.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (14 samples, 0.41%)</title><rect x="141.0" y="1875.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.0" y="1886.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (14 samples, 0.41%)</title><rect x="141.0" y="1859.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (14 samples, 0.41%)</title><rect x="141.0" y="1843.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (14 samples, 0.41%)</title><rect x="141.0" y="1827.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (13 samples, 0.38%)</title><rect x="141.0" y="1811.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (13 samples, 0.38%)</title><rect x="141.0" y="1795.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.38%)</title><rect x="141.0" y="1779.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="141.0" y="1763.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.0" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="141.0" y="1747.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.0" y="1758.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="141.0" y="1731.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.0" y="1742.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="141.0" y="1715.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.0" y="1726.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="141.0" y="1699.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.0" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.35%)</title><rect x="141.4" y="1763.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.4" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="143.1" y="1747.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.1" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.18%)</title><rect x="143.5" y="1747.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.5" y="1758.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.15%)</title><rect x="143.8" y="1731.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.8" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.12%)</title><rect x="144.2" y="1715.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.2" y="1726.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.12%)</title><rect x="144.2" y="1699.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.2" y="1710.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.09%)</title><rect x="144.5" y="1683.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.5" y="1694.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="144.9" y="1667.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.9" y="1678.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.03%)</title><rect x="145.2" y="1667.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.2" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.03%)</title><rect x="145.6" y="1811.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.6" y="1822.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (2 samples, 0.06%)</title><rect x="145.9" y="1875.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="146.2" y="1859.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="146.2" y="1843.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="146.2" y="1827.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="146.2" y="1811.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.2" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.valueOf (3 samples, 0.09%)</title><rect x="146.6" y="1955.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.6" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.09%)</title><rect x="146.6" y="1939.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.6" y="1950.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.06%)</title><rect x="146.6" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.6" y="1934.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.06%)</title><rect x="146.6" y="1907.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.6" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.06%)</title><rect x="146.6" y="1891.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.6" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.06%)</title><rect x="146.6" y="1875.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.6" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.06%)</title><rect x="146.6" y="1859.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.6" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="146.9" y="1843.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.9" y="1854.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="146.9" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.9" y="1838.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="146.9" y="1811.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="146.9" y="1795.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="146.9" y="1779.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.9" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="146.9" y="1763.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.9" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="146.9" y="1747.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.9" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (1 samples, 0.03%)</title><rect x="147.3" y="1923.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.3" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (1 samples, 0.03%)</title><rect x="147.3" y="1907.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.3" y="1918.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="147.3" y="1891.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (24 samples, 0.71%)</title><rect x="147.6" y="2003.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (24 samples, 0.71%)</title><rect x="147.6" y="1987.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.6" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (24 samples, 0.71%)</title><rect x="147.6" y="1971.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.6" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromise$$Lambda$360/711807655.run (24 samples, 0.71%)</title><rect x="147.6" y="1955.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.6" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromise.tryToComplete (24 samples, 0.71%)</title><rect x="147.6" y="1939.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (22 samples, 0.65%)</title><rect x="147.6" y="1923.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="147.6" y="1907.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="147.6" y="1891.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="147.6" y="1875.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.03%)</title><rect x="147.6" y="1859.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.62%)</title><rect x="148.0" y="1907.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (21 samples, 0.62%)</title><rect x="148.0" y="1891.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (21 samples, 0.62%)</title><rect x="148.0" y="1875.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (21 samples, 0.62%)</title><rect x="148.0" y="1859.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 0.62%)</title><rect x="148.0" y="1843.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (21 samples, 0.62%)</title><rect x="148.0" y="1827.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (21 samples, 0.62%)</title><rect x="148.0" y="1811.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (20 samples, 0.59%)</title><rect x="148.0" y="1795.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.59%)</title><rect x="148.0" y="1779.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.59%)</title><rect x="148.0" y="1763.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.0" y="1774.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.09%)</title><rect x="148.0" y="1747.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="151.0" y="1758.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="148.0" y="1731.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="151.0" y="1742.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="148.7" y="1731.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="151.7" y="1742.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.50%)</title><rect x="149.0" y="1747.0" width="5.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="152.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="149.4" y="1731.0" width="5.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="152.4" y="1742.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="149.4" y="1715.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="152.4" y="1726.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="149.4" y="1699.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="152.4" y="1710.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="149.4" y="1683.0" width="5.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="152.4" y="1694.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="149.7" y="1667.0" width="5.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="152.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="150.4" y="1651.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="153.4" y="1662.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="150.8" y="1635.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="153.8" y="1646.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="150.8" y="1619.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="153.8" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (1 samples, 0.03%)</title><rect x="154.9" y="1795.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.9" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromiseContext.schedule (2 samples, 0.06%)</title><rect x="155.3" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedScheduledExecutorService.schedule (2 samples, 0.06%)</title><rect x="155.3" y="1907.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (2 samples, 0.06%)</title><rect x="155.3" y="1891.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (2 samples, 0.06%)</title><rect x="155.3" y="1875.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.canRunInCurrentRunState (2 samples, 0.06%)</title><rect x="155.3" y="1859.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.06%)</title><rect x="156.0" y="2003.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="156.3" y="1987.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.03%)</title><rect x="156.3" y="1971.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.3" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="156.7" y="2003.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.7" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="156.7" y="1987.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.7" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (624 samples, 18.38%)</title><rect x="157.0" y="2003.0" width="216.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.0" y="2014.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="158.4" y="1987.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.47%)</title><rect x="158.8" y="1987.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.8" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.47%)</title><rect x="158.8" y="1971.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.8" y="1982.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="158.8" y="1955.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.03%)</title><rect x="159.1" y="1955.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.41%)</title><rect x="159.5" y="1955.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.41%)</title><rect x="159.5" y="1939.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.5" y="1950.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.18%)</title><rect x="159.5" y="1923.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="162.5" y="1934.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="159.5" y="1907.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="162.5" y="1918.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.15%)</title><rect x="159.8" y="1907.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="162.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="161.2" y="1891.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="164.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="161.2" y="1875.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="164.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="161.5" y="1923.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="164.5" y="1934.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.21%)</title><rect x="161.5" y="1907.0" width="2.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="164.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="161.9" y="1891.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="164.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="161.9" y="1875.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="164.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="161.9" y="1859.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="164.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="162.2" y="1843.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="165.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="162.2" y="1827.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="165.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="162.6" y="1811.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="165.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="163.3" y="1795.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="166.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="163.3" y="1779.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="166.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1763.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="166.6" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1747.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="166.6" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1731.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="166.6" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1715.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="166.6" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1699.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="166.6" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1683.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="166.6" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1667.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="166.6" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="163.6" y="1651.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="166.6" y="1662.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="164.0" y="1907.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="167.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (15 samples, 0.44%)</title><rect x="164.3" y="1987.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (15 samples, 0.44%)</title><rect x="164.3" y="1971.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.3" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll (1 samples, 0.03%)</title><rect x="164.3" y="1955.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.3" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (1 samples, 0.03%)</title><rect x="164.3" y="1939.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.3" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (1 samples, 0.03%)</title><rect x="164.3" y="1923.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (1 samples, 0.03%)</title><rect x="164.3" y="1907.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (12 samples, 0.35%)</title><rect x="164.7" y="1955.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.7" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.03%)</title><rect x="164.7" y="1939.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="164.7" y="1923.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="164.7" y="1907.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.7" y="1918.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="164.7" y="1891.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="167.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="165.0" y="1939.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="165.0" y="1923.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="165.0" y="1907.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferAfterCancelledWait (1 samples, 0.03%)</title><rect x="165.4" y="1939.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (9 samples, 0.27%)</title><rect x="165.7" y="1939.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.7" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.27%)</title><rect x="165.7" y="1923.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="165.7" y="1907.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="168.7" y="1918.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="165.7" y="1891.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="168.7" y="1902.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.21%)</title><rect x="166.1" y="1907.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="169.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="167.1" y="1891.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="170.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="167.1" y="1875.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="170.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="167.4" y="1859.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="170.4" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="167.8" y="1843.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="170.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="167.8" y="1827.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="170.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="167.8" y="1811.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="170.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="167.8" y="1795.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="170.8" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="167.8" y="1779.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="170.8" y="1790.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="168.5" y="1907.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="168.8" y="1955.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="168.8" y="1939.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="168.8" y="1923.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="168.8" y="1907.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.8" y="1918.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.03%)</title><rect x="168.8" y="1891.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="171.8" y="1902.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="168.8" y="1875.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="171.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="169.2" y="1955.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.2" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="169.2" y="1939.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.2" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="169.2" y="1923.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="169.2" y="1907.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="169.2" y="1891.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.2" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="169.2" y="1875.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="172.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1859.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="172.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1843.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="172.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1827.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="172.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1811.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="172.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1795.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="172.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1779.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="172.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1763.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="172.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="169.2" y="1747.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="172.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (207 samples, 6.10%)</title><rect x="169.5" y="1987.0" width="72.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.5" y="1998.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (207 samples, 6.10%)</title><rect x="169.5" y="1971.0" width="72.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.5" y="1982.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (199 samples, 5.86%)</title><rect x="172.0" y="1955.0" width="69.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.0" y="1966.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="176.1" y="1939.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (60 samples, 1.77%)</title><rect x="176.5" y="1939.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="197.0" y="1923.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="200.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="197.0" y="1907.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="200.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="197.0" y="1891.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="200.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="197.0" y="1875.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="200.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="197.0" y="1859.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="200.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (124 samples, 3.65%)</title><rect x="197.3" y="1939.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.3" y="1950.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (124 samples, 3.65%)</title><rect x="197.3" y="1923.0" width="43.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.3" y="1934.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (37 samples, 1.09%)</title><rect x="197.3" y="1907.0" width="12.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="200.3" y="1918.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="198.0" y="1891.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="201.0" y="1902.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.24%)</title><rect x="198.4" y="1891.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="201.4" y="1902.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="199.4" y="1875.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="202.4" y="1886.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.06%)</title><rect x="199.8" y="1875.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="202.8" y="1886.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="200.5" y="1875.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="203.5" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="200.8" y="1875.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="203.8" y="1886.0"></text>
</g>
<g>
<title>__lll_unlock_wake (22 samples, 0.65%)</title><rect x="201.2" y="1891.0" width="7.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="204.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="203.9" y="1875.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="206.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="203.9" y="1859.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="206.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="206.0" y="1843.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="209.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="207.1" y="1827.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="210.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="207.4" y="1811.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="210.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="208.5" y="1795.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="211.5" y="1806.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="208.8" y="1891.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="211.8" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="209.2" y="1891.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="212.2" y="1902.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="209.9" y="1891.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="212.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="210.2" y="1907.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="213.2" y="1918.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.06%)</title><rect x="210.2" y="1891.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="213.2" y="1902.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="210.9" y="1891.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="213.9" y="1902.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="210.9" y="1875.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="213.9" y="1886.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="211.6" y="1907.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="214.6" y="1918.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (74 samples, 2.18%)</title><rect x="211.9" y="1907.0" width="25.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="214.9" y="1918.0">_..</text>
</g>
<g>
<title>[unknown] (53 samples, 1.56%)</title><rect x="219.2" y="1891.0" width="18.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="222.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.56%)</title><rect x="219.2" y="1875.0" width="18.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="222.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.38%)</title><rect x="221.3" y="1859.0" width="16.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="224.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.33%)</title><rect x="222.0" y="1843.0" width="15.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.06%)</title><rect x="225.1" y="1827.0" width="12.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="228.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.00%)</title><rect x="225.8" y="1811.0" width="11.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="228.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.77%)</title><rect x="228.6" y="1795.0" width="9.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="231.6" y="1806.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="231.1" y="1779.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="234.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="236.6" y="1763.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="239.6" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1747.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="240.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1731.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="240.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1715.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="240.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1699.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="240.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1683.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="240.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1667.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="240.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="237.3" y="1651.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="240.3" y="1662.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.12%)</title><rect x="237.7" y="1907.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="240.7" y="1918.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="239.0" y="1907.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="242.0" y="1918.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="239.4" y="1907.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="242.4" y="1918.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="239.7" y="1907.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="242.7" y="1918.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.06%)</title><rect x="240.4" y="1939.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="243.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.03%)</title><rect x="241.1" y="1955.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.03%)</title><rect x="241.1" y="1939.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (381 samples, 11.22%)</title><rect x="241.5" y="1987.0" width="132.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.5" y="1998.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (380 samples, 11.19%)</title><rect x="241.8" y="1971.0" width="132.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.8" y="1982.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (379 samples, 11.16%)</title><rect x="242.2" y="1955.0" width="131.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.2" y="1966.0">java/util/concur..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.09%)</title><rect x="247.4" y="1939.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (312 samples, 9.19%)</title><rect x="248.4" y="1939.0" width="108.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.4" y="1950.0">java/util/con..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="355.1" y="1923.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="358.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="355.1" y="1907.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="358.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="355.1" y="1891.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="358.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="355.1" y="1875.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="358.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="355.5" y="1859.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="358.5" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="355.5" y="1843.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="358.5" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="355.5" y="1827.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="358.5" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 1.44%)</title><rect x="356.9" y="1939.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 1.44%)</title><rect x="356.9" y="1923.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.9" y="1934.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.59%)</title><rect x="356.9" y="1907.0" width="6.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="359.9" y="1918.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="357.2" y="1891.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="360.2" y="1902.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.06%)</title><rect x="357.6" y="1891.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="360.6" y="1902.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="358.3" y="1891.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="361.3" y="1902.0"></text>
</g>
<g>
<title>__lll_unlock_wake (13 samples, 0.38%)</title><rect x="358.6" y="1891.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="361.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="360.7" y="1875.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="363.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="360.7" y="1859.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="363.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="362.1" y="1843.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="365.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="362.1" y="1827.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="365.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="362.1" y="1811.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="365.1" y="1822.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="363.1" y="1891.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="366.1" y="1902.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="363.5" y="1891.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="366.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.82%)</title><rect x="363.8" y="1907.0" width="9.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="366.8" y="1918.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="363.8" y="1891.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="366.8" y="1902.0"></text>
</g>
<g>
<title>__pthread_cond_wait (26 samples, 0.77%)</title><rect x="364.2" y="1891.0" width="9.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="367.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="369.4" y="1875.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="372.4" y="1886.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="369.4" y="1859.0" width="3.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="372.4" y="1870.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="369.7" y="1843.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="372.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="369.7" y="1827.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="372.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="370.4" y="1811.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="373.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="370.4" y="1795.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="373.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="371.1" y="1779.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="374.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="371.8" y="1763.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="374.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="372.5" y="1747.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="375.5" y="1758.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="373.2" y="1891.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="376.2" y="1902.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="373.6" y="1907.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="376.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.run (145 samples, 4.27%)</title><rect x="373.9" y="2003.0" width="50.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.9" y="2014.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (145 samples, 4.27%)</title><rect x="373.9" y="1987.0" width="50.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.9" y="1998.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (145 samples, 4.27%)</title><rect x="373.9" y="1971.0" width="50.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.9" y="1982.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (143 samples, 4.21%)</title><rect x="374.6" y="1955.0" width="49.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.6" y="1966.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (143 samples, 4.21%)</title><rect x="374.6" y="1939.0" width="49.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.6" y="1950.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (143 samples, 4.21%)</title><rect x="374.6" y="1923.0" width="49.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.6" y="1934.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (142 samples, 4.18%)</title><rect x="374.6" y="1907.0" width="49.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.6" y="1918.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (142 samples, 4.18%)</title><rect x="374.6" y="1891.0" width="49.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.6" y="1902.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (142 samples, 4.18%)</title><rect x="374.6" y="1875.0" width="49.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.6" y="1886.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="374.6" y="1859.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (141 samples, 4.15%)</title><rect x="374.9" y="1859.0" width="49.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.9" y="1870.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (141 samples, 4.15%)</title><rect x="374.9" y="1843.0" width="49.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.9" y="1854.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (22 samples, 0.65%)</title><rect x="375.3" y="1827.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.3" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="375.3" y="1811.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.3" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="375.3" y="1795.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$313/1568044126.get$Lambda (1 samples, 0.03%)</title><rect x="375.3" y="1779.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$313/1568044126.&lt;init&gt; (1 samples, 0.03%)</title><rect x="375.3" y="1763.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (20 samples, 0.59%)</title><rect x="375.6" y="1811.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.59%)</title><rect x="375.6" y="1795.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19 samples, 0.56%)</title><rect x="375.6" y="1779.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.6" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="375.6" y="1763.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.6" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.47%)</title><rect x="376.0" y="1763.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9 samples, 0.27%)</title><rect x="376.0" y="1747.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.0" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="376.0" y="1731.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="376.0" y="1715.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.0" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.03%)</title><rect x="376.0" y="1699.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.0" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.03%)</title><rect x="376.0" y="1683.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.0" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="376.0" y="1667.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.0" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="376.0" y="1651.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.0" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="376.0" y="1635.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$308/1021512958.apply (2 samples, 0.06%)</title><rect x="376.3" y="1731.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.06%)</title><rect x="376.3" y="1715.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.06%)</title><rect x="376.3" y="1699.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.06%)</title><rect x="376.3" y="1683.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.3" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.06%)</title><rect x="376.3" y="1667.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.3" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.06%)</title><rect x="376.3" y="1651.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.3" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.06%)</title><rect x="376.3" y="1635.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.3" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.03%)</title><rect x="376.3" y="1619.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.3" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="376.3" y="1603.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.3" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.apply (1 samples, 0.03%)</title><rect x="376.7" y="1619.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.03%)</title><rect x="376.7" y="1603.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.03%)</title><rect x="376.7" y="1587.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.03%)</title><rect x="376.7" y="1571.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="376.7" y="1555.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.7" y="1566.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="376.7" y="1539.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.7" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="376.7" y="1523.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.7" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="376.7" y="1507.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.7" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="376.7" y="1491.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (4 samples, 0.12%)</title><rect x="377.0" y="1731.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4 samples, 0.12%)</title><rect x="377.0" y="1715.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4 samples, 0.12%)</title><rect x="377.0" y="1699.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4 samples, 0.12%)</title><rect x="377.0" y="1683.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (4 samples, 0.12%)</title><rect x="377.0" y="1667.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.12%)</title><rect x="377.0" y="1651.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (4 samples, 0.12%)</title><rect x="377.0" y="1635.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.12%)</title><rect x="377.0" y="1619.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (4 samples, 0.12%)</title><rect x="377.0" y="1603.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.0" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.12%)</title><rect x="377.0" y="1587.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.0" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.12%)</title><rect x="377.0" y="1571.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.0" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.12%)</title><rect x="377.0" y="1555.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.0" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.12%)</title><rect x="377.0" y="1539.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.0" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.12%)</title><rect x="377.0" y="1523.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.09%)</title><rect x="377.0" y="1507.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (3 samples, 0.09%)</title><rect x="377.0" y="1491.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (3 samples, 0.09%)</title><rect x="377.0" y="1475.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.09%)</title><rect x="377.0" y="1459.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.09%)</title><rect x="377.0" y="1443.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.09%)</title><rect x="377.0" y="1427.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.0" y="1438.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.09%)</title><rect x="377.0" y="1411.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.0" y="1422.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.09%)</title><rect x="377.0" y="1395.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.0" y="1406.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.09%)</title><rect x="377.0" y="1379.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="380.0" y="1390.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.09%)</title><rect x="377.0" y="1363.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="380.0" y="1374.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.09%)</title><rect x="377.0" y="1347.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="380.0" y="1358.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.09%)</title><rect x="377.0" y="1331.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="380.0" y="1342.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.03%)</title><rect x="377.0" y="1315.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.0" y="1326.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.06%)</title><rect x="377.4" y="1315.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="380.4" y="1326.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="377.4" y="1299.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.4" y="1310.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="377.4" y="1283.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="380.4" y="1294.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="377.7" y="1299.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="380.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$335/1458335372.accept (1 samples, 0.03%)</title><rect x="378.1" y="1507.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.03%)</title><rect x="378.1" y="1491.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.03%)</title><rect x="378.1" y="1475.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.1" y="1486.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.03%)</title><rect x="378.1" y="1459.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.1" y="1470.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.03%)</title><rect x="378.1" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.03%)</title><rect x="378.1" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.1" y="1438.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.03%)</title><rect x="378.1" y="1411.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="381.1" y="1422.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="378.1" y="1395.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="381.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.apply (2 samples, 0.06%)</title><rect x="378.4" y="1731.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.06%)</title><rect x="378.4" y="1715.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.03%)</title><rect x="378.4" y="1699.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.4" y="1710.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.03%)</title><rect x="378.4" y="1683.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.4" y="1694.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="378.4" y="1667.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="378.8" y="1699.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.8" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.18%)</title><rect x="379.1" y="1747.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.1" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.18%)</title><rect x="379.1" y="1731.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.apply (6 samples, 0.18%)</title><rect x="379.1" y="1715.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.18%)</title><rect x="379.1" y="1699.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.18%)</title><rect x="379.1" y="1683.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.apply (4 samples, 0.12%)</title><rect x="379.8" y="1667.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.06%)</title><rect x="380.5" y="1651.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.5" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="380.5" y="1635.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.5" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="380.5" y="1619.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.5" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="380.5" y="1603.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.5" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="380.5" y="1587.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.03%)</title><rect x="380.9" y="1635.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.03%)</title><rect x="380.9" y="1619.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.9" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.03%)</title><rect x="381.2" y="1747.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="381.2" y="1731.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.2" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="381.2" y="1715.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.2" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.03%)</title><rect x="381.2" y="1699.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.2" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.03%)</title><rect x="381.2" y="1683.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.2" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.03%)</title><rect x="381.2" y="1667.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.2" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.03%)</title><rect x="381.2" y="1651.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.2" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="381.2" y="1635.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="381.2" y="1619.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.2" y="1630.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="381.2" y="1603.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="384.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="381.2" y="1587.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="384.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="381.2" y="1571.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="384.2" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.03%)</title><rect x="381.6" y="1763.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.6" y="1774.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="381.9" y="1763.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="384.9" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="382.2" y="1779.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.2" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (1 samples, 0.03%)</title><rect x="382.6" y="1811.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.03%)</title><rect x="382.6" y="1795.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.03%)</title><rect x="382.6" y="1779.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="382.9" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="382.9" y="1811.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="382.9" y="1795.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (117 samples, 3.45%)</title><rect x="383.3" y="1827.0" width="40.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.3" y="1838.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (116 samples, 3.42%)</title><rect x="383.6" y="1811.0" width="40.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.6" y="1822.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (116 samples, 3.42%)</title><rect x="383.6" y="1795.0" width="40.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.6" y="1806.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (116 samples, 3.42%)</title><rect x="383.6" y="1779.0" width="40.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.6" y="1790.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (114 samples, 3.36%)</title><rect x="384.3" y="1763.0" width="39.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.3" y="1774.0">jdk..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (113 samples, 3.33%)</title><rect x="384.3" y="1747.0" width="39.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.3" y="1758.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (113 samples, 3.33%)</title><rect x="384.3" y="1731.0" width="39.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.3" y="1742.0">sun..</text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="384.3" y="1715.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="384.7" y="1715.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="384.7" y="1699.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.7" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (110 samples, 3.24%)</title><rect x="385.0" y="1715.0" width="38.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.0" y="1726.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (110 samples, 3.24%)</title><rect x="385.0" y="1699.0" width="38.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.0" y="1710.0">sun..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="385.0" y="1683.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.0" y="1694.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="385.0" y="1667.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.03%)</title><rect x="385.0" y="1651.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.03%)</title><rect x="385.0" y="1635.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.0" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (2 samples, 0.06%)</title><rect x="385.4" y="1683.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.4" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (2 samples, 0.06%)</title><rect x="386.1" y="1683.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.1" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (103 samples, 3.03%)</title><rect x="386.8" y="1683.0" width="35.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.8" y="1694.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (103 samples, 3.03%)</title><rect x="386.8" y="1667.0" width="35.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.8" y="1678.0">sun..</text>
</g>
<g>
<title>[unknown] (101 samples, 2.97%)</title><rect x="387.5" y="1651.0" width="35.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="390.5" y="1662.0">[un..</text>
</g>
<g>
<title>[unknown] (101 samples, 2.97%)</title><rect x="387.5" y="1635.0" width="35.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="390.5" y="1646.0">[un..</text>
</g>
<g>
<title>__GI___writev (101 samples, 2.97%)</title><rect x="387.5" y="1619.0" width="35.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="390.5" y="1630.0">__G..</text>
</g>
<g>
<title>[unknown] (100 samples, 2.95%)</title><rect x="387.8" y="1603.0" width="34.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="390.8" y="1614.0">[u..</text>
</g>
<g>
<title>[unknown] (100 samples, 2.95%)</title><rect x="387.8" y="1587.0" width="34.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="390.8" y="1598.0">[u..</text>
</g>
<g>
<title>[unknown] (99 samples, 2.92%)</title><rect x="388.2" y="1571.0" width="34.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="391.2" y="1582.0">[u..</text>
</g>
<g>
<title>[unknown] (99 samples, 2.92%)</title><rect x="388.2" y="1555.0" width="34.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="391.2" y="1566.0">[u..</text>
</g>
<g>
<title>[unknown] (98 samples, 2.89%)</title><rect x="388.5" y="1539.0" width="34.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="391.5" y="1550.0">[u..</text>
</g>
<g>
<title>[unknown] (96 samples, 2.83%)</title><rect x="389.2" y="1523.0" width="33.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="392.2" y="1534.0">[u..</text>
</g>
<g>
<title>[unknown] (94 samples, 2.77%)</title><rect x="389.9" y="1507.0" width="32.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="392.9" y="1518.0">[u..</text>
</g>
<g>
<title>[unknown] (89 samples, 2.62%)</title><rect x="391.6" y="1491.0" width="31.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="394.6" y="1502.0">[u..</text>
</g>
<g>
<title>[unknown] (89 samples, 2.62%)</title><rect x="391.6" y="1475.0" width="31.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="394.6" y="1486.0">[u..</text>
</g>
<g>
<title>[unknown] (87 samples, 2.56%)</title><rect x="392.3" y="1459.0" width="30.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="395.3" y="1470.0">[u..</text>
</g>
<g>
<title>[unknown] (87 samples, 2.56%)</title><rect x="392.3" y="1443.0" width="30.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="395.3" y="1454.0">[u..</text>
</g>
<g>
<title>[unknown] (86 samples, 2.53%)</title><rect x="392.7" y="1427.0" width="29.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="395.7" y="1438.0">[u..</text>
</g>
<g>
<title>[unknown] (81 samples, 2.39%)</title><rect x="394.4" y="1411.0" width="28.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="397.4" y="1422.0">[u..</text>
</g>
<g>
<title>[unknown] (81 samples, 2.39%)</title><rect x="394.4" y="1395.0" width="28.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="397.4" y="1406.0">[u..</text>
</g>
<g>
<title>[unknown] (75 samples, 2.21%)</title><rect x="396.5" y="1379.0" width="26.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="399.5" y="1390.0">[..</text>
</g>
<g>
<title>[unknown] (72 samples, 2.12%)</title><rect x="397.5" y="1363.0" width="25.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="400.5" y="1374.0">[..</text>
</g>
<g>
<title>[unknown] (69 samples, 2.03%)</title><rect x="398.6" y="1347.0" width="24.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="401.6" y="1358.0">[..</text>
</g>
<g>
<title>[unknown] (67 samples, 1.97%)</title><rect x="399.3" y="1331.0" width="23.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="402.3" y="1342.0">[..</text>
</g>
<g>
<title>[unknown] (66 samples, 1.94%)</title><rect x="399.6" y="1315.0" width="23.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="402.6" y="1326.0">[..</text>
</g>
<g>
<title>[unknown] (66 samples, 1.94%)</title><rect x="399.6" y="1299.0" width="23.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="402.6" y="1310.0">[..</text>
</g>
<g>
<title>[unknown] (65 samples, 1.91%)</title><rect x="400.0" y="1283.0" width="22.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="403.0" y="1294.0">[..</text>
</g>
<g>
<title>[unknown] (59 samples, 1.74%)</title><rect x="402.1" y="1267.0" width="20.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="405.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.62%)</title><rect x="403.4" y="1251.0" width="19.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="406.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.53%)</title><rect x="404.5" y="1235.0" width="18.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="407.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.44%)</title><rect x="405.5" y="1219.0" width="17.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="408.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.38%)</title><rect x="406.2" y="1203.0" width="16.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="409.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.35%)</title><rect x="406.6" y="1187.0" width="16.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="409.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.35%)</title><rect x="406.6" y="1171.0" width="16.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="409.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.35%)</title><rect x="406.6" y="1155.0" width="16.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="409.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.33%)</title><rect x="406.9" y="1139.0" width="15.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="409.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.33%)</title><rect x="406.9" y="1123.0" width="15.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="409.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.27%)</title><rect x="407.6" y="1107.0" width="15.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="410.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.27%)</title><rect x="407.6" y="1091.0" width="15.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="410.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.27%)</title><rect x="407.6" y="1075.0" width="15.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="410.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.24%)</title><rect x="408.0" y="1059.0" width="14.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="411.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.24%)</title><rect x="408.0" y="1043.0" width="14.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.18%)</title><rect x="408.7" y="1027.0" width="13.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="411.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.06%)</title><rect x="410.1" y="1011.0" width="12.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="413.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.97%)</title><rect x="411.1" y="995.0" width="11.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="414.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.80%)</title><rect x="413.2" y="979.0" width="9.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="416.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="415.6" y="963.0" width="7.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="418.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="415.6" y="947.0" width="7.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="418.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="415.6" y="931.0" width="7.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="418.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="421.9" y="915.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="424.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="421.9" y="899.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="424.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="422.2" y="883.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="425.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="422.6" y="1683.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="422.9" y="1667.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.9" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (1 samples, 0.03%)</title><rect x="423.3" y="1715.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.3" y="1726.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="423.6" y="1747.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.6" y="1758.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.03%)</title><rect x="423.6" y="1731.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.6" y="1742.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="423.6" y="1715.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.6" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="424.0" y="1907.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="424.0" y="1891.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (221 samples, 6.51%)</title><rect x="424.3" y="2003.0" width="76.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.3" y="2014.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (221 samples, 6.51%)</title><rect x="424.3" y="1987.0" width="76.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.3" y="1998.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.06%)</title><rect x="424.3" y="1971.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.3" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.03%)</title><rect x="424.3" y="1955.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="424.3" y="1939.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="424.3" y="1923.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.03%)</title><rect x="424.3" y="1907.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="424.3" y="1891.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="424.3" y="1875.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.03%)</title><rect x="424.3" y="1859.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.3" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="424.3" y="1843.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="424.7" y="1955.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.7" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="424.7" y="1939.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.7" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (124 samples, 3.65%)</title><rect x="425.0" y="1971.0" width="43.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.0" y="1982.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (124 samples, 3.65%)</title><rect x="425.0" y="1955.0" width="43.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.0" y="1966.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (124 samples, 3.65%)</title><rect x="425.0" y="1939.0" width="43.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.0" y="1950.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (14 samples, 0.41%)</title><rect x="425.7" y="1923.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (14 samples, 0.41%)</title><rect x="425.7" y="1907.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.7" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.41%)</title><rect x="425.7" y="1891.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.7" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.41%)</title><rect x="425.7" y="1875.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.7" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.38%)</title><rect x="426.0" y="1859.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (12 samples, 0.35%)</title><rect x="426.4" y="1843.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (12 samples, 0.35%)</title><rect x="426.4" y="1827.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.4" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (12 samples, 0.35%)</title><rect x="426.4" y="1811.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.4" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (12 samples, 0.35%)</title><rect x="426.4" y="1795.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.4" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.32%)</title><rect x="426.7" y="1779.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.7" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.32%)</title><rect x="426.7" y="1763.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="426.7" y="1747.0" width="3.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="429.7" y="1758.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.27%)</title><rect x="426.7" y="1731.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="429.7" y="1742.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.27%)</title><rect x="426.7" y="1715.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="429.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="426.7" y="1699.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="429.7" y="1710.0"></text>
</g>
<g>
<title>__write (9 samples, 0.27%)</title><rect x="426.7" y="1683.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="429.7" y="1694.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="427.1" y="1667.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="430.1" y="1678.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="427.1" y="1651.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="430.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="427.4" y="1635.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="430.4" y="1646.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="427.4" y="1619.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="430.4" y="1630.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="427.4" y="1603.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="430.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="427.4" y="1587.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="430.4" y="1598.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="427.4" y="1571.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="430.4" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="427.8" y="1555.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="430.8" y="1566.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="427.8" y="1539.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="430.8" y="1550.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="427.8" y="1523.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="430.8" y="1534.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="427.8" y="1507.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="430.8" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="429.9" y="1731.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="432.9" y="1742.0"></text>
</g>
<g>
<title>__write (2 samples, 0.06%)</title><rect x="429.9" y="1715.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="432.9" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="429.9" y="1699.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="432.9" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="429.9" y="1683.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="432.9" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="429.9" y="1667.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="432.9" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1651.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="433.2" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1635.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="433.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1619.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="433.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1603.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="433.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1587.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="433.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1571.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="433.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1555.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="433.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="430.2" y="1539.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="433.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (108 samples, 3.18%)</title><rect x="430.6" y="1923.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.6" y="1934.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (108 samples, 3.18%)</title><rect x="430.6" y="1907.0" width="37.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.6" y="1918.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (108 samples, 3.18%)</title><rect x="430.6" y="1891.0" width="37.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.6" y="1902.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (108 samples, 3.18%)</title><rect x="430.6" y="1875.0" width="37.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.6" y="1886.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (48 samples, 1.41%)</title><rect x="430.9" y="1859.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 1.41%)</title><rect x="430.9" y="1843.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.9" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (48 samples, 1.41%)</title><rect x="430.9" y="1827.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (48 samples, 1.41%)</title><rect x="430.9" y="1811.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.06%)</title><rect x="430.9" y="1795.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 1.35%)</title><rect x="431.6" y="1795.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (46 samples, 1.35%)</title><rect x="431.6" y="1779.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.6" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (46 samples, 1.35%)</title><rect x="431.6" y="1763.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.6" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (45 samples, 1.33%)</title><rect x="431.6" y="1747.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (44 samples, 1.30%)</title><rect x="431.9" y="1731.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.9" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (41 samples, 1.21%)</title><rect x="432.3" y="1715.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.12%)</title><rect x="432.3" y="1699.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.09%)</title><rect x="432.6" y="1683.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.6" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.09%)</title><rect x="432.6" y="1667.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.6" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.09%)</title><rect x="432.6" y="1651.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.6" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.03%)</title><rect x="432.6" y="1635.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.6" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="432.6" y="1619.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.6" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="433.0" y="1635.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.0" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="433.0" y="1619.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="433.0" y="1603.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.03%)</title><rect x="433.0" y="1587.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.0" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="433.3" y="1635.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.3" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.03%)</title><rect x="433.3" y="1619.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.3" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="433.3" y="1603.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.3" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="433.3" y="1587.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.3" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (28 samples, 0.82%)</title><rect x="433.7" y="1699.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (28 samples, 0.82%)</title><rect x="433.7" y="1683.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (28 samples, 0.82%)</title><rect x="433.7" y="1667.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (28 samples, 0.82%)</title><rect x="433.7" y="1651.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.7" y="1662.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$146/2083139844.apply (1 samples, 0.03%)</title><rect x="433.7" y="1635.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.7" y="1646.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (1 samples, 0.03%)</title><rect x="433.7" y="1619.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.7" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (1 samples, 0.03%)</title><rect x="433.7" y="1603.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (1 samples, 0.03%)</title><rect x="433.7" y="1587.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.7" y="1598.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.opIsStateful (1 samples, 0.03%)</title><rect x="433.7" y="1571.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.7" y="1582.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$365/462289540.apply (1 samples, 0.03%)</title><rect x="434.0" y="1635.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.0" y="1646.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.03%)</title><rect x="434.0" y="1619.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.0" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.03%)</title><rect x="434.0" y="1603.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.0" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.03%)</title><rect x="434.0" y="1587.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.0" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (25 samples, 0.74%)</title><rect x="434.4" y="1635.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.4" y="1646.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (11 samples, 0.32%)</title><rect x="435.4" y="1619.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.4" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.06%)</title><rect x="435.4" y="1603.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.4" y="1614.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="435.4" y="1587.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.4" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="435.4" y="1571.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.4" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="435.4" y="1555.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.4" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="435.4" y="1539.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="435.4" y="1523.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="435.4" y="1507.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="435.4" y="1491.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.4" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.27%)</title><rect x="436.1" y="1603.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.1" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.27%)</title><rect x="436.1" y="1587.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.1" y="1598.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.27%)</title><rect x="436.1" y="1571.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.1" y="1582.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.24%)</title><rect x="436.1" y="1555.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.1" y="1566.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.24%)</title><rect x="436.1" y="1539.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.1" y="1550.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.21%)</title><rect x="436.1" y="1523.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.1" y="1534.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (6 samples, 0.18%)</title><rect x="436.1" y="1507.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.1" y="1518.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (6 samples, 0.18%)</title><rect x="436.1" y="1491.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.1" y="1502.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.18%)</title><rect x="436.1" y="1475.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.1" y="1486.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.18%)</title><rect x="436.1" y="1459.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.1" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="436.1" y="1443.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.1" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="436.1" y="1427.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.1" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1 samples, 0.03%)</title><rect x="436.5" y="1443.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.5" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.12%)</title><rect x="436.8" y="1443.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.8" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (4 samples, 0.12%)</title><rect x="436.8" y="1427.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.8" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="437.2" y="1411.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.2" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="438.2" y="1507.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.2" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (1 samples, 0.03%)</title><rect x="438.6" y="1523.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.6" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.03%)</title><rect x="438.9" y="1555.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.9" y="1566.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.03%)</title><rect x="438.9" y="1539.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.9" y="1550.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.03%)</title><rect x="438.9" y="1523.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.9" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (1 samples, 0.03%)</title><rect x="439.2" y="1619.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="439.2" y="1603.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="439.2" y="1587.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.29%)</title><rect x="439.6" y="1619.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.6" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (10 samples, 0.29%)</title><rect x="439.6" y="1603.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.6" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (10 samples, 0.29%)</title><rect x="439.6" y="1587.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="439.6" y="1571.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="439.6" y="1555.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/1994142006.get$Lambda (1 samples, 0.03%)</title><rect x="439.6" y="1539.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/1994142006.&lt;init&gt; (1 samples, 0.03%)</title><rect x="439.6" y="1523.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="439.9" y="1571.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="439.9" y="1555.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="439.9" y="1539.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.03%)</title><rect x="439.9" y="1523.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.06%)</title><rect x="440.3" y="1571.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.3" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="440.3" y="1555.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.03%)</title><rect x="440.3" y="1539.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.3" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="440.6" y="1555.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="440.6" y="1539.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (1 samples, 0.03%)</title><rect x="441.0" y="1571.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.0" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="441.0" y="1555.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.0" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.09%)</title><rect x="441.3" y="1571.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.3" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.09%)</title><rect x="441.3" y="1555.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.3" y="1566.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (2 samples, 0.06%)</title><rect x="441.3" y="1539.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.3" y="1550.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.06%)</title><rect x="441.3" y="1523.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.06%)</title><rect x="441.3" y="1507.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.3" y="1518.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.06%)</title><rect x="441.3" y="1491.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="444.3" y="1502.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.06%)</title><rect x="441.3" y="1475.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="444.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="442.0" y="1539.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.0" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="442.0" y="1523.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="442.0" y="1507.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.03%)</title><rect x="442.0" y="1491.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="442.0" y="1475.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.06%)</title><rect x="442.4" y="1571.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.4" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.contentChunked (1 samples, 0.03%)</title><rect x="442.7" y="1555.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.03%)</title><rect x="442.7" y="1539.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="443.1" y="1635.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.apply (9 samples, 0.27%)</title><rect x="443.4" y="1699.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (9 samples, 0.27%)</title><rect x="443.4" y="1683.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (9 samples, 0.27%)</title><rect x="443.4" y="1667.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.4" y="1678.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (2 samples, 0.06%)</title><rect x="444.5" y="1651.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.5" y="1662.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (2 samples, 0.06%)</title><rect x="444.5" y="1635.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.5" y="1646.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.03%)</title><rect x="444.8" y="1619.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.8" y="1630.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.03%)</title><rect x="445.2" y="1651.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.2" y="1662.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="445.2" y="1635.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2 samples, 0.06%)</title><rect x="445.5" y="1651.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.5" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.06%)</title><rect x="445.5" y="1635.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.5" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (1 samples, 0.03%)</title><rect x="446.2" y="1651.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.trace (1 samples, 0.03%)</title><rect x="446.2" y="1635.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.2" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.06%)</title><rect x="446.5" y="1715.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.5" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.03%)</title><rect x="446.9" y="1699.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.9" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="446.9" y="1683.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.9" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="446.9" y="1667.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.apply (1 samples, 0.03%)</title><rect x="447.2" y="1747.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.03%)</title><rect x="447.2" y="1731.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (58 samples, 1.71%)</title><rect x="447.6" y="1859.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (10 samples, 0.29%)</title><rect x="448.3" y="1843.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.3" y="1854.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.06%)</title><rect x="449.7" y="1827.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.7" y="1838.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.06%)</title><rect x="449.7" y="1811.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.7" y="1822.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="450.0" y="1795.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.0" y="1806.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.03%)</title><rect x="450.0" y="1779.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="1790.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.09%)</title><rect x="450.4" y="1827.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.4" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.03%)</title><rect x="451.1" y="1811.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.1" y="1822.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="451.4" y="1827.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="454.4" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.06%)</title><rect x="451.8" y="1843.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.8" y="1854.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="452.1" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.1" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.03%)</title><rect x="452.1" y="1811.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1 samples, 0.03%)</title><rect x="452.5" y="1843.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.5" y="1854.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="452.5" y="1827.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.5" y="1838.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="452.5" y="1811.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.5" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (16 samples, 0.47%)</title><rect x="452.8" y="1843.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.8" y="1854.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.38%)</title><rect x="453.5" y="1827.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.5" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.38%)</title><rect x="453.5" y="1811.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.5" y="1822.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (11 samples, 0.32%)</title><rect x="454.2" y="1795.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.2" y="1806.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (11 samples, 0.32%)</title><rect x="454.2" y="1779.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.2" y="1790.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.32%)</title><rect x="454.2" y="1763.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.2" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.15%)</title><rect x="454.2" y="1747.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.2" y="1758.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.15%)</title><rect x="454.2" y="1731.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.2" y="1742.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.09%)</title><rect x="454.9" y="1715.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.9" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="454.9" y="1699.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.9" y="1710.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="454.9" y="1683.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.9" y="1694.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="455.2" y="1699.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.2" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="455.2" y="1683.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="458.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1431467659.test (1 samples, 0.03%)</title><rect x="455.6" y="1683.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.6" y="1694.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.06%)</title><rect x="455.9" y="1747.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.9" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (1 samples, 0.03%)</title><rect x="456.3" y="1731.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.3" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="456.3" y="1715.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.3" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="456.3" y="1699.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.3" y="1710.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="456.3" y="1683.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="459.3" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.12%)</title><rect x="456.6" y="1747.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.6" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.06%)</title><rect x="457.0" y="1731.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="457.0" y="1715.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.0" y="1726.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="457.0" y="1699.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.0" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="457.3" y="1683.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="457.3" y="1667.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.3" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="457.7" y="1731.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.7" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.03%)</title><rect x="457.7" y="1715.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1 samples, 0.03%)</title><rect x="458.0" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (27 samples, 0.80%)</title><rect x="458.4" y="1843.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.06%)</title><rect x="459.4" y="1827.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="459.4" y="1811.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.4" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="459.4" y="1795.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.4" y="1806.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="459.8" y="1795.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (22 samples, 0.65%)</title><rect x="460.1" y="1827.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.1" y="1838.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.12%)</title><rect x="460.8" y="1811.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.12%)</title><rect x="460.8" y="1795.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.8" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.12%)</title><rect x="460.8" y="1779.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="1790.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="461.5" y="1763.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="464.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.18%)</title><rect x="462.2" y="1811.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.2" y="1822.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (6 samples, 0.18%)</title><rect x="462.2" y="1795.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.2" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.06%)</title><rect x="464.3" y="1811.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.3" y="1822.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.06%)</title><rect x="464.3" y="1795.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="464.3" y="1779.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.3" y="1790.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (8 samples, 0.24%)</title><rect x="465.0" y="1811.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.0" y="1822.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.12%)</title><rect x="465.7" y="1795.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.7" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.12%)</title><rect x="465.7" y="1779.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.7" y="1790.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.12%)</title><rect x="465.7" y="1763.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.7" y="1774.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="467.1" y="1795.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$315/1017512857.apply (1 samples, 0.03%)</title><rect x="467.4" y="1795.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.03%)</title><rect x="467.4" y="1779.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.4" y="1790.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="467.4" y="1763.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1865137363.accept (1 samples, 0.03%)</title><rect x="467.7" y="1859.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.7" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="467.7" y="1843.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.7" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.03%)</title><rect x="467.7" y="1827.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (95 samples, 2.80%)</title><rect x="468.1" y="1971.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.1" y="1982.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (95 samples, 2.80%)</title><rect x="468.1" y="1955.0" width="33.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.1" y="1966.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (95 samples, 2.80%)</title><rect x="468.1" y="1939.0" width="33.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.1" y="1950.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (95 samples, 2.80%)</title><rect x="468.1" y="1923.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.1" y="1934.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (95 samples, 2.80%)</title><rect x="468.1" y="1907.0" width="33.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.1" y="1918.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.06%)</title><rect x="469.1" y="1891.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="469.1" y="1875.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.1" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="469.1" y="1859.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.1" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (1 samples, 0.03%)</title><rect x="469.1" y="1843.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="469.5" y="1875.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.5" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="469.5" y="1859.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (89 samples, 2.62%)</title><rect x="469.8" y="1891.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.8" y="1902.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (89 samples, 2.62%)</title><rect x="469.8" y="1875.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.8" y="1886.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (89 samples, 2.62%)</title><rect x="469.8" y="1859.0" width="31.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.8" y="1870.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (89 samples, 2.62%)</title><rect x="469.8" y="1843.0" width="31.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.8" y="1854.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (89 samples, 2.62%)</title><rect x="469.8" y="1827.0" width="31.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.8" y="1838.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (89 samples, 2.62%)</title><rect x="469.8" y="1811.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.8" y="1822.0">jd..</text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.03%)</title><rect x="470.2" y="1795.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.run (32 samples, 0.94%)</title><rect x="470.5" y="1795.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.5" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (32 samples, 0.94%)</title><rect x="470.5" y="1779.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.03%)</title><rect x="470.5" y="1763.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.5" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (1 samples, 0.03%)</title><rect x="470.5" y="1747.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (31 samples, 0.91%)</title><rect x="470.9" y="1763.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.9" y="1774.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.15%)</title><rect x="470.9" y="1747.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.9" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.06%)</title><rect x="470.9" y="1731.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.9" y="1742.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="470.9" y="1715.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.9" y="1726.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="470.9" y="1699.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.9" y="1710.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="470.9" y="1683.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.03%)</title><rect x="470.9" y="1667.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.9" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="471.2" y="1699.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="471.2" y="1683.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.2" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="471.2" y="1667.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.2" y="1678.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="471.2" y="1651.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="471.2" y="1635.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="471.2" y="1619.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.2" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.09%)</title><rect x="471.6" y="1731.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.6" y="1742.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.09%)</title><rect x="471.6" y="1715.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.6" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.09%)</title><rect x="471.6" y="1699.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.6" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.09%)</title><rect x="471.6" y="1683.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.6" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.09%)</title><rect x="471.6" y="1667.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.6" y="1678.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="471.6" y="1651.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.6" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="471.6" y="1635.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.6" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.03%)</title><rect x="471.6" y="1619.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.6" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.03%)</title><rect x="471.6" y="1603.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.6" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.06%)</title><rect x="471.9" y="1651.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.9" y="1662.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.06%)</title><rect x="471.9" y="1635.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.9" y="1646.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (2 samples, 0.06%)</title><rect x="471.9" y="1619.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.9" y="1630.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="471.9" y="1603.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.9" y="1614.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="471.9" y="1587.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.9" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="471.9" y="1571.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.9" y="1582.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="471.9" y="1555.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="474.9" y="1566.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.size (1 samples, 0.03%)</title><rect x="472.3" y="1603.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.3" y="1614.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.size (1 samples, 0.03%)</title><rect x="472.3" y="1587.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.3" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (1 samples, 0.03%)</title><rect x="472.3" y="1571.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.3" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="472.3" y="1555.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.3" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="472.3" y="1539.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.3" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="472.3" y="1523.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.3" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (26 samples, 0.77%)</title><rect x="472.6" y="1747.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.6" y="1758.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.06%)</title><rect x="472.6" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.6" y="1742.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.06%)</title><rect x="472.6" y="1715.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.6" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.06%)</title><rect x="472.6" y="1699.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.6" y="1710.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.06%)</title><rect x="472.6" y="1683.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="475.6" y="1694.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="472.6" y="1667.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="475.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (24 samples, 0.71%)</title><rect x="473.3" y="1731.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.06%)</title><rect x="473.3" y="1715.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.3" y="1726.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.03%)</title><rect x="473.7" y="1699.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.7" y="1710.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.03%)</title><rect x="473.7" y="1683.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.06%)</title><rect x="474.0" y="1715.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.0" y="1726.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="474.0" y="1699.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.0" y="1710.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="474.0" y="1683.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (20 samples, 0.59%)</title><rect x="474.7" y="1715.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (20 samples, 0.59%)</title><rect x="474.7" y="1699.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (20 samples, 0.59%)</title><rect x="474.7" y="1683.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (20 samples, 0.59%)</title><rect x="474.7" y="1667.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (18 samples, 0.53%)</title><rect x="474.7" y="1651.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (18 samples, 0.53%)</title><rect x="474.7" y="1635.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (18 samples, 0.53%)</title><rect x="474.7" y="1619.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.7" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (18 samples, 0.53%)</title><rect x="474.7" y="1603.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.7" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (18 samples, 0.53%)</title><rect x="474.7" y="1587.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="475.0" y="1571.0" width="5.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="478.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="475.0" y="1555.0" width="5.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="478.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="475.0" y="1539.0" width="5.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="478.0" y="1550.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="475.0" y="1523.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="478.0" y="1534.0"></text>
</g>
<g>
<title>__write (14 samples, 0.41%)</title><rect x="475.7" y="1523.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="478.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="476.1" y="1507.0" width="4.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="479.1" y="1518.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="476.1" y="1491.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="479.1" y="1502.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="477.1" y="1475.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="480.1" y="1486.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="477.1" y="1459.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="480.1" y="1470.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="477.1" y="1443.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="480.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="477.1" y="1427.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="480.1" y="1438.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="477.1" y="1411.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="480.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="477.5" y="1395.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="480.5" y="1406.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="477.8" y="1379.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="480.8" y="1390.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="477.8" y="1363.0" width="2.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="480.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="478.5" y="1347.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="481.5" y="1358.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="480.6" y="1571.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="483.6" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1555.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="483.6" y="1566.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="480.6" y="1539.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="483.6" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1523.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="483.6" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1507.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="483.6" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1491.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="483.6" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1475.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="483.6" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1459.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="483.6" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1443.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="483.6" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1427.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="483.6" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1411.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="483.6" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1395.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="483.6" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1379.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="483.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="480.6" y="1363.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="483.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="481.0" y="1651.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.03%)</title><rect x="481.3" y="1651.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.03%)</title><rect x="481.3" y="1635.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.03%)</title><rect x="481.3" y="1619.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.03%)</title><rect x="481.3" y="1603.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.3" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (1 samples, 0.03%)</title><rect x="481.3" y="1587.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.3" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (1 samples, 0.03%)</title><rect x="481.3" y="1571.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.3" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1437941060.invokeStatic (1 samples, 0.03%)</title><rect x="481.3" y="1555.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/1994142006.accept (4 samples, 0.12%)</title><rect x="481.7" y="1795.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (4 samples, 0.12%)</title><rect x="481.7" y="1779.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (4 samples, 0.12%)</title><rect x="481.7" y="1763.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.12%)</title><rect x="481.7" y="1747.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.12%)</title><rect x="481.7" y="1731.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.12%)</title><rect x="481.7" y="1715.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.12%)</title><rect x="481.7" y="1699.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.7" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.09%)</title><rect x="481.7" y="1683.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.7" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.09%)</title><rect x="481.7" y="1667.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.7" y="1678.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="481.7" y="1651.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="484.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1978442940.accept (1 samples, 0.03%)</title><rect x="482.3" y="1651.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$335/1458335372.accept (1 samples, 0.03%)</title><rect x="482.7" y="1683.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (46 samples, 1.35%)</title><rect x="483.0" y="1795.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (46 samples, 1.35%)</title><rect x="483.0" y="1779.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (45 samples, 1.33%)</title><rect x="483.0" y="1763.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (44 samples, 1.30%)</title><rect x="483.0" y="1747.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.0" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (44 samples, 1.30%)</title><rect x="483.0" y="1731.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.0" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (43 samples, 1.27%)</title><rect x="483.4" y="1715.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (43 samples, 1.27%)</title><rect x="483.4" y="1699.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.4" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.15%)</title><rect x="483.7" y="1683.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.7" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.15%)</title><rect x="483.7" y="1667.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.7" y="1678.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="484.1" y="1651.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="487.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.accept (3 samples, 0.09%)</title><rect x="484.4" y="1651.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.accept (37 samples, 1.09%)</title><rect x="485.5" y="1683.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (37 samples, 1.09%)</title><rect x="485.5" y="1667.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.5" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36 samples, 1.06%)</title><rect x="485.8" y="1651.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.8" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 1.06%)</title><rect x="485.8" y="1635.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.8" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.09%)</title><rect x="486.2" y="1619.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.2" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="486.2" y="1603.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.2" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="486.2" y="1587.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.apply (2 samples, 0.06%)</title><rect x="486.5" y="1603.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.06%)</title><rect x="486.5" y="1587.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="486.9" y="1571.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.9" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (31 samples, 0.91%)</title><rect x="487.2" y="1619.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.2" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (31 samples, 0.91%)</title><rect x="487.2" y="1603.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.2" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (31 samples, 0.91%)</title><rect x="487.2" y="1587.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.2" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (30 samples, 0.88%)</title><rect x="487.2" y="1571.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.2" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (28 samples, 0.82%)</title><rect x="487.9" y="1555.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (27 samples, 0.80%)</title><rect x="488.3" y="1539.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.03%)</title><rect x="488.3" y="1523.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (26 samples, 0.77%)</title><rect x="488.6" y="1523.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.77%)</title><rect x="488.6" y="1507.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.77%)</title><rect x="488.6" y="1491.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.6" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.15%)</title><rect x="488.6" y="1475.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="491.6" y="1486.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.06%)</title><rect x="489.0" y="1459.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="492.0" y="1470.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="489.6" y="1459.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.6" y="1470.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="490.0" y="1459.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="493.0" y="1470.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (21 samples, 0.62%)</title><rect x="490.3" y="1475.0" width="7.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="493.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="490.7" y="1459.0" width="6.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="493.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="490.7" y="1443.0" width="6.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="493.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="491.4" y="1427.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="494.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="491.4" y="1411.0" width="6.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="494.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="491.4" y="1395.0" width="6.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="494.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="491.4" y="1379.0" width="6.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="494.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="491.4" y="1363.0" width="6.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="494.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="491.7" y="1347.0" width="5.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="494.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="497.6" y="1571.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.6" y="1582.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="498.0" y="1619.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="501.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.03%)</title><rect x="498.3" y="1747.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.3" y="1758.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="498.3" y="1731.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (1 samples, 0.03%)</title><rect x="498.7" y="1763.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="498.7" y="1747.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="498.7" y="1731.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.06%)</title><rect x="499.0" y="1795.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.06%)</title><rect x="499.0" y="1779.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.06%)</title><rect x="499.0" y="1763.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.06%)</title><rect x="499.0" y="1747.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.0" y="1758.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.06%)</title><rect x="499.0" y="1731.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.0" y="1742.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="499.0" y="1715.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="502.0" y="1726.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="499.4" y="1715.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.4" y="1726.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.03%)</title><rect x="499.4" y="1699.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (3 samples, 0.09%)</title><rect x="499.7" y="1795.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.7" y="1806.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (3 samples, 0.09%)</title><rect x="499.7" y="1779.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="1790.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="500.1" y="1763.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.1" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="500.4" y="1763.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.4" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="500.4" y="1747.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.4" y="1758.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="500.4" y="1731.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.4" y="1742.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="500.4" y="1715.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.4" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="500.4" y="1699.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.4" y="1710.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="500.4" y="1683.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.4" y="1694.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="500.4" y="1667.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="500.8" y="1891.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="500.8" y="1875.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.03%)</title><rect x="500.8" y="1859.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.8" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.03%)</title><rect x="500.8" y="1843.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.8" y="1854.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.run (362 samples, 10.66%)</title><rect x="501.1" y="2003.0" width="125.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.1" y="2014.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$asyncExecute$3 (362 samples, 10.66%)</title><rect x="501.1" y="1987.0" width="125.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.1" y="1998.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$115/59933779.submit (4 samples, 0.12%)</title><rect x="501.1" y="1971.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.1" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$2 (4 samples, 0.12%)</title><rect x="501.1" y="1955.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.1" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.upsert (4 samples, 0.12%)</title><rect x="501.1" y="1939.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.1" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.responseFuture (4 samples, 0.12%)</title><rect x="501.1" y="1923.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.1" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.get (1 samples, 0.03%)</title><rect x="501.5" y="1907.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.5" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (2 samples, 0.06%)</title><rect x="501.8" y="1907.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.8" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$349/1174152785.submit (229 samples, 6.75%)</title><rect x="502.5" y="1971.0" width="79.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.5" y="1982.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$0 (229 samples, 6.75%)</title><rect x="502.5" y="1955.0" width="79.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.5" y="1966.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.get (229 samples, 6.75%)</title><rect x="502.5" y="1939.0" width="79.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.5" y="1950.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="503.9" y="1923.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="1934.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (1 samples, 0.03%)</title><rect x="504.2" y="1923.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.2" y="1934.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (102 samples, 3.00%)</title><rect x="504.6" y="1923.0" width="35.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.6" y="1934.0">jav..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="504.9" y="1907.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="507.9" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$354/1976306945.accept (100 samples, 2.95%)</title><rect x="505.3" y="1907.0" width="34.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.3" y="1918.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$5 (100 samples, 2.95%)</title><rect x="505.3" y="1891.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.3" y="1902.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="505.3" y="1875.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.3" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="505.3" y="1859.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.3" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.get$Lambda (2 samples, 0.06%)</title><rect x="505.3" y="1843.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.3" y="1854.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.&lt;init&gt; (2 samples, 0.06%)</title><rect x="505.3" y="1827.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (12 samples, 0.35%)</title><rect x="506.0" y="1875.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.35%)</title><rect x="506.0" y="1859.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.35%)</title><rect x="506.0" y="1843.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.35%)</title><rect x="506.0" y="1827.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.35%)</title><rect x="506.0" y="1811.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.35%)</title><rect x="506.0" y="1795.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.35%)</title><rect x="506.0" y="1779.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.35%)</title><rect x="506.0" y="1763.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.35%)</title><rect x="506.0" y="1747.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.0" y="1758.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="506.0" y="1731.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="509.0" y="1742.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="506.0" y="1715.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="509.0" y="1726.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="506.3" y="1715.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="509.3" y="1726.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.29%)</title><rect x="506.7" y="1731.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="509.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="506.7" y="1715.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="509.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="506.7" y="1699.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="509.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="507.7" y="1683.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="510.7" y="1694.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="507.7" y="1667.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="510.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="507.7" y="1651.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="510.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="508.1" y="1635.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="511.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="508.1" y="1619.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="511.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="508.1" y="1603.0" width="2.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="511.1" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.03%)</title><rect x="510.2" y="1875.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.03%)</title><rect x="510.2" y="1859.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.2" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.get (79 samples, 2.33%)</title><rect x="510.5" y="1875.0" width="27.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="1886.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (54 samples, 1.59%)</title><rect x="510.5" y="1859.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (54 samples, 1.59%)</title><rect x="510.5" y="1843.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (54 samples, 1.59%)</title><rect x="510.5" y="1827.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (54 samples, 1.59%)</title><rect x="510.5" y="1811.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.5" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="510.5" y="1795.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="510.5" y="1779.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$164/1050524402.get$Lambda (1 samples, 0.03%)</title><rect x="510.5" y="1763.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.5" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$164/1050524402.&lt;init&gt; (1 samples, 0.03%)</title><rect x="510.5" y="1747.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.5" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.03%)</title><rect x="510.5" y="1731.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.03%)</title><rect x="510.8" y="1795.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (28 samples, 0.82%)</title><rect x="511.2" y="1795.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.2" y="1806.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.09%)</title><rect x="511.9" y="1779.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.9" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.09%)</title><rect x="511.9" y="1763.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.9" y="1774.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.09%)</title><rect x="511.9" y="1747.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.9" y="1758.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.09%)</title><rect x="511.9" y="1731.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.9" y="1742.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.09%)</title><rect x="511.9" y="1715.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.9" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.09%)</title><rect x="511.9" y="1699.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.9" y="1710.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.06%)</title><rect x="511.9" y="1683.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.9" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.06%)</title><rect x="511.9" y="1667.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.9" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.03%)</title><rect x="511.9" y="1651.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.9" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.03%)</title><rect x="511.9" y="1635.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$289/2052560467.test (1 samples, 0.03%)</title><rect x="512.2" y="1651.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.2" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="512.6" y="1683.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.6" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.03%)</title><rect x="512.6" y="1667.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.6" y="1678.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.15%)</title><rect x="512.9" y="1779.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.9" y="1790.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.15%)</title><rect x="512.9" y="1763.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.9" y="1774.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.15%)</title><rect x="512.9" y="1747.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.9" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.15%)</title><rect x="512.9" y="1731.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.9" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (5 samples, 0.15%)</title><rect x="512.9" y="1715.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.9" y="1726.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.15%)</title><rect x="512.9" y="1699.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.9" y="1710.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.12%)</title><rect x="512.9" y="1683.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.9" y="1694.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (4 samples, 0.12%)</title><rect x="512.9" y="1667.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="1678.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.09%)</title><rect x="513.3" y="1651.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.3" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="513.3" y="1635.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.3" y="1646.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="513.3" y="1619.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.3" y="1630.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="513.6" y="1635.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.6" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="513.6" y="1619.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.6" y="1630.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="513.6" y="1603.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.6" y="1614.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="513.6" y="1587.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.6" y="1598.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="513.6" y="1571.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.6" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1620948027.test (1 samples, 0.03%)</title><rect x="514.0" y="1635.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.03%)</title><rect x="514.0" y="1619.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1016363973.test (1 samples, 0.03%)</title><rect x="514.0" y="1603.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.0" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="514.0" y="1587.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.0" y="1598.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="514.0" y="1571.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.0" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="514.0" y="1555.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.0" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="514.0" y="1539.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.0" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="514.0" y="1523.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.0" y="1534.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="514.0" y="1507.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.0" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="514.3" y="1683.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.06%)</title><rect x="514.7" y="1779.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.7" y="1790.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.06%)</title><rect x="514.7" y="1763.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.7" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="515.0" y="1747.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (16 samples, 0.47%)</title><rect x="515.4" y="1779.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.4" y="1790.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (16 samples, 0.47%)</title><rect x="515.4" y="1763.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="515.4" y="1747.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.4" y="1758.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="515.4" y="1731.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.4" y="1742.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.44%)</title><rect x="515.7" y="1747.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.7" y="1758.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.18%)</title><rect x="515.7" y="1731.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="518.7" y="1742.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.06%)</title><rect x="515.7" y="1715.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="518.7" y="1726.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.03%)</title><rect x="515.7" y="1699.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="518.7" y="1710.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="516.1" y="1699.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="519.1" y="1710.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.03%)</title><rect x="516.4" y="1715.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="519.4" y="1726.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="516.8" y="1715.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="519.8" y="1726.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.06%)</title><rect x="517.1" y="1715.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.1" y="1726.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="517.5" y="1699.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="520.5" y="1710.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.03%)</title><rect x="517.8" y="1731.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="520.8" y="1742.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.24%)</title><rect x="518.1" y="1731.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.1" y="1742.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.24%)</title><rect x="518.1" y="1715.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.1" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="518.1" y="1699.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.1" y="1710.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="518.1" y="1683.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.1" y="1694.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="518.1" y="1667.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.1" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="518.5" y="1699.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="518.5" y="1683.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.5" y="1694.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="518.5" y="1667.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.5" y="1678.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (6 samples, 0.18%)</title><rect x="518.8" y="1699.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.03%)</title><rect x="518.8" y="1683.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.8" y="1694.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="518.8" y="1667.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.8" y="1678.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="518.8" y="1651.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.8" y="1662.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.15%)</title><rect x="519.2" y="1683.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.2" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.12%)</title><rect x="519.5" y="1667.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.5" y="1678.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.06%)</title><rect x="519.5" y="1651.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.5" y="1662.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="520.2" y="1651.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="523.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (6 samples, 0.18%)</title><rect x="520.9" y="1795.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.03%)</title><rect x="521.6" y="1779.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.03%)</title><rect x="521.6" y="1763.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (2 samples, 0.06%)</title><rect x="522.0" y="1779.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.03%)</title><rect x="522.7" y="1779.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (18 samples, 0.53%)</title><rect x="523.0" y="1795.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (18 samples, 0.53%)</title><rect x="523.0" y="1779.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.53%)</title><rect x="523.0" y="1763.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (18 samples, 0.53%)</title><rect x="523.0" y="1747.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.0" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (18 samples, 0.53%)</title><rect x="523.0" y="1731.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.0" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.isCancelled (1 samples, 0.03%)</title><rect x="523.0" y="1715.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.0" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (17 samples, 0.50%)</title><rect x="523.4" y="1715.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.50%)</title><rect x="523.4" y="1699.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.50%)</title><rect x="523.4" y="1683.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.4" y="1694.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="523.4" y="1667.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="526.4" y="1678.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="523.4" y="1651.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="526.4" y="1662.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.47%)</title><rect x="523.7" y="1667.0" width="5.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="526.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="525.1" y="1651.0" width="4.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="528.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="525.1" y="1635.0" width="4.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="528.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="525.1" y="1619.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="528.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="525.4" y="1603.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="528.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="525.4" y="1587.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="528.4" y="1598.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="526.1" y="1571.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="529.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="526.1" y="1555.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="529.1" y="1566.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="526.1" y="1539.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="529.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (4 samples, 0.12%)</title><rect x="529.3" y="1859.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.3" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (4 samples, 0.12%)</title><rect x="529.3" y="1843.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.3" y="1854.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.12%)</title><rect x="529.3" y="1827.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.3" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.12%)</title><rect x="529.3" y="1811.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.3" y="1822.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.03%)</title><rect x="529.3" y="1795.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.3" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="529.3" y="1779.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.3" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.03%)</title><rect x="529.3" y="1763.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.3" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.09%)</title><rect x="529.6" y="1795.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.6" y="1806.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (3 samples, 0.09%)</title><rect x="529.6" y="1779.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.6" y="1790.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.06%)</title><rect x="530.0" y="1763.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.0" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="530.0" y="1747.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.0" y="1758.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="530.0" y="1731.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="530.0" y="1715.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.0" y="1726.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="530.0" y="1699.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.0" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="530.0" y="1683.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="533.0" y="1694.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="530.3" y="1747.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.3" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (1 samples, 0.03%)</title><rect x="530.3" y="1731.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.3" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="530.3" y="1715.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1016363973.test (1 samples, 0.03%)</title><rect x="530.3" y="1699.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="530.3" y="1683.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.3" y="1694.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="530.3" y="1667.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.3" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="530.3" y="1651.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.3" y="1662.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="530.3" y="1635.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.3" y="1646.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="530.3" y="1619.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.3" y="1630.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="530.3" y="1603.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.3" y="1614.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.builder (21 samples, 0.62%)</title><rect x="530.7" y="1859.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.7" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="531.0" y="1843.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.0" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.03%)</title><rect x="531.4" y="1827.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (1 samples, 0.03%)</title><rect x="531.4" y="1811.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.4" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="531.4" y="1795.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.03%)</title><rect x="531.4" y="1779.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="1790.0"></text>
</g>
<g>
<title>java/net/URI.create (13 samples, 0.38%)</title><rect x="531.7" y="1843.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.7" y="1854.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (13 samples, 0.38%)</title><rect x="531.7" y="1827.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.7" y="1838.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (13 samples, 0.38%)</title><rect x="531.7" y="1811.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.7" y="1822.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (1 samples, 0.03%)</title><rect x="531.7" y="1795.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.7" y="1806.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="531.7" y="1779.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.7" y="1790.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="531.7" y="1763.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.7" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="531.7" y="1747.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="531.7" y="1731.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.7" y="1742.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="532.1" y="1795.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.1" y="1806.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="532.1" y="1779.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.1" y="1790.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.03%)</title><rect x="532.1" y="1763.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.1" y="1774.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (11 samples, 0.32%)</title><rect x="532.4" y="1795.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.4" y="1806.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="532.7" y="1779.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.7" y="1790.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="532.7" y="1763.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.7" y="1774.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (8 samples, 0.24%)</title><rect x="533.1" y="1779.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.1" y="1790.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.18%)</title><rect x="533.4" y="1763.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.4" y="1774.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.03%)</title><rect x="533.4" y="1747.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.4" y="1758.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="533.4" y="1731.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.4" y="1742.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="533.4" y="1715.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.4" y="1726.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.09%)</title><rect x="533.8" y="1747.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.8" y="1758.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.06%)</title><rect x="534.1" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.1" y="1742.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.03%)</title><rect x="534.5" y="1715.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.5" y="1726.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.03%)</title><rect x="534.8" y="1747.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.8" y="1758.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.03%)</title><rect x="534.8" y="1731.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.8" y="1742.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="534.8" y="1715.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="534.8" y="1699.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="534.8" y="1683.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.8" y="1694.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="535.2" y="1747.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.2" y="1758.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="535.2" y="1731.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.2" y="1742.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="535.2" y="1715.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.2" y="1726.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="535.2" y="1699.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.2" y="1710.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="535.5" y="1763.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.5" y="1774.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="535.9" y="1779.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.06%)</title><rect x="536.2" y="1843.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.2" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.06%)</title><rect x="536.2" y="1827.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 0.03%)</title><rect x="536.2" y="1811.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1016363973.test (1 samples, 0.03%)</title><rect x="536.2" y="1795.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="536.2" y="1779.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.2" y="1790.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="536.2" y="1763.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.2" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="536.2" y="1747.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.2" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="536.2" y="1731.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.2" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="536.2" y="1715.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.2" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="536.2" y="1699.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.2" y="1710.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="536.2" y="1683.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.2" y="1694.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="536.2" y="1667.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.2" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="536.2" y="1651.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="536.2" y="1635.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (1 samples, 0.03%)</title><rect x="536.6" y="1811.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.09%)</title><rect x="536.9" y="1843.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.09%)</title><rect x="536.9" y="1827.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.09%)</title><rect x="536.9" y="1811.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.9" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.06%)</title><rect x="536.9" y="1795.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.9" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="537.6" y="1795.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.6" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromise.&lt;init&gt; (5 samples, 0.15%)</title><rect x="538.0" y="1875.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.0" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromiseContext.schedule (5 samples, 0.15%)</title><rect x="538.0" y="1859.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedScheduledExecutorService.schedule (5 samples, 0.15%)</title><rect x="538.0" y="1843.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (5 samples, 0.15%)</title><rect x="538.0" y="1827.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.0" y="1838.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.03%)</title><rect x="538.0" y="1811.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="541.0" y="1822.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.03%)</title><rect x="538.0" y="1795.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="541.0" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.03%)</title><rect x="538.0" y="1779.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="541.0" y="1790.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.03%)</title><rect x="538.0" y="1763.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.0" y="1774.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="538.0" y="1747.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="541.0" y="1758.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="538.0" y="1731.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="541.0" y="1742.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="538.0" y="1715.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="541.0" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (3 samples, 0.09%)</title><rect x="538.3" y="1811.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.3" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (3 samples, 0.09%)</title><rect x="538.3" y="1795.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.09%)</title><rect x="538.3" y="1779.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (1 samples, 0.03%)</title><rect x="539.3" y="1811.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.3" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (1 samples, 0.03%)</title><rect x="539.3" y="1795.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.3" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (1 samples, 0.03%)</title><rect x="539.3" y="1779.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (1 samples, 0.03%)</title><rect x="539.3" y="1763.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="539.3" y="1747.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="539.3" y="1731.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.3" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="539.3" y="1715.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="539.3" y="1699.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.3" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="539.3" y="1683.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="539.3" y="1667.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.3" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="539.3" y="1651.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.3" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (1 samples, 0.03%)</title><rect x="539.7" y="1875.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.7" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (1 samples, 0.03%)</title><rect x="539.7" y="1859.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.7" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (67 samples, 1.97%)</title><rect x="540.0" y="1923.0" width="23.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.0" y="1934.0">r..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (67 samples, 1.97%)</title><rect x="540.0" y="1907.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.0" y="1918.0">r..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (3 samples, 0.09%)</title><rect x="540.4" y="1891.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.09%)</title><rect x="540.4" y="1875.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.4" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="540.4" y="1859.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.4" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.09%)</title><rect x="540.4" y="1843.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.4" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.09%)</title><rect x="540.4" y="1827.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.4" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.09%)</title><rect x="540.4" y="1811.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.4" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.09%)</title><rect x="540.4" y="1795.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.4" y="1806.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.09%)</title><rect x="540.4" y="1779.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.4" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="540.4" y="1763.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="1774.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="540.4" y="1747.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.4" y="1758.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="540.4" y="1731.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.4" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="540.4" y="1715.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="540.4" y="1699.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.4" y="1710.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="540.4" y="1683.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.4" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.06%)</title><rect x="540.7" y="1763.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.7" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.06%)</title><rect x="540.7" y="1747.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.7" y="1758.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="541.1" y="1731.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.1" y="1742.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="541.1" y="1715.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.1" y="1726.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="541.1" y="1699.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.1" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (63 samples, 1.86%)</title><rect x="541.4" y="1891.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.4" y="1902.0">r..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="541.4" y="1875.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.4" y="1886.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="541.4" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.4" y="1870.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="541.4" y="1843.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.4" y="1854.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="541.4" y="1827.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.4" y="1838.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="541.4" y="1811.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.4" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (62 samples, 1.83%)</title><rect x="541.8" y="1875.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.8" y="1886.0">r..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="541.8" y="1859.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.8" y="1870.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="541.8" y="1843.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.8" y="1854.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="541.8" y="1827.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.8" y="1838.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (1 samples, 0.03%)</title><rect x="541.8" y="1811.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.8" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.09%)</title><rect x="542.1" y="1859.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.09%)</title><rect x="542.1" y="1843.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.09%)</title><rect x="542.1" y="1827.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1811.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="545.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1795.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="545.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1779.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="545.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1763.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="545.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1747.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="545.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1731.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="545.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="542.1" y="1715.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="545.1" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.03%)</title><rect x="542.5" y="1811.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.5" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.03%)</title><rect x="542.5" y="1795.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.5" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps.makeRef (1 samples, 0.03%)</title><rect x="542.8" y="1811.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.8" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.15%)</title><rect x="543.2" y="1859.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.2" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.15%)</title><rect x="543.2" y="1843.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.2" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.15%)</title><rect x="543.2" y="1827.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.2" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.15%)</title><rect x="543.2" y="1811.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.2" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="543.2" y="1795.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.2" y="1806.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="543.2" y="1779.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.2" y="1790.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="543.2" y="1763.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.2" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="543.2" y="1747.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="543.2" y="1731.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.2" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="543.2" y="1715.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.2" y="1726.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.12%)</title><rect x="543.5" y="1795.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.5" y="1806.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.09%)</title><rect x="543.5" y="1779.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.5" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.09%)</title><rect x="543.5" y="1763.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.5" y="1774.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.06%)</title><rect x="543.5" y="1747.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.5" y="1758.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.06%)</title><rect x="543.5" y="1731.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.5" y="1742.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.06%)</title><rect x="543.5" y="1715.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.5" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.06%)</title><rect x="543.5" y="1699.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.5" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.06%)</title><rect x="543.5" y="1683.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.5" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.06%)</title><rect x="543.5" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.5" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="544.2" y="1747.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.2" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (1 samples, 0.03%)</title><rect x="544.2" y="1731.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.2" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (1 samples, 0.03%)</title><rect x="544.2" y="1715.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.2" y="1726.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="544.2" y="1699.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.2" y="1710.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="544.2" y="1683.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.2" y="1694.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="544.2" y="1667.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.2" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (1 samples, 0.03%)</title><rect x="544.6" y="1779.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.6" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (1 samples, 0.03%)</title><rect x="544.6" y="1763.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.6" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="544.6" y="1747.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.6" y="1758.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="544.6" y="1731.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.6" y="1742.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="544.6" y="1715.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.6" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="544.6" y="1699.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.6" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (53 samples, 1.56%)</title><rect x="544.9" y="1859.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.9" y="1870.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (46 samples, 1.35%)</title><rect x="544.9" y="1843.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.9" y="1854.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (46 samples, 1.35%)</title><rect x="544.9" y="1827.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (46 samples, 1.35%)</title><rect x="544.9" y="1811.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (46 samples, 1.35%)</title><rect x="544.9" y="1795.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (45 samples, 1.33%)</title><rect x="545.3" y="1779.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.03%)</title><rect x="545.3" y="1763.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.03%)</title><rect x="545.3" y="1747.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="545.3" y="1731.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.3" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="545.3" y="1715.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.3" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="545.3" y="1699.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.3" y="1710.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="545.3" y="1683.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.3" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (44 samples, 1.30%)</title><rect x="545.6" y="1763.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.6" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (44 samples, 1.30%)</title><rect x="545.6" y="1747.0" width="15.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.6" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="546.0" y="1731.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.0" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="546.0" y="1715.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.0" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="546.0" y="1699.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.0" y="1710.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="546.0" y="1683.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.0" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (42 samples, 1.24%)</title><rect x="546.3" y="1731.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.3" y="1742.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="551.5" y="1715.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.5" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (26 samples, 0.77%)</title><rect x="551.9" y="1715.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.9" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.74%)</title><rect x="552.2" y="1699.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.2" y="1710.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.56%)</title><rect x="554.3" y="1683.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.3" y="1694.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.06%)</title><rect x="554.3" y="1667.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.3" y="1678.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.44%)</title><rect x="555.0" y="1667.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1651.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="560.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1635.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="560.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1619.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="560.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1603.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="560.1" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1587.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="560.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1571.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="560.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="557.1" y="1555.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="560.1" y="1566.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.24%)</title><rect x="557.4" y="1651.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.4" y="1662.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.09%)</title><rect x="557.8" y="1635.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.8" y="1646.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.12%)</title><rect x="558.8" y="1635.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.8" y="1646.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.06%)</title><rect x="560.2" y="1667.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.2" y="1678.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="560.6" y="1651.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.6" y="1662.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (3 samples, 0.09%)</title><rect x="560.9" y="1843.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.9" y="1854.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (2 samples, 0.06%)</title><rect x="560.9" y="1827.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.03%)</title><rect x="561.6" y="1827.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.6" y="1838.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (4 samples, 0.12%)</title><rect x="561.9" y="1843.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.9" y="1854.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="561.9" y="1827.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.9" y="1838.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="561.9" y="1811.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.06%)</title><rect x="562.6" y="1827.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.6" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.06%)</title><rect x="562.6" y="1811.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.06%)</title><rect x="562.6" y="1795.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="562.6" y="1779.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.6" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="563.0" y="1763.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.0" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.valueOf (2 samples, 0.06%)</title><rect x="563.3" y="1923.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.3" y="1934.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="563.3" y="1907.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.3" y="1918.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="563.3" y="1891.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.3" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="563.7" y="1907.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.7" y="1918.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="563.7" y="1891.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.7" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="563.7" y="1875.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.7" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="563.7" y="1859.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.7" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (1 samples, 0.03%)</title><rect x="563.7" y="1843.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.7" y="1854.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (1 samples, 0.03%)</title><rect x="563.7" y="1827.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.7" y="1838.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="563.7" y="1811.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.7" y="1822.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="563.7" y="1795.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.7" y="1806.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="563.7" y="1779.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.7" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="563.7" y="1763.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.7" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.fromCompletableFuture (16 samples, 0.47%)</title><rect x="564.0" y="1923.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.0" y="1934.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (2 samples, 0.06%)</title><rect x="564.0" y="1907.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.0" y="1918.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (2 samples, 0.06%)</title><rect x="564.0" y="1891.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.0" y="1902.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.06%)</title><rect x="564.0" y="1875.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.0" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.03%)</title><rect x="564.0" y="1859.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.0" y="1870.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.03%)</title><rect x="564.0" y="1843.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.0" y="1854.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.03%)</title><rect x="564.0" y="1827.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.0" y="1838.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.03%)</title><rect x="564.0" y="1811.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.0" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.03%)</title><rect x="564.0" y="1795.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.0" y="1806.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.03%)</title><rect x="564.0" y="1779.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.0" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.03%)</title><rect x="564.0" y="1763.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.0" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.03%)</title><rect x="564.0" y="1747.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.0" y="1758.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.03%)</title><rect x="564.0" y="1731.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.0" y="1742.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.03%)</title><rect x="564.0" y="1715.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.0" y="1726.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.03%)</title><rect x="564.0" y="1699.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.0" y="1710.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.03%)</title><rect x="564.0" y="1683.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.0" y="1694.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.03%)</title><rect x="564.0" y="1667.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="564.0" y="1651.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="567.0" y="1662.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="564.0" y="1635.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="567.0" y="1646.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.03%)</title><rect x="564.4" y="1859.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.4" y="1870.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (1 samples, 0.03%)</title><rect x="564.4" y="1843.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (1 samples, 0.03%)</title><rect x="564.4" y="1827.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (1 samples, 0.03%)</title><rect x="564.4" y="1811.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.4" y="1822.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (1 samples, 0.03%)</title><rect x="564.4" y="1795.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.4" y="1806.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.computeFormat (1 samples, 0.03%)</title><rect x="564.4" y="1779.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.4" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (14 samples, 0.41%)</title><rect x="564.7" y="1907.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (14 samples, 0.41%)</title><rect x="564.7" y="1891.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.cleanStack (1 samples, 0.03%)</title><rect x="564.7" y="1875.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.7" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isLive (1 samples, 0.03%)</title><rect x="564.7" y="1859.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.7" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (13 samples, 0.38%)</title><rect x="565.1" y="1875.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (13 samples, 0.38%)</title><rect x="565.1" y="1859.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (13 samples, 0.38%)</title><rect x="565.1" y="1843.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.38%)</title><rect x="565.1" y="1827.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.1" y="1838.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.15%)</title><rect x="565.1" y="1811.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="568.1" y="1822.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="565.1" y="1795.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="568.1" y="1806.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="565.1" y="1779.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="568.1" y="1790.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="565.4" y="1795.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="568.4" y="1806.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.09%)</title><rect x="565.8" y="1795.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="568.8" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="566.1" y="1779.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="569.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="566.1" y="1763.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="569.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="566.5" y="1747.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="569.5" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="566.5" y="1731.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="569.5" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="566.5" y="1715.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="569.5" y="1726.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.24%)</title><rect x="566.8" y="1811.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="569.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="568.5" y="1795.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="571.5" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="568.5" y="1779.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="571.5" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="568.9" y="1763.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="571.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="568.9" y="1747.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="571.9" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="568.9" y="1731.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="571.9" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="569.2" y="1715.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="572.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="569.2" y="1699.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="572.2" y="1710.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (35 samples, 1.03%)</title><rect x="569.6" y="1923.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.6" y="1934.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.09%)</title><rect x="570.3" y="1907.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.3" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.09%)</title><rect x="570.3" y="1891.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.3" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.06%)</title><rect x="570.6" y="1875.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.6" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.06%)</title><rect x="570.6" y="1859.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.6" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.06%)</title><rect x="570.6" y="1843.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.6" y="1854.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="570.6" y="1827.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="573.6" y="1838.0"></text>
</g>
<g>
<title>java/util/Collection.spliterator (1 samples, 0.03%)</title><rect x="571.0" y="1827.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.0" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (19 samples, 0.56%)</title><rect x="571.3" y="1907.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.3" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.53%)</title><rect x="571.3" y="1891.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.3" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (18 samples, 0.53%)</title><rect x="571.3" y="1875.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.3" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.53%)</title><rect x="571.3" y="1859.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.3" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.47%)</title><rect x="571.3" y="1843.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.3" y="1854.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.06%)</title><rect x="571.3" y="1827.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.3" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.06%)</title><rect x="571.3" y="1811.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.3" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (2 samples, 0.06%)</title><rect x="571.3" y="1795.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.3" y="1806.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="571.7" y="1779.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="574.7" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (14 samples, 0.41%)</title><rect x="572.0" y="1827.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.0" y="1838.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (9 samples, 0.27%)</title><rect x="572.0" y="1811.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.0" y="1822.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.estimateSize (1 samples, 0.03%)</title><rect x="572.0" y="1795.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.0" y="1806.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (1 samples, 0.03%)</title><rect x="572.0" y="1779.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.0" y="1790.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (8 samples, 0.24%)</title><rect x="572.4" y="1795.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.4" y="1806.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.18%)</title><rect x="572.4" y="1779.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.4" y="1790.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.18%)</title><rect x="572.4" y="1763.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.4" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="572.4" y="1747.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.4" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.03%)</title><rect x="572.4" y="1731.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.4" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="572.4" y="1715.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.4" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="572.4" y="1699.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.4" y="1710.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (1 samples, 0.03%)</title><rect x="572.4" y="1683.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.4" y="1694.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (1 samples, 0.03%)</title><rect x="572.4" y="1667.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.03%)</title><rect x="572.4" y="1651.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.4" y="1662.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.15%)</title><rect x="572.7" y="1747.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.7" y="1758.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="572.7" y="1731.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="575.7" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="573.1" y="1731.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.1" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="573.4" y="1715.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (1 samples, 0.03%)</title><rect x="573.8" y="1699.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.8" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.03%)</title><rect x="574.1" y="1731.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.1" y="1742.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.size (2 samples, 0.06%)</title><rect x="574.5" y="1779.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.5" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.size (2 samples, 0.06%)</title><rect x="574.5" y="1763.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.5" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (2 samples, 0.06%)</title><rect x="574.5" y="1747.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.5" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="574.5" y="1731.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.5" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="574.5" y="1715.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.5" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="574.5" y="1699.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="574.5" y="1683.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.5" y="1694.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.03%)</title><rect x="574.5" y="1667.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="577.5" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="574.8" y="1731.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.8" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="574.8" y="1715.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.8" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 0.03%)</title><rect x="574.8" y="1699.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.8" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="574.8" y="1683.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.8" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.12%)</title><rect x="575.1" y="1811.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.1" y="1822.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (4 samples, 0.12%)</title><rect x="575.1" y="1795.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.1" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.12%)</title><rect x="575.1" y="1779.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.1" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (4 samples, 0.12%)</title><rect x="575.1" y="1763.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.1" y="1774.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.09%)</title><rect x="575.5" y="1747.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.5" y="1758.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.09%)</title><rect x="575.5" y="1731.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.5" y="1742.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.09%)</title><rect x="575.5" y="1715.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.5" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="576.5" y="1811.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.5" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (1 samples, 0.03%)</title><rect x="576.5" y="1795.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.5" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="576.5" y="1779.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.5" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (1 samples, 0.03%)</title><rect x="576.5" y="1763.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.5" y="1774.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (1 samples, 0.03%)</title><rect x="576.5" y="1747.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.5" y="1758.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.03%)</title><rect x="576.5" y="1731.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.5" y="1742.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.03%)</title><rect x="576.5" y="1715.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.5" y="1726.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (1 samples, 0.03%)</title><rect x="576.5" y="1699.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.5" y="1710.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="576.5" y="1683.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.5" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.06%)</title><rect x="576.9" y="1843.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.9" y="1854.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="576.9" y="1827.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="579.9" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="577.2" y="1827.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1 samples, 0.03%)</title><rect x="577.6" y="1891.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.6" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (1 samples, 0.03%)</title><rect x="577.9" y="1907.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.9" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (1 samples, 0.03%)</title><rect x="577.9" y="1891.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.9" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (10 samples, 0.29%)</title><rect x="578.3" y="1907.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.3" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (10 samples, 0.29%)</title><rect x="578.3" y="1891.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.3" y="1902.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="578.3" y="1875.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.3" y="1886.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="578.3" y="1859.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.3" y="1870.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (3 samples, 0.09%)</title><rect x="578.6" y="1875.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.6" y="1886.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (2 samples, 0.06%)</title><rect x="578.6" y="1859.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.6" y="1870.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (2 samples, 0.06%)</title><rect x="578.6" y="1843.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.6" y="1854.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (1 samples, 0.03%)</title><rect x="579.0" y="1827.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.0" y="1838.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implDigest (1 samples, 0.03%)</title><rect x="579.0" y="1811.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.0" y="1822.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.implCompress (1 samples, 0.03%)</title><rect x="579.0" y="1795.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.0" y="1806.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iLittle64 (1 samples, 0.03%)</title><rect x="579.0" y="1779.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.0" y="1790.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (1 samples, 0.03%)</title><rect x="579.3" y="1859.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1843.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="582.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1827.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="582.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1811.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="582.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1795.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="582.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1779.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="582.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1763.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="582.3" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="579.3" y="1747.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="582.3" y="1758.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (6 samples, 0.18%)</title><rect x="579.7" y="1875.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.7" y="1886.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.&lt;init&gt; (1 samples, 0.03%)</title><rect x="579.7" y="1859.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.7" y="1870.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (5 samples, 0.15%)</title><rect x="580.0" y="1859.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.0" y="1870.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (5 samples, 0.15%)</title><rect x="580.0" y="1843.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.0" y="1854.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (5 samples, 0.15%)</title><rect x="580.0" y="1827.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.0" y="1838.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (4 samples, 0.12%)</title><rect x="580.4" y="1811.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.4" y="1822.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (2 samples, 0.06%)</title><rect x="580.7" y="1795.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.7" y="1806.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.03%)</title><rect x="580.7" y="1779.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.7" y="1790.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.03%)</title><rect x="580.7" y="1763.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.getExecutableSharedParameterTypes (1 samples, 0.03%)</title><rect x="580.7" y="1747.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.03%)</title><rect x="581.1" y="1779.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.1" y="1790.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.03%)</title><rect x="581.1" y="1763.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.1" y="1774.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="581.4" y="1795.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.4" y="1806.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="581.4" y="1779.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.4" y="1790.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="581.4" y="1763.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="581.4" y="1747.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.4" y="1758.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.collapseFutures (1 samples, 0.03%)</title><rect x="581.8" y="1923.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEach (1 samples, 0.03%)</title><rect x="581.8" y="1907.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEachFrom (1 samples, 0.03%)</title><rect x="581.8" y="1891.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.8" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.accept (1 samples, 0.03%)</title><rect x="581.8" y="1875.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.8" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$collapseFutures$2 (1 samples, 0.03%)</title><rect x="581.8" y="1859.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.03%)</title><rect x="581.8" y="1843.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="581.8" y="1827.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="581.8" y="1811.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="581.8" y="1795.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.8" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (129 samples, 3.80%)</title><rect x="582.1" y="1971.0" width="44.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.1" y="1982.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (129 samples, 3.80%)</title><rect x="582.1" y="1955.0" width="44.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.1" y="1966.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (126 samples, 3.71%)</title><rect x="582.1" y="1939.0" width="43.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.1" y="1950.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.06%)</title><rect x="582.1" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="582.1" y="1907.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.1" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.03%)</title><rect x="582.1" y="1891.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.1" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="582.4" y="1891.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.4" y="1902.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (124 samples, 3.65%)</title><rect x="582.8" y="1923.0" width="43.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.8" y="1934.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (124 samples, 3.65%)</title><rect x="582.8" y="1907.0" width="43.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.8" y="1918.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (124 samples, 3.65%)</title><rect x="582.8" y="1891.0" width="43.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.8" y="1902.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (124 samples, 3.65%)</title><rect x="582.8" y="1875.0" width="43.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.8" y="1886.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="583.1" y="1859.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="586.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="583.5" y="1859.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="586.5" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="583.5" y="1843.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="586.5" y="1854.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.09%)</title><rect x="583.5" y="1827.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="586.5" y="1838.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="583.5" y="1811.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="586.5" y="1822.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="583.8" y="1811.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="586.8" y="1822.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="584.2" y="1811.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="587.2" y="1822.0"></text>
</g>
<g>
<title>__send (119 samples, 3.51%)</title><rect x="584.5" y="1859.0" width="41.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="587.5" y="1870.0">__s..</text>
</g>
<g>
<title>[unknown] (117 samples, 3.45%)</title><rect x="585.2" y="1843.0" width="40.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="588.2" y="1854.0">[un..</text>
</g>
<g>
<title>[unknown] (117 samples, 3.45%)</title><rect x="585.2" y="1827.0" width="40.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="588.2" y="1838.0">[un..</text>
</g>
<g>
<title>[unknown] (115 samples, 3.39%)</title><rect x="585.9" y="1811.0" width="40.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="588.9" y="1822.0">[un..</text>
</g>
<g>
<title>[unknown] (115 samples, 3.39%)</title><rect x="585.9" y="1795.0" width="40.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="588.9" y="1806.0">[un..</text>
</g>
<g>
<title>[unknown] (114 samples, 3.36%)</title><rect x="586.3" y="1779.0" width="39.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="589.3" y="1790.0">[un..</text>
</g>
<g>
<title>[unknown] (113 samples, 3.33%)</title><rect x="586.6" y="1763.0" width="39.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="589.6" y="1774.0">[un..</text>
</g>
<g>
<title>[unknown] (112 samples, 3.30%)</title><rect x="587.0" y="1747.0" width="38.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="590.0" y="1758.0">[un..</text>
</g>
<g>
<title>[unknown] (112 samples, 3.30%)</title><rect x="587.0" y="1731.0" width="38.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="590.0" y="1742.0">[un..</text>
</g>
<g>
<title>[unknown] (107 samples, 3.15%)</title><rect x="588.7" y="1715.0" width="37.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="591.7" y="1726.0">[un..</text>
</g>
<g>
<title>[unknown] (105 samples, 3.09%)</title><rect x="589.4" y="1699.0" width="36.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="592.4" y="1710.0">[un..</text>
</g>
<g>
<title>[unknown] (100 samples, 2.95%)</title><rect x="591.1" y="1683.0" width="34.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="594.1" y="1694.0">[u..</text>
</g>
<g>
<title>[unknown] (94 samples, 2.77%)</title><rect x="593.2" y="1667.0" width="32.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="596.2" y="1678.0">[u..</text>
</g>
<g>
<title>[unknown] (87 samples, 2.56%)</title><rect x="595.7" y="1651.0" width="30.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="598.7" y="1662.0">[u..</text>
</g>
<g>
<title>[unknown] (85 samples, 2.50%)</title><rect x="596.4" y="1635.0" width="29.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="599.4" y="1646.0">[u..</text>
</g>
<g>
<title>[unknown] (82 samples, 2.42%)</title><rect x="597.4" y="1619.0" width="28.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="600.4" y="1630.0">[u..</text>
</g>
<g>
<title>[unknown] (79 samples, 2.33%)</title><rect x="598.4" y="1603.0" width="27.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="601.4" y="1614.0">[..</text>
</g>
<g>
<title>[unknown] (78 samples, 2.30%)</title><rect x="598.8" y="1587.0" width="27.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="601.8" y="1598.0">[..</text>
</g>
<g>
<title>[unknown] (74 samples, 2.18%)</title><rect x="600.2" y="1571.0" width="25.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="603.2" y="1582.0">[..</text>
</g>
<g>
<title>[unknown] (67 samples, 1.97%)</title><rect x="602.6" y="1555.0" width="23.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="605.6" y="1566.0">[..</text>
</g>
<g>
<title>[unknown] (62 samples, 1.83%)</title><rect x="604.3" y="1539.0" width="21.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="607.3" y="1550.0">[..</text>
</g>
<g>
<title>[unknown] (50 samples, 1.47%)</title><rect x="608.5" y="1523.0" width="17.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="611.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.44%)</title><rect x="608.9" y="1507.0" width="17.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="611.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.38%)</title><rect x="609.6" y="1491.0" width="16.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="612.6" y="1502.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.30%)</title><rect x="610.6" y="1475.0" width="15.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="613.6" y="1486.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.24%)</title><rect x="611.3" y="1459.0" width="14.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="614.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.18%)</title><rect x="612.0" y="1443.0" width="13.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="615.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.18%)</title><rect x="612.0" y="1427.0" width="13.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="615.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.12%)</title><rect x="612.7" y="1411.0" width="13.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="615.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.03%)</title><rect x="613.7" y="1395.0" width="12.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="616.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.00%)</title><rect x="614.1" y="1379.0" width="11.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="617.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.94%)</title><rect x="614.8" y="1363.0" width="11.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="617.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.91%)</title><rect x="615.1" y="1347.0" width="10.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="618.1" y="1358.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.82%)</title><rect x="616.2" y="1331.0" width="9.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="619.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.74%)</title><rect x="617.2" y="1315.0" width="8.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="620.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="618.2" y="1299.0" width="7.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="621.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="620.0" y="1283.0" width="5.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="623.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="622.4" y="1267.0" width="3.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="625.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="623.1" y="1251.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="626.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="623.1" y="1235.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="626.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="625.9" y="1939.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="626.2" y="1923.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="626.2" y="1907.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="626.2" y="1891.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="626.2" y="1875.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="626.2" y="1859.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.2" y="1870.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.03%)</title><rect x="626.6" y="1939.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="629.6" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="626.6" y="1923.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (263 samples, 7.75%)</title><rect x="626.9" y="2051.0" width="91.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.9" y="2062.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (263 samples, 7.75%)</title><rect x="626.9" y="2035.0" width="91.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.9" y="2046.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (179 samples, 5.27%)</title><rect x="627.6" y="2019.0" width="62.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.6" y="2030.0">java/u..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (1 samples, 0.03%)</title><rect x="629.7" y="2003.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.7" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (1 samples, 0.03%)</title><rect x="629.7" y="1987.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.7" y="1998.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="629.7" y="1971.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="632.7" y="1982.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="629.7" y="1955.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="632.7" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (2 samples, 0.06%)</title><rect x="630.1" y="2003.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.1" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (2 samples, 0.06%)</title><rect x="630.1" y="1987.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (169 samples, 4.98%)</title><rect x="630.8" y="2003.0" width="58.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.8" y="2014.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (169 samples, 4.98%)</title><rect x="630.8" y="1987.0" width="58.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.8" y="1998.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (169 samples, 4.98%)</title><rect x="630.8" y="1971.0" width="58.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.8" y="1982.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (93 samples, 2.74%)</title><rect x="630.8" y="1955.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.8" y="1966.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (14 samples, 0.41%)</title><rect x="630.8" y="1939.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.38%)</title><rect x="631.1" y="1923.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (13 samples, 0.38%)</title><rect x="631.1" y="1907.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.38%)</title><rect x="631.1" y="1891.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.38%)</title><rect x="631.1" y="1875.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.1" y="1886.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="631.1" y="1859.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="634.1" y="1870.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.06%)</title><rect x="631.1" y="1843.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="634.1" y="1854.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.32%)</title><rect x="631.8" y="1859.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="634.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="632.2" y="1843.0" width="3.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="635.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="632.2" y="1827.0" width="3.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="635.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="632.5" y="1811.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="635.5" y="1822.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="632.5" y="1795.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="635.5" y="1806.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="632.5" y="1779.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="635.5" y="1790.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="632.8" y="1763.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="635.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="632.8" y="1747.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="635.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="632.8" y="1731.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="635.8" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (79 samples, 2.33%)</title><rect x="635.6" y="1939.0" width="27.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.6" y="1950.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$376/824065107.apply (79 samples, 2.33%)</title><rect x="635.6" y="1923.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.6" y="1934.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$6 (79 samples, 2.33%)</title><rect x="635.6" y="1907.0" width="27.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.6" y="1918.0">r..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (46 samples, 1.35%)</title><rect x="635.6" y="1891.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.6" y="1902.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (46 samples, 1.35%)</title><rect x="635.6" y="1875.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.6" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (45 samples, 1.33%)</title><rect x="636.0" y="1859.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.0" y="1870.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (42 samples, 1.24%)</title><rect x="636.0" y="1843.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.0" y="1854.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (42 samples, 1.24%)</title><rect x="636.0" y="1827.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="1838.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (42 samples, 1.24%)</title><rect x="636.0" y="1811.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.0" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (42 samples, 1.24%)</title><rect x="636.0" y="1795.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.0" y="1806.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (41 samples, 1.21%)</title><rect x="636.0" y="1779.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.0" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (41 samples, 1.21%)</title><rect x="636.0" y="1763.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.0" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (27 samples, 0.80%)</title><rect x="636.0" y="1747.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.0" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (25 samples, 0.74%)</title><rect x="636.0" y="1731.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.0" y="1742.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (25 samples, 0.74%)</title><rect x="636.0" y="1715.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.0" y="1726.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (25 samples, 0.74%)</title><rect x="636.0" y="1699.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.0" y="1710.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (25 samples, 0.74%)</title><rect x="636.0" y="1683.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.0" y="1694.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (25 samples, 0.74%)</title><rect x="636.0" y="1667.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.0" y="1678.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (25 samples, 0.74%)</title><rect x="636.0" y="1651.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.0" y="1662.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (25 samples, 0.74%)</title><rect x="636.0" y="1635.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.0" y="1646.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.12%)</title><rect x="636.0" y="1619.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="639.0" y="1630.0"></text>
</g>
<g>
<title>writeBytes (4 samples, 0.12%)</title><rect x="636.0" y="1603.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="639.0" y="1614.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="636.3" y="1587.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="639.3" y="1598.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.03%)</title><rect x="636.7" y="1587.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="639.7" y="1598.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="636.7" y="1571.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="639.7" y="1582.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.03%)</title><rect x="637.0" y="1587.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="640.0" y="1598.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.03%)</title><rect x="637.0" y="1571.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="640.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.62%)</title><rect x="637.4" y="1619.0" width="7.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="640.4" y="1630.0"></text>
</g>
<g>
<title>__write (21 samples, 0.62%)</title><rect x="637.4" y="1603.0" width="7.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="640.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="638.4" y="1587.0" width="6.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="641.4" y="1598.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="638.4" y="1571.0" width="6.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="641.4" y="1582.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="638.4" y="1555.0" width="6.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="641.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="638.4" y="1539.0" width="6.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="641.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="638.8" y="1523.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="641.8" y="1534.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="638.8" y="1507.0" width="5.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="641.8" y="1518.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="638.8" y="1491.0" width="5.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="641.8" y="1502.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="639.4" y="1475.0" width="5.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="642.4" y="1486.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="639.8" y="1459.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="642.8" y="1470.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="641.2" y="1443.0" width="3.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="644.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="641.2" y="1427.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="644.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="644.7" y="1731.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="644.7" y="1715.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.06%)</title><rect x="644.7" y="1699.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.7" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="644.7" y="1683.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.7" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="644.7" y="1667.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="644.7" y="1651.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="644.7" y="1635.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="647.7" y="1646.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="644.7" y="1619.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="647.7" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="645.0" y="1683.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.0" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="645.0" y="1667.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.0" y="1678.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (14 samples, 0.41%)</title><rect x="645.4" y="1747.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.4" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (14 samples, 0.41%)</title><rect x="645.4" y="1731.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.4" y="1742.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (14 samples, 0.41%)</title><rect x="645.4" y="1715.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.4" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (6 samples, 0.18%)</title><rect x="646.4" y="1699.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.4" y="1710.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (6 samples, 0.18%)</title><rect x="646.4" y="1683.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.4" y="1694.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (6 samples, 0.18%)</title><rect x="646.4" y="1667.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.4" y="1678.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (6 samples, 0.18%)</title><rect x="646.4" y="1651.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.4" y="1662.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (3 samples, 0.09%)</title><rect x="646.4" y="1635.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.4" y="1646.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (3 samples, 0.09%)</title><rect x="646.4" y="1619.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.4" y="1630.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (3 samples, 0.09%)</title><rect x="646.4" y="1603.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.4" y="1614.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (3 samples, 0.09%)</title><rect x="646.4" y="1587.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.4" y="1598.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (2 samples, 0.06%)</title><rect x="646.4" y="1571.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (1 samples, 0.03%)</title><rect x="646.7" y="1555.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.7" y="1566.0"></text>
</g>
<g>
<title>java/text/DigitList.set (1 samples, 0.03%)</title><rect x="647.1" y="1571.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.1" y="1582.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (3 samples, 0.09%)</title><rect x="647.4" y="1635.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.4" y="1646.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (3 samples, 0.09%)</title><rect x="647.4" y="1619.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.4" y="1630.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (3 samples, 0.09%)</title><rect x="647.4" y="1603.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.4" y="1614.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 0.03%)</title><rect x="647.4" y="1587.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.4" y="1598.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.03%)</title><rect x="647.4" y="1571.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.4" y="1582.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 0.06%)</title><rect x="647.8" y="1587.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.8" y="1598.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.03%)</title><rect x="648.1" y="1571.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.1" y="1582.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.03%)</title><rect x="648.1" y="1555.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.1" y="1566.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTransitionIndex (1 samples, 0.03%)</title><rect x="648.1" y="1539.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="648.5" y="1699.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="648.8" y="1699.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.09%)</title><rect x="649.2" y="1699.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.2" y="1710.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.09%)</title><rect x="649.2" y="1683.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.2" y="1694.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="649.2" y="1667.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.2" y="1678.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="649.2" y="1651.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.06%)</title><rect x="649.5" y="1667.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.5" y="1678.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="650.2" y="1779.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="650.2" y="1763.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.2" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (3 samples, 0.09%)</title><rect x="650.6" y="1843.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="650.9" y="1827.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="653.9" y="1838.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="650.9" y="1811.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="653.9" y="1822.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="651.3" y="1827.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="654.3" y="1838.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="651.3" y="1811.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="654.3" y="1822.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="651.3" y="1795.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="654.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1779.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="654.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1763.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="654.3" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1747.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="654.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1731.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="654.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1715.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="654.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1699.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="654.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.3" y="1683.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="654.3" y="1694.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (25 samples, 0.74%)</title><rect x="651.6" y="1891.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.6" y="1902.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (25 samples, 0.74%)</title><rect x="651.6" y="1875.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="1886.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (24 samples, 0.71%)</title><rect x="651.6" y="1859.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.6" y="1870.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (22 samples, 0.65%)</title><rect x="651.6" y="1843.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.6" y="1854.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (22 samples, 0.65%)</title><rect x="651.6" y="1827.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.6" y="1838.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 0.65%)</title><rect x="651.6" y="1811.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.6" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (22 samples, 0.65%)</title><rect x="651.6" y="1795.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.6" y="1806.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (22 samples, 0.65%)</title><rect x="651.6" y="1779.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.6" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (22 samples, 0.65%)</title><rect x="651.6" y="1763.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.6" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (9 samples, 0.27%)</title><rect x="651.6" y="1747.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.6" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (8 samples, 0.24%)</title><rect x="651.6" y="1731.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.6" y="1742.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (8 samples, 0.24%)</title><rect x="651.6" y="1715.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.6" y="1726.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (8 samples, 0.24%)</title><rect x="651.6" y="1699.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="651.6" y="1683.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.6" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1667.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="654.6" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1651.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="654.6" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1635.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="654.6" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1619.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="654.6" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1603.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="654.6" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1587.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="654.6" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="651.6" y="1571.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="654.6" y="1582.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (7 samples, 0.21%)</title><rect x="652.0" y="1683.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.0" y="1694.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (7 samples, 0.21%)</title><rect x="652.0" y="1667.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.0" y="1678.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (7 samples, 0.21%)</title><rect x="652.0" y="1651.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.0" y="1662.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.18%)</title><rect x="652.0" y="1635.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="652.0" y="1619.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="652.0" y="1603.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.12%)</title><rect x="652.3" y="1619.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.3" y="1630.0"></text>
</g>
<g>
<title>java/lang/Object.toString (4 samples, 0.12%)</title><rect x="652.3" y="1603.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.3" y="1614.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.03%)</title><rect x="652.3" y="1587.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.3" y="1598.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (2 samples, 0.06%)</title><rect x="652.7" y="1587.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (2 samples, 0.06%)</title><rect x="652.7" y="1571.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/Integer.formatUnsignedInt (2 samples, 0.06%)</title><rect x="652.7" y="1555.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.7" y="1566.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="652.7" y="1539.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="655.7" y="1550.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="653.0" y="1539.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="656.0" y="1550.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="653.4" y="1587.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="653.4" y="1571.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.4" y="1582.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="653.4" y="1555.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="656.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.4" y="1539.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="656.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.4" y="1523.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="656.4" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.4" y="1507.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="656.4" y="1518.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="653.7" y="1619.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="656.7" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="654.0" y="1635.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="654.0" y="1619.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.0" y="1630.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="654.0" y="1603.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.0" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.03%)</title><rect x="654.4" y="1731.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.4" y="1742.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 0.18%)</title><rect x="654.7" y="1747.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.7" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 0.18%)</title><rect x="654.7" y="1731.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.7" y="1742.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 0.18%)</title><rect x="654.7" y="1715.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.7" y="1726.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 0.15%)</title><rect x="655.1" y="1699.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.1" y="1710.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (5 samples, 0.15%)</title><rect x="655.1" y="1683.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.1" y="1694.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.15%)</title><rect x="655.1" y="1667.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.1" y="1678.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.15%)</title><rect x="655.1" y="1651.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.1" y="1662.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.09%)</title><rect x="655.1" y="1635.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="658.1" y="1646.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.09%)</title><rect x="655.1" y="1619.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="658.1" y="1630.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.03%)</title><rect x="655.1" y="1603.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="658.1" y="1614.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="655.4" y="1603.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="658.4" y="1614.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.03%)</title><rect x="655.8" y="1603.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="658.8" y="1614.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.03%)</title><rect x="655.8" y="1587.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="658.8" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1635.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="659.1" y="1646.0"></text>
</g>
<g>
<title>__write (2 samples, 0.06%)</title><rect x="656.1" y="1619.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="659.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1603.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="659.1" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1587.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="659.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1571.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="659.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1555.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="659.1" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1539.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="659.1" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="656.1" y="1523.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="659.1" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 0.21%)</title><rect x="656.8" y="1747.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.8" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.18%)</title><rect x="656.8" y="1731.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.8" y="1742.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.18%)</title><rect x="656.8" y="1715.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.8" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.06%)</title><rect x="657.9" y="1699.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.9" y="1710.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="658.2" y="1683.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.2" y="1694.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="658.2" y="1667.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.2" y="1678.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="658.2" y="1651.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.2" y="1662.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.03%)</title><rect x="658.2" y="1635.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="658.6" y="1699.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="658.6" y="1683.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.6" y="1694.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="658.6" y="1667.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.6" y="1678.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="658.6" y="1651.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="661.6" y="1662.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.03%)</title><rect x="658.9" y="1731.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.9" y="1742.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="658.9" y="1715.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.9" y="1726.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="658.9" y="1699.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.9" y="1710.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (2 samples, 0.06%)</title><rect x="659.3" y="1843.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.3" y="1854.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.extractThrowableAnRearrangeArguments (2 samples, 0.06%)</title><rect x="659.3" y="1827.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.3" y="1838.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/EventArgUtil.extractThrowable (1 samples, 0.03%)</title><rect x="659.6" y="1811.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.6" y="1822.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (1 samples, 0.03%)</title><rect x="660.0" y="1859.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.0" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.responseFromValues (8 samples, 0.24%)</title><rect x="660.3" y="1891.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.3" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.merge (8 samples, 0.24%)</title><rect x="660.3" y="1875.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.3" y="1886.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (1 samples, 0.03%)</title><rect x="660.3" y="1859.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.3" y="1870.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="660.3" y="1843.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.3" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (7 samples, 0.21%)</title><rect x="660.7" y="1859.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.7" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (7 samples, 0.21%)</title><rect x="660.7" y="1843.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.7" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.21%)</title><rect x="660.7" y="1827.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.7" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.03%)</title><rect x="660.7" y="1811.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.7" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/TerminalOp.getOpFlags (1 samples, 0.03%)</title><rect x="660.7" y="1795.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.7" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (6 samples, 0.18%)</title><rect x="661.0" y="1811.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.0" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.18%)</title><rect x="661.0" y="1795.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.0" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.18%)</title><rect x="661.0" y="1779.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.0" y="1790.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.06%)</title><rect x="661.3" y="1763.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.3" y="1774.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.06%)</title><rect x="661.3" y="1747.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.3" y="1758.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.03%)</title><rect x="661.3" y="1731.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.3" y="1742.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$403/2034647042.apply (1 samples, 0.03%)</title><rect x="661.3" y="1715.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.3" y="1726.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.03%)</title><rect x="661.3" y="1699.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.3" y="1710.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$400/1530539433.compare (1 samples, 0.03%)</title><rect x="661.3" y="1683.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.3" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value$$Lambda$394/85291996.applyAsLong (1 samples, 0.03%)</title><rect x="661.3" y="1667.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$289/2052560467.test (1 samples, 0.03%)</title><rect x="661.7" y="1731.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.7" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value$$Lambda$394/85291996.applyAsLong (1 samples, 0.03%)</title><rect x="661.7" y="1715.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.7" y="1726.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.06%)</title><rect x="662.0" y="1763.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.0" y="1774.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (2 samples, 0.06%)</title><rect x="662.0" y="1747.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.0" y="1758.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="662.7" y="1763.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.7" y="1774.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.03%)</title><rect x="662.7" y="1747.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.7" y="1758.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (1 samples, 0.03%)</title><rect x="662.7" y="1731.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.7" y="1742.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="662.7" y="1715.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.7" y="1726.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.7" y="1699.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.7" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="662.7" y="1683.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.7" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.7" y="1667.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.7" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.7" y="1651.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.7" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.estimateSize (1 samples, 0.03%)</title><rect x="662.7" y="1635.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.7" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (76 samples, 2.24%)</title><rect x="663.1" y="1955.0" width="26.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.1" y="1966.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (57 samples, 1.68%)</title><rect x="663.4" y="1939.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (57 samples, 1.68%)</title><rect x="663.4" y="1923.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.50%)</title><rect x="664.5" y="1907.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="664.8" y="1891.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.06%)</title><rect x="664.8" y="1875.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.8" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl$$Lambda$372/1245883880.apply (14 samples, 0.41%)</title><rect x="665.5" y="1891.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.5" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.fromHttpResponse (14 samples, 0.41%)</title><rect x="665.5" y="1875.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.5" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.06%)</title><rect x="665.5" y="1859.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.06%)</title><rect x="665.5" y="1843.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.5" y="1854.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.32%)</title><rect x="666.2" y="1859.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.2" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.15%)</title><rect x="666.2" y="1843.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.2" y="1854.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.15%)</title><rect x="666.2" y="1827.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.2" y="1838.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="666.2" y="1811.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.2" y="1822.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="666.2" y="1795.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.2" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="666.2" y="1779.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.2" y="1790.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="666.6" y="1795.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.6" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="666.6" y="1779.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.6" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="666.9" y="1811.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.9" y="1822.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="666.9" y="1795.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.9" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="666.9" y="1779.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.9" y="1790.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="666.9" y="1763.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.9" y="1774.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="666.9" y="1747.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.9" y="1758.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="666.9" y="1731.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.9" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="667.6" y="1811.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.6" y="1822.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.06%)</title><rect x="667.9" y="1843.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.9" y="1854.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.03%)</title><rect x="667.9" y="1827.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.9" y="1838.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="667.9" y="1811.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.9" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="668.3" y="1827.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.3" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="668.3" y="1811.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.3" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="668.3" y="1795.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.3" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="668.3" y="1779.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.3" y="1790.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="668.3" y="1763.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="671.3" y="1774.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.12%)</title><rect x="668.6" y="1843.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.6" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.12%)</title><rect x="668.6" y="1827.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.6" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.09%)</title><rect x="669.0" y="1811.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.0" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.09%)</title><rect x="669.0" y="1795.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.0" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.09%)</title><rect x="669.0" y="1779.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.0" y="1790.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="669.0" y="1763.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.0" y="1774.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="669.0" y="1747.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.0" y="1758.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.03%)</title><rect x="669.0" y="1731.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.0" y="1742.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.03%)</title><rect x="669.0" y="1715.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.0" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.06%)</title><rect x="669.3" y="1763.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.3" y="1774.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.06%)</title><rect x="669.3" y="1747.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.3" y="1758.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (2 samples, 0.06%)</title><rect x="669.3" y="1731.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.3" y="1742.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="669.3" y="1715.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="672.3" y="1726.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="669.7" y="1715.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.7" y="1726.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="669.7" y="1699.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.7" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="669.7" y="1683.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.7" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.cancellationRequested (1 samples, 0.03%)</title><rect x="669.7" y="1667.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.7" y="1678.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="670.0" y="1859.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (37 samples, 1.09%)</title><rect x="670.4" y="1907.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.4" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 1.03%)</title><rect x="671.1" y="1891.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (35 samples, 1.03%)</title><rect x="671.1" y="1875.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (35 samples, 1.03%)</title><rect x="671.1" y="1859.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (34 samples, 1.00%)</title><rect x="671.4" y="1843.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.4" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (34 samples, 1.00%)</title><rect x="671.4" y="1827.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (34 samples, 1.00%)</title><rect x="671.4" y="1811.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 0.97%)</title><rect x="671.8" y="1795.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (33 samples, 0.97%)</title><rect x="671.8" y="1779.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.8" y="1790.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.21%)</title><rect x="671.8" y="1763.0" width="2.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="674.8" y="1774.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="672.1" y="1747.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="675.1" y="1758.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.06%)</title><rect x="672.5" y="1747.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="675.5" y="1758.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="673.2" y="1747.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="676.2" y="1758.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="673.5" y="1747.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="676.5" y="1758.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.77%)</title><rect x="674.2" y="1763.0" width="9.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="677.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="675.6" y="1747.0" width="7.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="678.6" y="1758.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="675.6" y="1731.0" width="7.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="678.6" y="1742.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="676.6" y="1715.0" width="6.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="679.6" y="1726.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="676.6" y="1699.0" width="6.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="679.6" y="1710.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="676.6" y="1683.0" width="6.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="679.6" y="1694.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="677.0" y="1667.0" width="6.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="680.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="678.0" y="1651.0" width="5.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="681.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="678.0" y="1635.0" width="5.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="681.0" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (18 samples, 0.53%)</title><rect x="683.2" y="1939.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.2" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="683.6" y="1923.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.06%)</title><rect x="683.6" y="1907.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.6" y="1918.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="683.6" y="1891.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="686.6" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.accept (1 samples, 0.03%)</title><rect x="683.9" y="1891.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.9" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.accept (15 samples, 0.44%)</title><rect x="684.3" y="1923.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.3" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$biConsumer$3 (15 samples, 0.44%)</title><rect x="684.3" y="1907.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 0.41%)</title><rect x="684.6" y="1891.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.41%)</title><rect x="684.6" y="1875.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (14 samples, 0.41%)</title><rect x="684.6" y="1859.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.38%)</title><rect x="685.0" y="1843.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.38%)</title><rect x="685.0" y="1827.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.38%)</title><rect x="685.0" y="1811.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.38%)</title><rect x="685.0" y="1795.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.38%)</title><rect x="685.0" y="1779.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.38%)</title><rect x="685.0" y="1763.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.38%)</title><rect x="685.0" y="1747.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.38%)</title><rect x="685.0" y="1731.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.0" y="1742.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="685.0" y="1715.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="688.0" y="1726.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="685.0" y="1699.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="688.0" y="1710.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="685.3" y="1699.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="688.3" y="1710.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.32%)</title><rect x="685.7" y="1715.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="688.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1699.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="689.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1683.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="689.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1667.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="689.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1651.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="689.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1635.0" width="3.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="689.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1619.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="689.0" y="1630.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1603.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="689.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="686.0" y="1587.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="689.0" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.03%)</title><rect x="689.5" y="2003.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="689.5" y="1987.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="689.5" y="1971.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.5" y="1982.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="689.5" y="1955.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="692.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.5" y="1939.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="692.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.5" y="1923.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="692.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.5" y="1907.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="692.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.5" y="1891.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="692.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.5" y="1875.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="692.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.06%)</title><rect x="689.8" y="2019.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.06%)</title><rect x="689.8" y="2003.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="689.8" y="1987.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="692.8" y="1998.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.06%)</title><rect x="689.8" y="1971.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="692.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="689.8" y="1955.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="692.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="689.8" y="1939.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="692.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1923.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="693.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1907.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="693.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1891.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="693.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1875.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="693.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1859.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="693.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1843.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="693.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="690.2" y="1827.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="693.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (79 samples, 2.33%)</title><rect x="690.5" y="2019.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.5" y="2030.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (79 samples, 2.33%)</title><rect x="690.5" y="2003.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.5" y="2014.0">j..</text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.59%)</title><rect x="690.5" y="1987.0" width="7.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="693.5" y="1998.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="690.9" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="693.9" y="1982.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="691.2" y="1971.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="694.2" y="1982.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.09%)</title><rect x="691.6" y="1971.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="694.6" y="1982.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="691.9" y="1955.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="694.9" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.35%)</title><rect x="692.6" y="1971.0" width="4.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="695.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="693.3" y="1955.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="696.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="693.3" y="1939.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="696.3" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="695.8" y="1923.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="698.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="695.8" y="1907.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="698.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="695.8" y="1891.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="698.8" y="1902.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="696.8" y="1971.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="699.8" y="1982.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="697.1" y="1971.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="700.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="697.5" y="1987.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="700.5" y="1998.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="697.5" y="1971.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="700.5" y="1982.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="697.8" y="1987.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="700.8" y="1998.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (56 samples, 1.65%)</title><rect x="698.2" y="1987.0" width="19.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="701.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.09%)</title><rect x="704.8" y="1971.0" width="12.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="707.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.09%)</title><rect x="704.8" y="1955.0" width="12.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="707.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.94%)</title><rect x="706.5" y="1939.0" width="11.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="709.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.80%)</title><rect x="708.3" y="1923.0" width="9.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="711.3" y="1934.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.74%)</title><rect x="709.0" y="1907.0" width="8.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="712.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.68%)</title><rect x="709.7" y="1891.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="712.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="711.0" y="1875.0" width="6.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="714.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="712.1" y="1859.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="715.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="716.6" y="1843.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="719.6" y="1854.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="717.7" y="1987.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="720.7" y="1998.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="718.0" y="2019.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="721.0" y="2030.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="718.0" y="2003.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="721.0" y="2014.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="718.0" y="1987.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="721.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (263 samples, 7.75%)</title><rect x="718.3" y="2051.0" width="91.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.3" y="2062.0">jdk/interna..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="2035.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="724.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="2019.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="724.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="2003.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="724.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="1987.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="724.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="1971.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="724.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="1955.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="724.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.5" y="1939.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="724.5" y="1950.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="721.8" y="2035.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.8" y="2046.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="721.8" y="2019.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.8" y="2030.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="722.2" y="2035.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.2" y="2046.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="722.2" y="2019.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.2" y="2030.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="722.2" y="2003.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.2" y="2014.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="722.2" y="1987.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.2" y="1998.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.06%)</title><rect x="722.5" y="2035.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.5" y="2046.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (70 samples, 2.06%)</title><rect x="723.2" y="2035.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.2" y="2046.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$292/2116813995.accept (66 samples, 1.94%)</title><rect x="723.2" y="2019.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.2" y="2030.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (66 samples, 1.94%)</title><rect x="723.2" y="2003.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.2" y="2014.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (66 samples, 1.94%)</title><rect x="723.2" y="1987.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.2" y="1998.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (66 samples, 1.94%)</title><rect x="723.2" y="1971.0" width="23.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.2" y="1982.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (66 samples, 1.94%)</title><rect x="723.2" y="1955.0" width="23.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.2" y="1966.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.06%)</title><rect x="723.2" y="1939.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.06%)</title><rect x="723.2" y="1923.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.2" y="1934.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="723.2" y="1907.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="723.6" y="1907.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (64 samples, 1.89%)</title><rect x="723.9" y="1939.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.9" y="1950.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 1.89%)</title><rect x="723.9" y="1923.0" width="22.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.9" y="1934.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 1.89%)</title><rect x="723.9" y="1907.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.9" y="1918.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (64 samples, 1.89%)</title><rect x="723.9" y="1891.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.9" y="1902.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (64 samples, 1.89%)</title><rect x="723.9" y="1875.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.9" y="1886.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (61 samples, 1.80%)</title><rect x="724.3" y="1859.0" width="21.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.3" y="1870.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (61 samples, 1.80%)</title><rect x="724.3" y="1843.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.3" y="1854.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (23 samples, 0.68%)</title><rect x="724.3" y="1827.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.3" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (23 samples, 0.68%)</title><rect x="724.3" y="1811.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (23 samples, 0.68%)</title><rect x="724.3" y="1795.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.3" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.03%)</title><rect x="724.3" y="1779.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="724.3" y="1763.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="724.3" y="1747.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.03%)</title><rect x="724.3" y="1731.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.3" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="724.3" y="1715.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.3" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="724.3" y="1699.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.65%)</title><rect x="724.6" y="1779.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.65%)</title><rect x="724.6" y="1763.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.65%)</title><rect x="724.6" y="1747.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.6" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.65%)</title><rect x="724.6" y="1731.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.6" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (22 samples, 0.65%)</title><rect x="724.6" y="1715.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.6" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (22 samples, 0.65%)</title><rect x="724.6" y="1699.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.6" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (22 samples, 0.65%)</title><rect x="724.6" y="1683.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.6" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.65%)</title><rect x="724.6" y="1667.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.65%)</title><rect x="724.6" y="1651.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.6" y="1662.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.21%)</title><rect x="724.6" y="1635.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="727.6" y="1646.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="725.0" y="1619.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="728.0" y="1630.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.12%)</title><rect x="725.3" y="1619.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="728.3" y="1630.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="726.7" y="1619.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="729.7" y="1630.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="727.0" y="1635.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="730.0" y="1646.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (14 samples, 0.41%)</title><rect x="727.4" y="1635.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="730.4" y="1646.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="728.4" y="1619.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="731.4" y="1630.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="728.4" y="1603.0" width="3.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="731.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="729.1" y="1587.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="732.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="729.1" y="1571.0" width="3.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="732.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="729.1" y="1555.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="732.1" y="1566.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="729.5" y="1539.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="732.5" y="1550.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="729.5" y="1523.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="732.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="729.5" y="1507.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="732.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (37 samples, 1.09%)</title><rect x="732.3" y="1827.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.3" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.03%)</title><rect x="732.3" y="1811.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.03%)</title><rect x="732.6" y="1811.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$199/66698263.get (1 samples, 0.03%)</title><rect x="732.6" y="1795.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.03%)</title><rect x="732.6" y="1779.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.6" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="732.6" y="1763.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.6" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="732.6" y="1747.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.6" y="1758.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="732.6" y="1731.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.6" y="1742.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="732.6" y="1715.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.6" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (35 samples, 1.03%)</title><rect x="732.9" y="1811.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.12%)</title><rect x="732.9" y="1795.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.12%)</title><rect x="732.9" y="1779.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.9" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="732.9" y="1763.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.9" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="732.9" y="1747.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.9" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="733.3" y="1763.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="733.3" y="1747.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="733.3" y="1731.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.3" y="1742.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="733.6" y="1763.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="736.6" y="1774.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="734.0" y="1763.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="737.0" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.91%)</title><rect x="734.3" y="1795.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.3" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 0.91%)</title><rect x="734.3" y="1779.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.3" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (31 samples, 0.91%)</title><rect x="734.3" y="1763.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.3" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (31 samples, 0.91%)</title><rect x="734.3" y="1747.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.3" y="1758.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (31 samples, 0.91%)</title><rect x="734.3" y="1731.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.3" y="1742.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.03%)</title><rect x="734.3" y="1715.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="737.3" y="1726.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.85%)</title><rect x="734.7" y="1715.0" width="10.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="737.7" y="1726.0"></text>
</g>
<g>
<title>__libc_read (29 samples, 0.85%)</title><rect x="734.7" y="1699.0" width="10.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="737.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.62%)</title><rect x="737.5" y="1683.0" width="7.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="740.5" y="1694.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.62%)</title><rect x="737.5" y="1667.0" width="7.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="740.5" y="1678.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="737.8" y="1651.0" width="7.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="740.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="737.8" y="1635.0" width="7.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="740.8" y="1646.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="737.8" y="1619.0" width="7.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="740.8" y="1630.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="738.5" y="1603.0" width="6.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="741.5" y="1614.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="738.5" y="1587.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="741.5" y="1598.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="739.2" y="1571.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="742.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="739.9" y="1555.0" width="4.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="742.9" y="1566.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="740.2" y="1539.0" width="4.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="743.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="741.3" y="1523.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="744.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="742.0" y="1507.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="745.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="742.0" y="1491.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="745.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="742.7" y="1475.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="745.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="743.4" y="1459.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="746.4" y="1470.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="743.7" y="1443.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="746.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="744.4" y="1427.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="747.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="744.4" y="1411.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="747.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="744.4" y="1395.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="747.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="744.4" y="1379.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="747.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="744.4" y="1363.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="747.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="744.4" y="1347.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="747.4" y="1358.0"></text>
</g>
<g>
<title>__errno_location (1 samples, 0.03%)</title><rect x="744.8" y="1715.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="747.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.03%)</title><rect x="745.1" y="1827.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.1" y="1838.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="745.1" y="1811.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2 samples, 0.06%)</title><rect x="745.5" y="1859.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$300/869685903.accept (4 samples, 0.12%)</title><rect x="746.2" y="2019.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.12%)</title><rect x="746.2" y="2003.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.2" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.run (4 samples, 0.12%)</title><rect x="746.2" y="1987.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.2" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.12%)</title><rect x="746.2" y="1971.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.12%)</title><rect x="746.2" y="1955.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.2" y="1966.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="746.2" y="1939.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.2" y="1950.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="746.2" y="1923.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.2" y="1934.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.06%)</title><rect x="746.5" y="1939.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.5" y="1950.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.06%)</title><rect x="746.5" y="1923.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.5" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.03%)</title><rect x="747.2" y="1939.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.2" y="1950.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (4 samples, 0.12%)</title><rect x="747.5" y="2035.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.5" y="2046.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.12%)</title><rect x="747.5" y="2019.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.5" y="2030.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.12%)</title><rect x="747.5" y="2003.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.5" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.12%)</title><rect x="747.5" y="1987.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.5" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.12%)</title><rect x="747.5" y="1971.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.5" y="1982.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.09%)</title><rect x="747.5" y="1955.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.5" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.06%)</title><rect x="747.9" y="1939.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.9" y="1950.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.06%)</title><rect x="747.9" y="1923.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.9" y="1934.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (2 samples, 0.06%)</title><rect x="747.9" y="1907.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.9" y="1918.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.06%)</title><rect x="747.9" y="1891.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.9" y="1902.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.06%)</title><rect x="747.9" y="1875.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.9" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.06%)</title><rect x="747.9" y="1859.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.9" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="747.9" y="1843.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.9" y="1854.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="747.9" y="1827.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.9" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.03%)</title><rect x="748.2" y="1811.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.2" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="748.6" y="1955.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.6" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.03%)</title><rect x="748.6" y="1939.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (91 samples, 2.68%)</title><rect x="748.9" y="2035.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.9" y="2046.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$207/2005313997.run (31 samples, 0.91%)</title><rect x="748.9" y="2019.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (31 samples, 0.91%)</title><rect x="748.9" y="2003.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.9" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.91%)</title><rect x="748.9" y="1987.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.9" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.91%)</title><rect x="748.9" y="1971.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.9" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31 samples, 0.91%)</title><rect x="748.9" y="1955.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (31 samples, 0.91%)</title><rect x="748.9" y="1939.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (30 samples, 0.88%)</title><rect x="749.3" y="1923.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (30 samples, 0.88%)</title><rect x="749.3" y="1907.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (26 samples, 0.77%)</title><rect x="749.3" y="1891.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.03%)</title><rect x="750.3" y="1875.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.3" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (22 samples, 0.65%)</title><rect x="750.7" y="1875.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.7" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (21 samples, 0.62%)</title><rect x="751.0" y="1859.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.62%)</title><rect x="751.0" y="1843.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.56%)</title><rect x="751.7" y="1827.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.47%)</title><rect x="752.8" y="1811.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.8" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.47%)</title><rect x="752.8" y="1795.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.8" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (15 samples, 0.44%)</title><rect x="753.1" y="1779.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.1" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (15 samples, 0.44%)</title><rect x="753.1" y="1763.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.1" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (15 samples, 0.44%)</title><rect x="753.1" y="1747.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.1" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.44%)</title><rect x="753.1" y="1731.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.1" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.44%)</title><rect x="753.1" y="1715.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.1" y="1726.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.09%)</title><rect x="753.1" y="1699.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="756.1" y="1710.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="753.5" y="1683.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="756.5" y="1694.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="753.8" y="1683.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="756.8" y="1694.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.35%)</title><rect x="754.1" y="1699.0" width="4.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="757.1" y="1710.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="754.8" y="1683.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="757.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="754.8" y="1667.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="757.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="754.8" y="1651.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="757.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="754.8" y="1635.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="757.8" y="1646.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="754.8" y="1619.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="757.8" y="1630.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.27%)</title><rect x="755.2" y="1603.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="758.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="755.5" y="1587.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="758.5" y="1598.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="755.9" y="1571.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="758.9" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="757.6" y="1555.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="760.6" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="757.6" y="1539.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="760.6" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="757.6" y="1523.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="760.6" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="757.6" y="1507.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="760.6" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="757.6" y="1491.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="760.6" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="758.0" y="1475.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="761.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="758.0" y="1459.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="761.0" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3 samples, 0.09%)</title><rect x="758.3" y="1891.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.3" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.03%)</title><rect x="758.3" y="1875.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.3" y="1886.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (1 samples, 0.03%)</title><rect x="758.3" y="1859.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.3" y="1870.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="758.3" y="1843.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.3" y="1854.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="758.3" y="1827.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.3" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="758.3" y="1811.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.3" y="1822.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="758.3" y="1795.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.03%)</title><rect x="758.7" y="1875.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.7" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$199/66698263.get (1 samples, 0.03%)</title><rect x="758.7" y="1859.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.7" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.03%)</title><rect x="758.7" y="1843.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.7" y="1854.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="758.7" y="1827.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.7" y="1838.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="758.7" y="1811.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.7" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.03%)</title><rect x="759.0" y="1875.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.0" y="1886.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="759.0" y="1859.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.0" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="759.0" y="1843.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.0" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="759.0" y="1827.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.0" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.03%)</title><rect x="759.0" y="1811.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.0" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="759.0" y="1795.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="759.0" y="1779.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="762.0" y="1790.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.03%)</title><rect x="759.0" y="1763.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="762.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.03%)</title><rect x="759.4" y="1891.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1166291669.run (60 samples, 1.77%)</title><rect x="759.7" y="2019.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.7" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (60 samples, 1.77%)</title><rect x="759.7" y="2003.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.7" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (59 samples, 1.74%)</title><rect x="759.7" y="1987.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.7" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (54 samples, 1.59%)</title><rect x="759.7" y="1971.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (53 samples, 1.56%)</title><rect x="760.1" y="1955.0" width="18.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.1" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (53 samples, 1.56%)</title><rect x="760.1" y="1939.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (49 samples, 1.44%)</title><rect x="760.8" y="1923.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 1.44%)</title><rect x="760.8" y="1907.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 1.44%)</title><rect x="760.8" y="1891.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.8" y="1902.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="761.1" y="1875.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="764.1" y="1886.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.15%)</title><rect x="761.4" y="1875.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="764.4" y="1886.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="762.1" y="1859.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="765.1" y="1870.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="762.8" y="1859.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="765.8" y="1870.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (42 samples, 1.24%)</title><rect x="763.2" y="1875.0" width="14.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="766.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.97%)</title><rect x="766.3" y="1859.0" width="11.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="769.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.97%)</title><rect x="766.3" y="1843.0" width="11.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="769.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.91%)</title><rect x="767.0" y="1827.0" width="10.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="770.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.88%)</title><rect x="767.4" y="1811.0" width="10.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="770.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.88%)</title><rect x="767.4" y="1795.0" width="10.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="770.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.77%)</title><rect x="768.7" y="1779.0" width="9.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="771.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="770.8" y="1763.0" width="7.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="773.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="771.2" y="1747.0" width="6.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="774.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.03%)</title><rect x="777.8" y="1923.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.03%)</title><rect x="778.1" y="1923.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.03%)</title><rect x="778.1" y="1907.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.1" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.run (5 samples, 0.15%)</title><rect x="778.5" y="1971.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5 samples, 0.15%)</title><rect x="778.5" y="1955.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5 samples, 0.15%)</title><rect x="778.5" y="1939.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (4 samples, 0.12%)</title><rect x="778.8" y="1923.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.06%)</title><rect x="779.2" y="1907.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.06%)</title><rect x="779.2" y="1891.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="779.9" y="1907.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="780.2" y="1987.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.2" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.15%)</title><rect x="780.6" y="2035.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.6" y="2046.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.12%)</title><rect x="780.6" y="2019.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.6" y="2030.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.12%)</title><rect x="780.6" y="2003.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.6" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.12%)</title><rect x="780.6" y="1987.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.6" y="1998.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.09%)</title><rect x="780.9" y="1971.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="783.9" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1955.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="783.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1939.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="783.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1923.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="783.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1907.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="783.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1891.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="783.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1875.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="783.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="780.9" y="1859.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="783.9" y="1870.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.06%)</title><rect x="781.3" y="1955.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.3" y="1966.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="781.6" y="1939.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="784.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="782.0" y="2019.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="785.0" y="2030.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.03%)</title><rect x="782.0" y="2003.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.06%)</title><rect x="782.3" y="2035.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.3" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (63 samples, 1.86%)</title><rect x="783.0" y="2035.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.0" y="2046.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (63 samples, 1.86%)</title><rect x="783.0" y="2019.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.0" y="2030.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (62 samples, 1.83%)</title><rect x="783.3" y="2003.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.3" y="2014.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (31 samples, 0.91%)</title><rect x="783.3" y="1987.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.3" y="1998.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.03%)</title><rect x="783.3" y="1971.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="786.3" y="1982.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.82%)</title><rect x="783.7" y="1971.0" width="9.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="786.7" y="1982.0"></text>
</g>
<g>
<title>epoll_wait (28 samples, 0.82%)</title><rect x="783.7" y="1955.0" width="9.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="786.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="785.8" y="1939.0" width="7.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="788.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="785.8" y="1923.0" width="7.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="788.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="786.5" y="1907.0" width="6.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="789.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="786.5" y="1891.0" width="6.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="789.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="786.5" y="1875.0" width="6.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="789.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="787.5" y="1859.0" width="5.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="790.5" y="1870.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="788.6" y="1843.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="791.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="790.6" y="1827.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="793.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="791.3" y="1811.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="794.3" y="1822.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.06%)</title><rect x="793.4" y="1971.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="796.4" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (26 samples, 0.77%)</title><rect x="794.1" y="1987.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.1" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.09%)</title><rect x="794.1" y="1971.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.1" y="1982.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.09%)</title><rect x="794.1" y="1955.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.1" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (22 samples, 0.65%)</title><rect x="795.2" y="1971.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.2" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (22 samples, 0.65%)</title><rect x="795.2" y="1955.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.2" y="1966.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.03%)</title><rect x="795.9" y="1939.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="798.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="796.2" y="1939.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="799.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="796.2" y="1923.0" width="6.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="799.2" y="1934.0"></text>
</g>
<g>
<title>__libc_read (18 samples, 0.53%)</title><rect x="796.2" y="1907.0" width="6.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="799.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="796.9" y="1891.0" width="5.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="799.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="796.9" y="1875.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="799.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="797.2" y="1859.0" width="5.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="800.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="797.2" y="1843.0" width="5.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="800.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.41%)</title><rect x="797.6" y="1827.0" width="4.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="800.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="797.9" y="1811.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="800.9" y="1822.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="798.3" y="1795.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="801.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="798.6" y="1779.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="801.6" y="1790.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="800.0" y="1763.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="803.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="801.1" y="1747.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="804.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.1" y="1731.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="805.1" y="1742.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.03%)</title><rect x="802.5" y="1939.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="805.5" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.03%)</title><rect x="802.8" y="1971.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.8" y="1982.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="802.8" y="1955.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.8" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="802.8" y="1939.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.8" y="1950.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="802.8" y="1923.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.8" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.06%)</title><rect x="803.2" y="1987.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.2" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (1 samples, 0.03%)</title><rect x="803.5" y="1971.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.5" y="1982.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.03%)</title><rect x="803.5" y="1955.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="806.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="803.5" y="1939.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="806.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="803.5" y="1923.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="806.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="803.5" y="1907.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="806.5" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.06%)</title><rect x="803.8" y="1987.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.8" y="1998.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.06%)</title><rect x="803.8" y="1971.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.8" y="1982.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.06%)</title><rect x="803.8" y="1955.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.8" y="1966.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.06%)</title><rect x="803.8" y="1939.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.06%)</title><rect x="803.8" y="1923.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.8" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="804.5" y="1987.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.5" y="1998.0"></text>
</g>
<g>
<title>java/util/HashSet.remove (1 samples, 0.03%)</title><rect x="804.5" y="1971.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.5" y="1982.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (1 samples, 0.03%)</title><rect x="804.5" y="1955.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.5" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="804.5" y="1939.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.5" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (13 samples, 0.38%)</title><rect x="804.9" y="2035.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.9" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (13 samples, 0.38%)</title><rect x="804.9" y="2019.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.9" y="2030.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (13 samples, 0.38%)</title><rect x="804.9" y="2003.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (10 samples, 0.29%)</title><rect x="805.2" y="1987.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="805.6" y="1971.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="808.6" y="1982.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.24%)</title><rect x="805.6" y="1955.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="808.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="806.3" y="1939.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="809.3" y="1950.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.18%)</title><rect x="806.3" y="1923.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="809.3" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="806.6" y="1907.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="809.6" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="806.6" y="1891.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="809.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.15%)</title><rect x="806.6" y="1875.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="809.6" y="1886.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="807.0" y="1859.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="810.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="807.0" y="1843.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="810.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="807.7" y="1827.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="810.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="808.0" y="1811.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="811.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="808.0" y="1795.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="811.0" y="1806.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="808.4" y="1971.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="811.4" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.06%)</title><rect x="808.7" y="1987.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.03%)</title><rect x="809.4" y="2035.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.4" y="2046.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="809.4" y="2019.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.4" y="2030.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="809.4" y="2003.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.4" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="809.4" y="1987.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.4" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="809.4" y="1971.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.4" y="1982.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (2 samples, 0.06%)</title><rect x="809.8" y="2051.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="812.8" y="2062.0"></text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (1 samples, 0.03%)</title><rect x="809.8" y="2035.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="812.8" y="2046.0"></text>
</g>
<g>
<title>edge_order(CFGEdge**, CFGEdge**) (1 samples, 0.03%)</title><rect x="810.1" y="2035.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="813.1" y="2046.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (164 samples, 4.83%)</title><rect x="810.5" y="2051.0" width="57.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.5" y="2062.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.06%)</title><rect x="811.1" y="2035.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.1" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.12%)</title><rect x="811.8" y="2035.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.8" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.12%)</title><rect x="811.8" y="2019.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.8" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 1.24%)</title><rect x="813.2" y="2035.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.2" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (38 samples, 1.12%)</title><rect x="814.6" y="2019.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.6" y="2030.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="814.6" y="2003.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="817.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.06%)</title><rect x="815.0" y="2003.0" width="12.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="818.0" y="2014.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.06%)</title><rect x="815.0" y="1987.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="818.0" y="1998.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.06%)</title><rect x="815.7" y="1987.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="818.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="816.0" y="1971.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="819.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="816.0" y="1955.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="819.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="816.0" y="1939.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="819.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="816.0" y="1923.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="819.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="816.0" y="1907.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="819.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="816.0" y="1891.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="819.0" y="1902.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="816.4" y="1987.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="819.4" y="1998.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.91%)</title><rect x="816.7" y="1987.0" width="10.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="819.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.80%)</title><rect x="818.1" y="1971.0" width="9.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="821.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.80%)</title><rect x="818.1" y="1955.0" width="9.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="821.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.77%)</title><rect x="818.4" y="1939.0" width="9.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="821.4" y="1950.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.77%)</title><rect x="818.4" y="1923.0" width="9.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="821.4" y="1934.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.74%)</title><rect x="818.8" y="1907.0" width="8.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="821.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.59%)</title><rect x="820.5" y="1891.0" width="7.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="823.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="822.3" y="1875.0" width="5.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="825.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.35%)</title><rect x="823.3" y="1859.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="826.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.29%)</title><rect x="824.0" y="1843.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="827.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="825.1" y="1827.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="828.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1811.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="829.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1795.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="829.8" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1779.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="829.8" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1763.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="829.8" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1747.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="829.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1731.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="829.8" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="826.8" y="1715.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="829.8" y="1726.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="827.5" y="2003.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="830.5" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (114 samples, 3.36%)</title><rect x="827.8" y="2035.0" width="39.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.8" y="2046.0">one..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="827.8" y="2019.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="830.8" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (113 samples, 3.33%)</title><rect x="828.2" y="2019.0" width="39.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.2" y="2030.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (70 samples, 2.06%)</title><rect x="829.2" y="2003.0" width="24.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.2" y="2014.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (55 samples, 1.62%)</title><rect x="829.9" y="1987.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.9" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (54 samples, 1.59%)</title><rect x="830.3" y="1971.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.3" y="1982.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (43 samples, 1.27%)</title><rect x="830.6" y="1955.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.6" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.15%)</title><rect x="830.6" y="1939.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="830.6" y="1923.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.09%)</title><rect x="830.6" y="1907.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.6" y="1918.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="831.3" y="1891.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="834.3" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="831.7" y="1923.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="832.0" y="1923.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="832.0" y="1907.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.0" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="832.0" y="1891.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.0" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.entity (38 samples, 1.12%)</title><rect x="832.4" y="1939.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.4" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="832.4" y="1923.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.4" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="832.4" y="1907.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.4" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="832.4" y="1891.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="832.4" y="1875.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="832.4" y="1859.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="832.4" y="1843.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="832.7" y="1907.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="832.7" y="1891.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.7" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$RF.of (3 samples, 0.09%)</title><rect x="833.0" y="1923.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.0" y="1934.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.09%)</title><rect x="833.0" y="1907.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.0" y="1918.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="833.0" y="1891.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.0" y="1902.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="833.0" y="1875.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.0" y="1886.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="833.0" y="1859.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.0" y="1870.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="833.0" y="1843.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.0" y="1854.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (1 samples, 0.03%)</title><rect x="833.0" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.0" y="1838.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (1 samples, 0.03%)</title><rect x="833.0" y="1811.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.0" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="833.0" y="1795.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.0" y="1806.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.03%)</title><rect x="833.4" y="1891.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.4" y="1902.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="833.7" y="1891.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.7" y="1902.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="833.7" y="1875.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.7" y="1886.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="833.7" y="1859.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.7" y="1870.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="833.7" y="1843.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.7" y="1854.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="833.7" y="1827.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.7" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.asyncExecute (33 samples, 0.97%)</title><rect x="834.1" y="1923.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (33 samples, 0.97%)</title><rect x="834.1" y="1907.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.97%)</title><rect x="834.1" y="1891.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.1" y="1902.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (33 samples, 0.97%)</title><rect x="834.1" y="1875.0" width="11.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.1" y="1886.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (33 samples, 0.97%)</title><rect x="834.1" y="1859.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (33 samples, 0.97%)</title><rect x="834.1" y="1843.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (33 samples, 0.97%)</title><rect x="834.1" y="1827.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (32 samples, 0.94%)</title><rect x="834.4" y="1811.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.94%)</title><rect x="834.4" y="1795.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.94%)</title><rect x="834.4" y="1779.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.4" y="1790.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.15%)</title><rect x="834.4" y="1763.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="837.4" y="1774.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="834.4" y="1747.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="837.4" y="1758.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="834.8" y="1747.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="837.8" y="1758.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="835.1" y="1747.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="838.1" y="1758.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="835.5" y="1747.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.5" y="1758.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="835.8" y="1747.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="838.8" y="1758.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="836.2" y="1763.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="839.2" y="1774.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="836.9" y="1763.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.9" y="1774.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.71%)</title><rect x="837.2" y="1763.0" width="8.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="840.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="837.9" y="1747.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="840.9" y="1758.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="837.9" y="1731.0" width="7.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="840.9" y="1742.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="839.0" y="1715.0" width="6.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="842.0" y="1726.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="839.0" y="1699.0" width="6.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="842.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="839.0" y="1683.0" width="6.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="842.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="839.3" y="1667.0" width="6.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="842.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="840.0" y="1651.0" width="5.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="843.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.47%)</title><rect x="840.0" y="1635.0" width="5.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="843.0" y="1646.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.27%)</title><rect x="845.6" y="1955.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.6" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.27%)</title><rect x="845.6" y="1939.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.6" y="1950.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.21%)</title><rect x="845.6" y="1923.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.equals (6 samples, 0.18%)</title><rect x="845.9" y="1907.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.9" y="1918.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1 samples, 0.03%)</title><rect x="846.9" y="1891.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.9" y="1902.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="847.3" y="1891.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="850.3" y="1902.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="848.0" y="1923.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="848.0" y="1907.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="848.3" y="1891.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.3" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="848.7" y="1955.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.7" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="848.7" y="1939.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="848.7" y="1923.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.7" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.12%)</title><rect x="849.0" y="1987.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.0" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="849.0" y="1971.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="849.0" y="1955.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="849.0" y="1939.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="849.0" y="1923.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.0" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="849.4" y="1971.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.4" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="849.4" y="1955.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.4" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="850.4" y="1987.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="850.4" y="1971.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="850.4" y="1955.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.4" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.24%)</title><rect x="850.8" y="1987.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.8" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.21%)</title><rect x="851.1" y="1971.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.1" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 1.18%)</title><rect x="853.6" y="2003.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.6" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (39 samples, 1.15%)</title><rect x="853.9" y="1987.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="853.9" y="1971.0" width="4.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="856.9" y="1982.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="853.9" y="1955.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="856.9" y="1966.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.38%)</title><rect x="853.9" y="1939.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="856.9" y="1950.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.06%)</title><rect x="853.9" y="1923.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="856.9" y="1934.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.06%)</title><rect x="854.6" y="1923.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="857.6" y="1934.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.09%)</title><rect x="855.3" y="1923.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="858.3" y="1934.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.15%)</title><rect x="856.3" y="1923.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="859.3" y="1934.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="856.3" y="1907.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="859.3" y="1918.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="856.7" y="1907.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="859.7" y="1918.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.09%)</title><rect x="857.0" y="1907.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="860.0" y="1918.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="858.1" y="1923.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="861.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1907.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="861.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1891.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="861.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1875.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="861.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1859.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="861.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1843.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="861.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1827.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="861.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.1" y="1811.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="861.1" y="1822.0"></text>
</g>
<g>
<title>recv (26 samples, 0.77%)</title><rect x="858.4" y="1971.0" width="9.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="861.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="859.8" y="1955.0" width="7.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="862.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.65%)</title><rect x="859.8" y="1939.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="862.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="860.9" y="1923.0" width="6.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="863.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="860.9" y="1907.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="863.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.56%)</title><rect x="860.9" y="1891.0" width="6.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="863.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.53%)</title><rect x="861.2" y="1875.0" width="6.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="864.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.50%)</title><rect x="861.5" y="1859.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="864.5" y="1870.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.44%)</title><rect x="862.2" y="1843.0" width="5.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="865.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="862.9" y="1827.0" width="4.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="865.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.32%)</title><rect x="863.6" y="1811.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="866.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.24%)</title><rect x="864.7" y="1795.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="867.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.21%)</title><rect x="865.0" y="1779.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="868.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.1" y="1763.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="870.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.1" y="1747.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="870.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.1" y="1731.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="870.1" y="1742.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.06%)</title><rect x="867.5" y="2051.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="870.5" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="867.5" y="2035.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="870.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="867.5" y="2019.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="870.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="867.5" y="2003.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="870.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="867.5" y="1987.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="870.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="867.5" y="1971.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="870.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.8" y="1955.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="870.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.8" y="1939.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="870.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.8" y="1923.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="870.8" y="1934.0"></text>
</g>
<g>
<title>start_thread (926 samples, 27.28%)</title><rect x="868.2" y="2051.0" width="321.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="871.2" y="2062.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (926 samples, 27.28%)</title><rect x="868.2" y="2035.0" width="321.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="871.2" y="2046.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (926 samples, 27.28%)</title><rect x="868.2" y="2019.0" width="321.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="871.2" y="2030.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.09%)</title><rect x="868.2" y="2003.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.2" y="2014.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (3 samples, 0.09%)</title><rect x="868.2" y="1987.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="871.2" y="1998.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.06%)</title><rect x="868.2" y="1971.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="871.2" y="1982.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.06%)</title><rect x="868.2" y="1955.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="871.2" y="1966.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="868.2" y="1939.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="871.2" y="1950.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="868.5" y="1939.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="871.5" y="1950.0"></text>
</g>
<g>
<title>__GI_getrusage (1 samples, 0.03%)</title><rect x="868.8" y="1971.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="871.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.8" y="1955.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="871.8" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.8" y="1939.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="871.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.8" y="1923.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="871.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.8" y="1907.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="871.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.8" y="1891.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="871.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.8" y="1875.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="871.8" y="1886.0"></text>
</g>
<g>
<title>GangWorker::loop() (45 samples, 1.33%)</title><rect x="869.2" y="2003.0" width="15.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="872.2" y="2014.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (44 samples, 1.30%)</title><rect x="869.2" y="1987.0" width="15.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="872.2" y="1998.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (24 samples, 0.71%)</title><rect x="869.2" y="1971.0" width="8.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="872.2" y="1982.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.03%)</title><rect x="869.2" y="1955.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="872.2" y="1966.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="869.2" y="1939.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="872.2" y="1950.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::pop_global(StarTask volatile&amp;) (2 samples, 0.06%)</title><rect x="869.5" y="1955.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="872.5" y="1966.0"></text>
</g>
<g>
<title>SpinPause (21 samples, 0.62%)</title><rect x="870.2" y="1955.0" width="7.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="873.2" y="1966.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (19 samples, 0.56%)</title><rect x="877.5" y="1971.0" width="6.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="880.5" y="1982.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (19 samples, 0.56%)</title><rect x="877.5" y="1955.0" width="6.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="880.5" y="1966.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (19 samples, 0.56%)</title><rect x="877.5" y="1939.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="880.5" y="1950.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (19 samples, 0.56%)</title><rect x="877.5" y="1923.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="880.5" y="1934.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (19 samples, 0.56%)</title><rect x="877.5" y="1907.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="880.5" y="1918.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (15 samples, 0.44%)</title><rect x="877.5" y="1891.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="880.5" y="1902.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (1 samples, 0.03%)</title><rect x="878.9" y="1875.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="881.9" y="1886.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.29%)</title><rect x="879.3" y="1875.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="882.3" y="1886.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="881.0" y="1859.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="884.0" y="1870.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.12%)</title><rect x="881.4" y="1859.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="884.4" y="1870.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.09%)</title><rect x="881.7" y="1843.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="884.7" y="1854.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.12%)</title><rect x="882.7" y="1891.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="885.7" y="1902.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.03%)</title><rect x="882.7" y="1875.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="885.7" y="1886.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="882.7" y="1859.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="885.7" y="1870.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="883.1" y="1875.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="886.1" y="1886.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.06%)</title><rect x="883.4" y="1875.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.4" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::start_of_nonstatic_oop_maps() const (1 samples, 0.03%)</title><rect x="883.4" y="1859.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="886.4" y="1870.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.03%)</title><rect x="883.4" y="1843.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="886.4" y="1854.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="883.8" y="1859.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="886.8" y="1870.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="884.1" y="1971.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="887.1" y="1982.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="884.1" y="1955.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="887.1" y="1966.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="884.1" y="1939.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="887.1" y="1950.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="884.1" y="1923.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="887.1" y="1934.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="884.1" y="1907.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="887.1" y="1918.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="884.1" y="1891.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="887.1" y="1902.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="884.5" y="1987.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="887.5" y="1998.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="884.5" y="1971.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="887.5" y="1982.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="884.5" y="1955.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.5" y="1966.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="884.5" y="1939.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="887.5" y="1950.0"></text>
</g>
<g>
<title>JavaThread::run() (872 samples, 25.68%)</title><rect x="884.8" y="2003.0" width="303.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="887.8" y="2014.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (872 samples, 25.68%)</title><rect x="884.8" y="1987.0" width="303.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="887.8" y="1998.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (859 samples, 25.30%)</title><rect x="884.8" y="1971.0" width="298.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="887.8" y="1982.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (859 samples, 25.30%)</title><rect x="884.8" y="1955.0" width="298.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="887.8" y="1966.0">CompileBroker::invoke_compiler_on_method..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (816 samples, 24.04%)</title><rect x="884.8" y="1939.0" width="283.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="887.8" y="1950.0">C2Compiler::compile_method(ciEnv*, ciM..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (816 samples, 24.04%)</title><rect x="884.8" y="1923.0" width="283.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="887.8" y="1934.0">Compile::Compile(ciEnv*, C2Compiler*, ..</text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.03%)</title><rect x="884.8" y="1907.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="887.8" y="1918.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="884.8" y="1891.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="887.8" y="1902.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="884.8" y="1875.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="887.8" y="1886.0"></text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (3 samples, 0.09%)</title><rect x="885.2" y="1907.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="888.2" y="1918.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (3 samples, 0.09%)</title><rect x="885.2" y="1891.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="888.2" y="1902.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.09%)</title><rect x="885.2" y="1875.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="888.2" y="1886.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.09%)</title><rect x="885.2" y="1859.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.2" y="1870.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.09%)</title><rect x="885.2" y="1843.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="888.2" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.09%)</title><rect x="885.2" y="1827.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="888.2" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.09%)</title><rect x="885.2" y="1811.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="888.2" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="885.2" y="1795.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="888.2" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.03%)</title><rect x="885.2" y="1779.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="888.2" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.06%)</title><rect x="885.5" y="1795.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="888.5" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="885.5" y="1779.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="888.5" y="1790.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="885.5" y="1763.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="888.5" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="885.5" y="1747.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="888.5" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="885.5" y="1731.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="888.5" y="1742.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="885.5" y="1715.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="888.5" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="885.5" y="1699.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="888.5" y="1710.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.03%)</title><rect x="885.5" y="1683.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="888.5" y="1694.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.03%)</title><rect x="885.5" y="1667.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="888.5" y="1678.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="885.9" y="1779.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="888.9" y="1790.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="885.9" y="1763.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="888.9" y="1774.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="885.9" y="1747.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="888.9" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::check_field_loader_constraints(Symbol*, Symbol*, Klass*, Klass*, Thread*) (1 samples, 0.03%)</title><rect x="885.9" y="1731.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="888.9" y="1742.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (446 samples, 13.14%)</title><rect x="886.2" y="1907.0" width="155.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="889.2" y="1918.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Block::code_alignment() const (1 samples, 0.03%)</title><rect x="886.2" y="1891.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="889.2" y="1902.0"></text>
</g>
<g>
<title>Compile::Output() (6 samples, 0.18%)</title><rect x="886.6" y="1891.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="889.6" y="1902.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (5 samples, 0.15%)</title><rect x="886.6" y="1875.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="889.6" y="1886.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.03%)</title><rect x="888.0" y="1859.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="891.0" y="1870.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.03%)</title><rect x="888.0" y="1843.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="891.0" y="1854.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.03%)</title><rect x="888.3" y="1875.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="891.3" y="1886.0"></text>
</g>
<g>
<title>CallStaticJavaDirectNode::reloc() const (1 samples, 0.03%)</title><rect x="888.3" y="1859.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="891.3" y="1870.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (11 samples, 0.32%)</title><rect x="888.7" y="1891.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="891.7" y="1902.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.06%)</title><rect x="889.7" y="1875.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="892.7" y="1886.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.03%)</title><rect x="890.0" y="1859.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="893.0" y="1870.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="890.0" y="1843.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="893.0" y="1854.0"></text>
</g>
<g>
<title>MachOper::disp_reloc() const (1 samples, 0.03%)</title><rect x="890.4" y="1875.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="893.4" y="1886.0"></text>
</g>
<g>
<title>MachUEPNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.03%)</title><rect x="890.7" y="1875.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="893.7" y="1886.0"></text>
</g>
<g>
<title>MacroAssembler::jump_cc(Assembler::Condition, AddressLiteral) (1 samples, 0.03%)</title><rect x="890.7" y="1859.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="893.7" y="1870.0"></text>
</g>
<g>
<title>CodeSection::relocate(unsigned char*, relocInfo::relocType, int, int) (1 samples, 0.03%)</title><rect x="890.7" y="1843.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="893.7" y="1854.0"></text>
</g>
<g>
<title>Relocation::pack_data_to(CodeSection*) (1 samples, 0.03%)</title><rect x="890.7" y="1827.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.7" y="1838.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (3 samples, 0.09%)</title><rect x="891.1" y="1875.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="894.1" y="1886.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.06%)</title><rect x="891.1" y="1859.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="894.1" y="1870.0"></text>
</g>
<g>
<title>DebugInformationRecorder::end_scopes(int, bool) (1 samples, 0.03%)</title><rect x="891.8" y="1859.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="894.8" y="1870.0"></text>
</g>
<g>
<title>loadNNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.03%)</title><rect x="892.1" y="1875.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="895.1" y="1886.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.03%)</title><rect x="892.5" y="1891.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="895.5" y="1902.0"></text>
</g>
<g>
<title>Matcher::match() (41 samples, 1.21%)</title><rect x="892.8" y="1891.0" width="14.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="895.8" y="1902.0"></text>
</g>
<g>
<title>ConINode::Opcode() const (1 samples, 0.03%)</title><rect x="893.2" y="1875.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="896.2" y="1886.0"></text>
</g>
<g>
<title>LoadNNode::Opcode() const (1 samples, 0.03%)</title><rect x="893.5" y="1875.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="896.5" y="1886.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (4 samples, 0.12%)</title><rect x="893.9" y="1875.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.9" y="1886.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (34 samples, 1.00%)</title><rect x="895.3" y="1875.0" width="11.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="898.3" y="1886.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (7 samples, 0.21%)</title><rect x="898.0" y="1859.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="901.0" y="1870.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (3 samples, 0.09%)</title><rect x="900.5" y="1859.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="903.5" y="1870.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.03%)</title><rect x="901.2" y="1843.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="904.2" y="1854.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.03%)</title><rect x="901.2" y="1827.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="904.2" y="1838.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (13 samples, 0.38%)</title><rect x="901.5" y="1859.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.5" y="1870.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.03%)</title><rect x="902.6" y="1843.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="905.6" y="1854.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.03%)</title><rect x="902.6" y="1827.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="905.6" y="1838.0"></text>
</g>
<g>
<title>MachNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.03%)</title><rect x="902.9" y="1843.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="905.9" y="1854.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (6 samples, 0.18%)</title><rect x="903.3" y="1843.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="906.3" y="1854.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (4 samples, 0.12%)</title><rect x="903.6" y="1827.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="906.6" y="1838.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.09%)</title><rect x="903.9" y="1811.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.9" y="1822.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.03%)</title><rect x="904.6" y="1795.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="907.6" y="1806.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="905.0" y="1827.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="908.0" y="1838.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="905.0" y="1811.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="908.0" y="1822.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.06%)</title><rect x="905.3" y="1843.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.3" y="1854.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.03%)</title><rect x="905.3" y="1827.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="908.3" y="1838.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.03%)</title><rect x="905.3" y="1811.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="908.3" y="1822.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.03%)</title><rect x="905.3" y="1795.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="908.3" y="1806.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="905.3" y="1779.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="908.3" y="1790.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.03%)</title><rect x="905.7" y="1827.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="908.7" y="1838.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.03%)</title><rect x="905.7" y="1811.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.7" y="1822.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.03%)</title><rect x="906.0" y="1859.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="909.0" y="1870.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.03%)</title><rect x="906.4" y="1859.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="909.4" y="1870.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="906.4" y="1843.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="909.4" y="1854.0"></text>
</g>
<g>
<title>Node::rm_prec(unsigned int) (1 samples, 0.03%)</title><rect x="906.7" y="1859.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="909.7" y="1870.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.06%)</title><rect x="907.1" y="1891.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="910.1" y="1902.0"></text>
</g>
<g>
<title>PhaseBlockLayout::grow_traces() (1 samples, 0.03%)</title><rect x="907.1" y="1875.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="910.1" y="1886.0"></text>
</g>
<g>
<title>PhaseBlockLayout::merge_traces(bool) (1 samples, 0.03%)</title><rect x="907.4" y="1875.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="910.4" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (3 samples, 0.09%)</title><rect x="907.8" y="1891.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="910.8" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (2 samples, 0.06%)</title><rect x="907.8" y="1875.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="910.8" y="1886.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="908.5" y="1875.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="911.5" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (43 samples, 1.27%)</title><rect x="908.8" y="1891.0" width="15.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="911.8" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.03%)</title><rect x="908.8" y="1875.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="911.8" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.03%)</title><rect x="908.8" y="1859.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="911.8" y="1870.0"></text>
</g>
<g>
<title>Block_Stack::most_frequent_successor(Block*) (1 samples, 0.03%)</title><rect x="908.8" y="1843.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="911.8" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (42 samples, 1.24%)</title><rect x="909.2" y="1875.0" width="14.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="912.2" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (1 samples, 0.03%)</title><rect x="910.6" y="1859.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="913.6" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.03%)</title><rect x="910.9" y="1859.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="913.9" y="1870.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.03%)</title><rect x="910.9" y="1843.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="913.9" y="1854.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="910.9" y="1827.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="913.9" y="1838.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (8 samples, 0.24%)</title><rect x="911.2" y="1859.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="914.2" y="1870.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.03%)</title><rect x="911.6" y="1843.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="914.6" y="1854.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.06%)</title><rect x="911.9" y="1843.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.9" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.03%)</title><rect x="912.6" y="1843.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="915.6" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (3 samples, 0.09%)</title><rect x="913.0" y="1843.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="916.0" y="1854.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="913.3" y="1827.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="916.3" y="1838.0"></text>
</g>
<g>
<title>tlsLoadPNode::bottom_type() const (1 samples, 0.03%)</title><rect x="913.7" y="1827.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="916.7" y="1838.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (12 samples, 0.35%)</title><rect x="914.0" y="1859.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.0" y="1870.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.03%)</title><rect x="915.8" y="1843.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="918.8" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (3 samples, 0.09%)</title><rect x="916.1" y="1843.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="919.1" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (3 samples, 0.09%)</title><rect x="917.2" y="1843.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="920.2" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (2 samples, 0.06%)</title><rect x="917.5" y="1827.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="920.5" y="1838.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.03%)</title><rect x="917.9" y="1811.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="920.9" y="1822.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.15%)</title><rect x="918.2" y="1859.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="921.2" y="1870.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.03%)</title><rect x="918.2" y="1843.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="921.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1827.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="921.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1811.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="921.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1795.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="921.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1779.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="921.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1763.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="921.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1747.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="921.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="918.2" y="1731.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.2" y="1742.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.06%)</title><rect x="918.5" y="1843.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="921.5" y="1854.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.03%)</title><rect x="919.2" y="1843.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="922.2" y="1854.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.03%)</title><rect x="919.6" y="1843.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="922.6" y="1854.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.03%)</title><rect x="919.9" y="1859.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="922.9" y="1870.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.27%)</title><rect x="920.3" y="1859.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="923.3" y="1870.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.09%)</title><rect x="921.0" y="1843.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="924.0" y="1854.0"></text>
</g>
<g>
<title>PhaseLive::add_livein(Block*, IndexSet*) (2 samples, 0.06%)</title><rect x="922.0" y="1843.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="925.0" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="922.4" y="1827.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="925.4" y="1838.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.06%)</title><rect x="922.7" y="1843.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.7" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="922.7" y="1827.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="925.7" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="923.1" y="1827.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="926.1" y="1838.0"></text>
</g>
<g>
<title>compP_mem_rRegNode::out_RegMask() const (1 samples, 0.03%)</title><rect x="923.4" y="1859.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="926.4" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (338 samples, 9.96%)</title><rect x="923.8" y="1891.0" width="117.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="926.8" y="1902.0">PhaseChaitin::..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="924.1" y="1875.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="927.1" y="1886.0"></text>
</g>
<g>
<title>CallStaticJavaDirectNode::oper_input_base() const (1 samples, 0.03%)</title><rect x="924.5" y="1875.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="927.5" y="1886.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.03%)</title><rect x="924.8" y="1875.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="927.8" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.06%)</title><rect x="925.2" y="1875.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="928.2" y="1886.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (1 samples, 0.03%)</title><rect x="925.8" y="1875.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="928.8" y="1886.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (9 samples, 0.27%)</title><rect x="926.2" y="1875.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="929.2" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (20 samples, 0.59%)</title><rect x="929.3" y="1875.0" width="7.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="932.3" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.12%)</title><rect x="930.7" y="1859.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="933.7" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (9 samples, 0.27%)</title><rect x="932.1" y="1859.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="935.1" y="1870.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="933.1" y="1843.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="936.1" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.15%)</title><rect x="933.5" y="1843.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="936.5" y="1854.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (3 samples, 0.09%)</title><rect x="935.2" y="1859.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="938.2" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (13 samples, 0.38%)</title><rect x="936.3" y="1875.0" width="4.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="939.3" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.09%)</title><rect x="937.3" y="1859.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="940.3" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (7 samples, 0.21%)</title><rect x="938.4" y="1859.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="941.4" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.12%)</title><rect x="939.4" y="1843.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="942.4" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (36 samples, 1.06%)</title><rect x="940.8" y="1875.0" width="12.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="943.8" y="1886.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.03%)</title><rect x="950.9" y="1859.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="953.9" y="1870.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (2 samples, 0.06%)</title><rect x="951.2" y="1859.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="954.2" y="1870.0"></text>
</g>
<g>
<title>Node::grow(unsigned int) (2 samples, 0.06%)</title><rect x="951.2" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="954.2" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.03%)</title><rect x="951.9" y="1859.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="954.9" y="1870.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.03%)</title><rect x="951.9" y="1843.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="954.9" y="1854.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.06%)</title><rect x="952.3" y="1859.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="955.3" y="1870.0"></text>
</g>
<g>
<title>loadNNode::rule() const (1 samples, 0.03%)</title><rect x="953.0" y="1859.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="956.0" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (75 samples, 2.21%)</title><rect x="953.3" y="1875.0" width="26.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="956.3" y="1886.0">P..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (4 samples, 0.12%)</title><rect x="956.8" y="1859.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="959.8" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.06%)</title><rect x="958.2" y="1859.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="961.2" y="1870.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.06%)</title><rect x="958.9" y="1859.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="961.9" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (6 samples, 0.18%)</title><rect x="959.6" y="1859.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="962.6" y="1870.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="961.3" y="1843.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="964.3" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::adjust_high_pressure_index(Block*, unsigned int&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.03%)</title><rect x="961.6" y="1859.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="964.6" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (4 samples, 0.12%)</title><rect x="962.0" y="1859.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="965.0" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="963.0" y="1843.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="966.0" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (28 samples, 0.82%)</title><rect x="963.4" y="1859.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="966.4" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.03%)</title><rect x="969.6" y="1843.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="972.6" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (9 samples, 0.27%)</title><rect x="970.0" y="1843.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="973.0" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::lower_pressure(Block*, unsigned int, LRG&amp;, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.06%)</title><rect x="973.1" y="1859.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="976.1" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (14 samples, 0.41%)</title><rect x="973.8" y="1859.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="976.8" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.12%)</title><rect x="975.5" y="1843.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="978.5" y="1854.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (5 samples, 0.15%)</title><rect x="976.9" y="1843.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="979.9" y="1854.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.06%)</title><rect x="978.7" y="1859.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="981.7" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (6 samples, 0.18%)</title><rect x="979.4" y="1875.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="982.4" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (5 samples, 0.15%)</title><rect x="979.7" y="1859.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="982.7" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="981.1" y="1843.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="984.1" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::choose_color(LRG&amp;, int) (1 samples, 0.03%)</title><rect x="981.5" y="1875.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="984.5" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (5 samples, 0.15%)</title><rect x="981.8" y="1875.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="984.8" y="1886.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.12%)</title><rect x="982.2" y="1859.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.2" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (32 samples, 0.94%)</title><rect x="983.5" y="1875.0" width="11.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="986.5" y="1886.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.03%)</title><rect x="989.5" y="1859.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="992.5" y="1870.0"></text>
</g>
<g>
<title>RegMask::Size() const (10 samples, 0.29%)</title><rect x="989.8" y="1859.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.8" y="1870.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.06%)</title><rect x="993.3" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="996.3" y="1870.0"></text>
</g>
<g>
<title>immL0Oper::constantL() const (1 samples, 0.03%)</title><rect x="994.0" y="1859.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="997.0" y="1870.0"></text>
</g>
<g>
<title>sarL_rReg_immNode::out_RegMask() const (1 samples, 0.03%)</title><rect x="994.3" y="1859.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="997.3" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (10 samples, 0.29%)</title><rect x="994.7" y="1875.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="997.7" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (47 samples, 1.38%)</title><rect x="998.1" y="1875.0" width="16.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.1" y="1886.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.03%)</title><rect x="1005.1" y="1859.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.1" y="1870.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1005.1" y="1843.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.1" y="1854.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1005.1" y="1827.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1008.1" y="1838.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1005.1" y="1811.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1008.1" y="1822.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (24 samples, 0.71%)</title><rect x="1005.4" y="1859.0" width="8.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.4" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1013.1" y="1843.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.1" y="1854.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1013.1" y="1827.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.1" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.03%)</title><rect x="1013.4" y="1843.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1016.4" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.03%)</title><rect x="1013.4" y="1827.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1016.4" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::yank(Node*, Block*, Node_List*, Node_List*) (1 samples, 0.03%)</title><rect x="1013.4" y="1811.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.4" y="1822.0"></text>
</g>
<g>
<title>Block::find_remove(Node const*) (1 samples, 0.03%)</title><rect x="1013.4" y="1795.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1016.4" y="1806.0"></text>
</g>
<g>
<title>Node_Array::remove(unsigned int) (1 samples, 0.03%)</title><rect x="1013.4" y="1779.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.4" y="1790.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.03%)</title><rect x="1013.8" y="1859.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.8" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.03%)</title><rect x="1013.8" y="1843.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.8" y="1854.0"></text>
</g>
<g>
<title>rRegNOper::type() const (1 samples, 0.03%)</title><rect x="1014.1" y="1859.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.1" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.06%)</title><rect x="1014.5" y="1875.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.5" y="1886.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (16 samples, 0.47%)</title><rect x="1015.2" y="1875.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1018.2" y="1886.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (15 samples, 0.44%)</title><rect x="1015.2" y="1859.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1018.2" y="1870.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (14 samples, 0.41%)</title><rect x="1015.5" y="1843.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.5" y="1854.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.03%)</title><rect x="1015.5" y="1827.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.5" y="1838.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (8 samples, 0.24%)</title><rect x="1015.9" y="1827.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.9" y="1838.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (4 samples, 0.12%)</title><rect x="1018.6" y="1827.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1021.6" y="1838.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.03%)</title><rect x="1020.0" y="1827.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1023.0" y="1838.0"></text>
</g>
<g>
<title>subI_rRegNode::two_adr() const (1 samples, 0.03%)</title><rect x="1020.4" y="1859.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.4" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (11 samples, 0.32%)</title><rect x="1020.7" y="1875.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.7" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.03%)</title><rect x="1022.5" y="1859.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1025.5" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.15%)</title><rect x="1022.8" y="1859.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1025.8" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (11 samples, 0.32%)</title><rect x="1024.6" y="1875.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1027.6" y="1886.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1026.3" y="1859.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.3" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.03%)</title><rect x="1026.6" y="1859.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.6" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.12%)</title><rect x="1027.0" y="1859.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1030.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (4 samples, 0.12%)</title><rect x="1028.4" y="1875.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1031.4" y="1886.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.06%)</title><rect x="1029.1" y="1859.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1032.1" y="1870.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (24 samples, 0.71%)</title><rect x="1029.8" y="1875.0" width="8.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1032.8" y="1886.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1034.3" y="1859.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1037.3" y="1870.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="1034.3" y="1843.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1037.3" y="1854.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (9 samples, 0.27%)</title><rect x="1034.6" y="1859.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1037.6" y="1870.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1036.7" y="1843.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1039.7" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.06%)</title><rect x="1037.1" y="1843.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1040.1" y="1854.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1037.8" y="1859.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1040.8" y="1870.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.03%)</title><rect x="1038.1" y="1875.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1041.1" y="1886.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.03%)</title><rect x="1038.5" y="1875.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1041.5" y="1886.0"></text>
</g>
<g>
<title>__memset_avx2_erms (2 samples, 0.06%)</title><rect x="1038.8" y="1875.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1041.8" y="1886.0"></text>
</g>
<g>
<title>addP_rReg_immNode::oper_input_base() const (1 samples, 0.03%)</title><rect x="1039.5" y="1875.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1042.5" y="1886.0"></text>
</g>
<g>
<title>andL_rReg_immNode::out_RegMask() const (1 samples, 0.03%)</title><rect x="1039.8" y="1875.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1042.8" y="1886.0"></text>
</g>
<g>
<title>jmpDirNode::oper_input_base() const (1 samples, 0.03%)</title><rect x="1040.2" y="1875.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1043.2" y="1886.0"></text>
</g>
<g>
<title>loadLNode::oper_input_base() const (1 samples, 0.03%)</title><rect x="1040.5" y="1875.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.5" y="1886.0"></text>
</g>
<g>
<title>rRegLOper::type() const (1 samples, 0.03%)</title><rect x="1040.9" y="1875.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1043.9" y="1886.0"></text>
</g>
<g>
<title>Compile::Optimize() (306 samples, 9.01%)</title><rect x="1041.2" y="1907.0" width="106.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1044.2" y="1918.0">Compile::Opti..</text>
</g>
<g>
<title>CmpINode::sub(Type const*, Type const*) const (1 samples, 0.03%)</title><rect x="1041.2" y="1891.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1044.2" y="1902.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.03%)</title><rect x="1041.6" y="1891.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1044.6" y="1902.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.03%)</title><rect x="1041.6" y="1875.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.6" y="1886.0"></text>
</g>
<g>
<title>ThreadLocalNode::Opcode() const (1 samples, 0.03%)</title><rect x="1041.6" y="1859.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1044.6" y="1870.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (8 samples, 0.24%)</title><rect x="1041.9" y="1891.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1044.9" y="1902.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (1 samples, 0.03%)</title><rect x="1041.9" y="1875.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.9" y="1886.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1041.9" y="1859.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.9" y="1870.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1041.9" y="1843.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.9" y="1854.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.03%)</title><rect x="1042.3" y="1875.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1045.3" y="1886.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1042.3" y="1859.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1045.3" y="1870.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1042.3" y="1843.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1045.3" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.12%)</title><rect x="1042.6" y="1875.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1045.6" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.09%)</title><rect x="1042.6" y="1859.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1045.6" y="1870.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1042.6" y="1843.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.6" y="1854.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.03%)</title><rect x="1042.6" y="1827.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1045.6" y="1838.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.06%)</title><rect x="1043.0" y="1843.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1046.0" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (2 samples, 0.06%)</title><rect x="1043.0" y="1827.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1046.0" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1811.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1046.0" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1795.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.0" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1779.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1046.0" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1763.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.0" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1747.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.0" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1731.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.0" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1715.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.0" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1699.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1046.0" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1683.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1046.0" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1667.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1046.0" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1651.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.0" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1635.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.0" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1619.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.0" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1603.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1046.0" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1587.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1046.0" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1043.0" y="1571.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.0" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1043.0" y="1555.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.0" y="1566.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1043.0" y="1539.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.0" y="1550.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1043.0" y="1523.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.0" y="1534.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1043.3" y="1555.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.3" y="1566.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1043.3" y="1539.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1046.3" y="1550.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.03%)</title><rect x="1043.7" y="1859.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.7" y="1870.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1044.0" y="1875.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1047.0" y="1886.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1044.0" y="1859.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1047.0" y="1870.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.03%)</title><rect x="1044.4" y="1875.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1047.4" y="1886.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) (3 samples, 0.09%)</title><rect x="1044.7" y="1891.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1047.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1045.1" y="1875.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.1" y="1886.0"></text>
</g>
<g>
<title>TypeOopPtr::singleton() const (1 samples, 0.03%)</title><rect x="1045.1" y="1859.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.1" y="1870.0"></text>
</g>
<g>
<title>Type::remove_speculative() const (1 samples, 0.03%)</title><rect x="1045.4" y="1875.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1048.4" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (6 samples, 0.18%)</title><rect x="1045.8" y="1891.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1048.8" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (6 samples, 0.18%)</title><rect x="1045.8" y="1875.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.8" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::add_local_var_and_edge(Node*, PointsToNode::EscapeState, Node*, Unique_Node_List*) [clone .isra.265] (1 samples, 0.03%)</title><rect x="1045.8" y="1859.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1048.8" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::add_node_to_connection_graph(Node*, Unique_Node_List*) (1 samples, 0.03%)</title><rect x="1046.1" y="1859.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.1" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (2 samples, 0.06%)</title><rect x="1046.5" y="1859.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1049.5" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (2 samples, 0.06%)</title><rect x="1046.5" y="1843.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.5" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) [clone .isra.264] (1 samples, 0.03%)</title><rect x="1046.8" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.8" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.06%)</title><rect x="1047.1" y="1859.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.1" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.06%)</title><rect x="1047.1" y="1843.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.1" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.06%)</title><rect x="1047.1" y="1827.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.1" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.03%)</title><rect x="1047.1" y="1811.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.1" y="1822.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.321] (1 samples, 0.03%)</title><rect x="1047.1" y="1795.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.1" y="1806.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.03%)</title><rect x="1047.1" y="1779.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.1" y="1790.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_canonical_holder(int) (1 samples, 0.03%)</title><rect x="1047.1" y="1763.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.1" y="1774.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1811.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.5" y="1822.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1795.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.5" y="1806.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1779.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="1790.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1763.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.5" y="1774.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1747.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.5" y="1758.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1731.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.5" y="1742.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1715.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.5" y="1726.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1699.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.5" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1683.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.5" y="1694.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1667.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.5" y="1678.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1651.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.5" y="1662.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1635.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.5" y="1646.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1619.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="1630.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1603.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.5" y="1614.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1587.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.5" y="1598.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1571.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.5" y="1582.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1555.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.5" y="1566.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1539.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.5" y="1550.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1523.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1050.5" y="1534.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1507.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.5" y="1518.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1491.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.5" y="1502.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1475.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.5" y="1486.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1459.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.5" y="1470.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1443.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.5" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1427.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.5" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1411.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.5" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1395.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1379.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.5" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1363.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.5" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1347.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.5" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1331.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.5" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1315.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.5" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1299.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.5" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1283.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.5" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1267.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.5" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1251.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.5" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1235.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.5" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1219.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.5" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1203.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.5" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.5" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.5" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1155.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.5" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1139.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.5" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.5" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.5" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.5" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.5" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.5" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1043.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1050.5" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.5" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.5" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.5" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="979.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.5" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.5" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.5" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="931.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.5" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1050.5" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.5" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.5" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.5" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.5" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.5" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.5" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.5" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1047.5" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1050.5" y="798.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.03%)</title><rect x="1047.5" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.5" y="782.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1047.8" y="1891.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.8" y="1902.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.15%)</title><rect x="1048.2" y="1891.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1051.2" y="1902.0"></text>
</g>
<g>
<title>CallNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1048.9" y="1875.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1051.9" y="1886.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1049.2" y="1875.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1052.2" y="1886.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.03%)</title><rect x="1049.2" y="1859.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1052.2" y="1870.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1049.6" y="1875.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1052.6" y="1886.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1049.6" y="1859.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1052.6" y="1870.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1049.6" y="1843.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1052.6" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (219 samples, 6.45%)</title><rect x="1049.9" y="1891.0" width="76.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.9" y="1902.0">PhaseIde..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.12%)</title><rect x="1049.9" y="1875.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1052.9" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.12%)</title><rect x="1049.9" y="1859.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.9" y="1870.0"></text>
</g>
<g>
<title>CmpINode::Opcode() const (1 samples, 0.03%)</title><rect x="1049.9" y="1843.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1052.9" y="1854.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.06%)</title><rect x="1050.3" y="1843.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.3" y="1854.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.06%)</title><rect x="1050.3" y="1827.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.3" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1050.3" y="1811.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.3" y="1822.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1050.3" y="1795.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.3" y="1806.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1050.3" y="1779.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1053.3" y="1790.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1050.3" y="1763.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.3" y="1774.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.03%)</title><rect x="1050.3" y="1747.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.3" y="1758.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1050.6" y="1811.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1053.6" y="1822.0"></text>
</g>
<g>
<title>IdealLoopTree::compute_trip_count(PhaseIdealLoop*) (1 samples, 0.03%)</title><rect x="1050.6" y="1795.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.6" y="1806.0"></text>
</g>
<g>
<title>CountedLoopEndNode::stride_con() const (1 samples, 0.03%)</title><rect x="1050.6" y="1779.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.6" y="1790.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1051.0" y="1843.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.0" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1051.0" y="1827.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.0" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.03%)</title><rect x="1051.0" y="1811.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.0" y="1822.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1051.0" y="1795.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.0" y="1806.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.06%)</title><rect x="1051.3" y="1875.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1054.3" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.03%)</title><rect x="1051.3" y="1859.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.3" y="1870.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.03%)</title><rect x="1051.3" y="1843.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1054.3" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) (1 samples, 0.03%)</title><rect x="1051.3" y="1827.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.3" y="1838.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.03%)</title><rect x="1051.3" y="1811.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.3" y="1822.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.03%)</title><rect x="1051.3" y="1795.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.3" y="1806.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.03%)</title><rect x="1051.7" y="1859.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.7" y="1870.0"></text>
</g>
<g>
<title>IdealLoopTree::reassociate_invariants(PhaseIdealLoop*) (1 samples, 0.03%)</title><rect x="1052.0" y="1875.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.0" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::is_invariant(Node*) const (1 samples, 0.03%)</title><rect x="1052.0" y="1859.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1055.0" y="1870.0"></text>
</g>
<g>
<title>IfNode::pinned() const (1 samples, 0.03%)</title><rect x="1052.4" y="1875.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1055.4" y="1886.0"></text>
</g>
<g>
<title>ParmNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1052.7" y="1875.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.7" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (10 samples, 0.29%)</title><rect x="1053.1" y="1875.0" width="3.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1056.1" y="1886.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1055.1" y="1859.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1058.1" y="1870.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.06%)</title><rect x="1055.5" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1058.5" y="1870.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1056.2" y="1859.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1059.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (18 samples, 0.53%)</title><rect x="1056.5" y="1875.0" width="6.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1059.5" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (8 samples, 0.24%)</title><rect x="1060.0" y="1859.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (5 samples, 0.15%)</title><rect x="1061.1" y="1843.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.182] (1 samples, 0.03%)</title><rect x="1061.4" y="1827.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1064.4" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (3 samples, 0.09%)</title><rect x="1061.7" y="1827.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1064.7" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (145 samples, 4.27%)</title><rect x="1062.8" y="1875.0" width="50.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1065.8" y="1886.0">Phase..</text>
</g>
<g>
<title>IfNode::Opcode() const (1 samples, 0.03%)</title><rect x="1069.0" y="1859.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1072.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (126 samples, 3.71%)</title><rect x="1069.4" y="1859.0" width="43.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1072.4" y="1870.0">Phas..</text>
</g>
<g>
<title>CallStaticJavaNode::Opcode() const (1 samples, 0.03%)</title><rect x="1070.8" y="1843.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1073.8" y="1854.0"></text>
</g>
<g>
<title>LockNode::Opcode() const (1 samples, 0.03%)</title><rect x="1071.1" y="1843.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.1" y="1854.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.03%)</title><rect x="1071.5" y="1843.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.5" y="1854.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.03%)</title><rect x="1071.8" y="1843.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1074.8" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (118 samples, 3.48%)</title><rect x="1072.2" y="1843.0" width="41.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.2" y="1854.0">Pha..</text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (3 samples, 0.09%)</title><rect x="1073.2" y="1827.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1076.2" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (3 samples, 0.09%)</title><rect x="1073.2" y="1811.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1076.2" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(unsigned int) const (2 samples, 0.06%)</title><rect x="1073.6" y="1795.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1076.6" y="1806.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1074.3" y="1827.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1077.3" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.182] (1 samples, 0.03%)</title><rect x="1074.3" y="1811.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1077.3" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (111 samples, 3.27%)</title><rect x="1074.6" y="1827.0" width="38.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1077.6" y="1838.0">Pha..</text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.182] (3 samples, 0.09%)</title><rect x="1112.1" y="1811.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.1" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (4 samples, 0.12%)</title><rect x="1113.2" y="1875.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1116.2" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (17 samples, 0.50%)</title><rect x="1114.6" y="1875.0" width="5.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1117.6" y="1886.0"></text>
</g>
<g>
<title>AddPNode::Opcode() const (1 samples, 0.03%)</title><rect x="1116.3" y="1859.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.3" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (4 samples, 0.12%)</title><rect x="1116.7" y="1859.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1119.7" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_after_loop(Node*) (1 samples, 0.03%)</title><rect x="1117.7" y="1843.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.7" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1117.7" y="1827.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.7" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (7 samples, 0.21%)</title><rect x="1118.1" y="1859.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.1" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.06%)</title><rect x="1118.1" y="1843.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.06%)</title><rect x="1118.7" y="1843.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.7" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (3 samples, 0.09%)</title><rect x="1119.4" y="1843.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.4" y="1854.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1119.4" y="1827.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.4" y="1838.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1119.4" y="1811.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.4" y="1822.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.03%)</title><rect x="1119.8" y="1827.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1122.8" y="1838.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.03%)</title><rect x="1119.8" y="1811.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.8" y="1822.0"></text>
</g>
<g>
<title>PhiNode::make_blank(Node*, Node*) (1 samples, 0.03%)</title><rect x="1120.1" y="1827.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.1" y="1838.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1120.1" y="1811.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.1" y="1822.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1120.1" y="1795.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.1" y="1806.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1120.1" y="1779.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.1" y="1790.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (15 samples, 0.44%)</title><rect x="1120.5" y="1875.0" width="5.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.5" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (15 samples, 0.44%)</title><rect x="1120.5" y="1859.0" width="5.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.5" y="1870.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1120.8" y="1843.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.8" y="1854.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.03%)</title><rect x="1120.8" y="1827.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.8" y="1838.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1120.8" y="1811.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.8" y="1822.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1120.8" y="1795.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1123.8" y="1806.0"></text>
</g>
<g>
<title>BoolNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1121.2" y="1843.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.2" y="1854.0"></text>
</g>
<g>
<title>CastIINode::Value(PhaseGVN*) const (2 samples, 0.06%)</title><rect x="1121.5" y="1843.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.5" y="1854.0"></text>
</g>
<g>
<title>TypeInt::filter_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1121.9" y="1827.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.9" y="1838.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1121.9" y="1811.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.9" y="1822.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1121.9" y="1795.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.9" y="1806.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1121.9" y="1779.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.9" y="1790.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1122.2" y="1843.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.2" y="1854.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1122.2" y="1827.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.2" y="1838.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.03%)</title><rect x="1122.2" y="1811.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.2" y="1822.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.03%)</title><rect x="1122.2" y="1795.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.2" y="1806.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1122.6" y="1843.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.6" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.03%)</title><rect x="1122.9" y="1843.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.9" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist0(Node*) (1 samples, 0.03%)</title><rect x="1122.9" y="1827.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1125.9" y="1838.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.03%)</title><rect x="1123.3" y="1843.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.3" y="1854.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1123.3" y="1827.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.3" y="1838.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1123.6" y="1843.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.6" y="1854.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (3 samples, 0.09%)</title><rect x="1124.0" y="1843.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.0" y="1854.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.03%)</title><rect x="1124.0" y="1827.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.0" y="1838.0"></text>
</g>
<g>
<title>ParmNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1124.3" y="1827.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.3" y="1838.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1124.7" y="1827.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.7" y="1838.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.06%)</title><rect x="1125.0" y="1843.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.0" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (2 samples, 0.06%)</title><rect x="1125.0" y="1827.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.0" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1125.0" y="1811.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.0" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1125.0" y="1795.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1128.0" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1125.0" y="1779.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1128.0" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1763.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.0" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1747.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1128.0" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1731.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1128.0" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1715.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.0" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1699.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1128.0" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1683.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1128.0" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1667.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.0" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1651.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.0" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1635.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1128.0" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1619.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1128.0" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1603.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.0" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1587.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.0" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1571.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1128.0" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1555.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1128.0" y="1566.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1125.0" y="1539.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.0" y="1550.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1125.0" y="1523.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.0" y="1534.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1125.4" y="1763.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1128.4" y="1774.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1125.4" y="1747.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1128.4" y="1758.0"></text>
</g>
<g>
<title>SuperWord::SuperWord(PhaseIdealLoop*) (1 samples, 0.03%)</title><rect x="1125.7" y="1875.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1128.7" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (49 samples, 1.44%)</title><rect x="1126.0" y="1891.0" width="17.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1129.0" y="1902.0"></text>
</g>
<g>
<title>LoadLNode::hash() const (1 samples, 0.03%)</title><rect x="1126.4" y="1875.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.4" y="1886.0"></text>
</g>
<g>
<title>LoadNode::hash() const (1 samples, 0.03%)</title><rect x="1126.7" y="1875.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.7" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (46 samples, 1.35%)</title><rect x="1127.1" y="1875.0" width="16.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1130.1" y="1886.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1127.8" y="1859.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.8" y="1870.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1128.1" y="1859.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.1" y="1870.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1128.1" y="1843.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.1" y="1854.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.03%)</title><rect x="1128.1" y="1827.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.1" y="1838.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (4 samples, 0.12%)</title><rect x="1128.5" y="1859.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.5" y="1870.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.03%)</title><rect x="1128.5" y="1843.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.5" y="1854.0"></text>
</g>
<g>
<title>IfNode::fold_compares(PhaseIterGVN*) (1 samples, 0.03%)</title><rect x="1128.8" y="1843.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.8" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.06%)</title><rect x="1129.2" y="1843.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.2" y="1854.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.03%)</title><rect x="1129.2" y="1827.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.2" y="1838.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.03%)</title><rect x="1129.5" y="1827.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.5" y="1838.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.03%)</title><rect x="1129.5" y="1811.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.5" y="1822.0"></text>
</g>
<g>
<title>IfNode::Opcode() const (1 samples, 0.03%)</title><rect x="1129.9" y="1859.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.9" y="1870.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (9 samples, 0.27%)</title><rect x="1130.2" y="1859.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.2" y="1870.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (3 samples, 0.09%)</title><rect x="1130.6" y="1843.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1133.6" y="1854.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (2 samples, 0.06%)</title><rect x="1130.6" y="1827.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.6" y="1838.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1130.6" y="1811.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.6" y="1822.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1130.9" y="1811.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1133.9" y="1822.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1130.9" y="1795.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1133.9" y="1806.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1130.9" y="1779.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.9" y="1790.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.03%)</title><rect x="1130.9" y="1763.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.9" y="1774.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1131.3" y="1827.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.3" y="1838.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1131.3" y="1811.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.3" y="1822.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (5 samples, 0.15%)</title><rect x="1131.6" y="1843.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.6" y="1854.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (3 samples, 0.09%)</title><rect x="1132.0" y="1827.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1135.0" y="1838.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.09%)</title><rect x="1132.0" y="1811.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.0" y="1822.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1133.0" y="1827.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.0" y="1838.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1133.0" y="1811.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.0" y="1822.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1133.0" y="1795.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.0" y="1806.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (4 samples, 0.12%)</title><rect x="1133.3" y="1859.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.3" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.12%)</title><rect x="1134.7" y="1859.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.7" y="1870.0"></text>
</g>
<g>
<title>BarrierSetC2::enqueue_useful_gc_barrier(Unique_Node_List&amp;, Node*) const (1 samples, 0.03%)</title><rect x="1135.8" y="1843.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.8" y="1854.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1136.1" y="1859.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.1" y="1870.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.03%)</title><rect x="1136.1" y="1843.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.1" y="1854.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (4 samples, 0.12%)</title><rect x="1136.5" y="1859.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.09%)</title><rect x="1136.5" y="1843.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.5" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (3 samples, 0.09%)</title><rect x="1136.5" y="1827.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.5" y="1838.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.03%)</title><rect x="1136.5" y="1811.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.5" y="1822.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.06%)</title><rect x="1136.8" y="1811.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.8" y="1822.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1137.5" y="1843.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.5" y="1854.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (15 samples, 0.44%)</title><rect x="1137.9" y="1859.0" width="5.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.9" y="1870.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (15 samples, 0.44%)</title><rect x="1137.9" y="1843.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.9" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (15 samples, 0.44%)</title><rect x="1137.9" y="1827.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.9" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (15 samples, 0.44%)</title><rect x="1137.9" y="1811.0" width="5.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.9" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.35%)</title><rect x="1137.9" y="1795.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.9" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.32%)</title><rect x="1137.9" y="1779.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.9" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.27%)</title><rect x="1137.9" y="1763.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.9" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.24%)</title><rect x="1137.9" y="1747.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.9" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.15%)</title><rect x="1137.9" y="1731.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.9" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.15%)</title><rect x="1137.9" y="1715.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.9" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.15%)</title><rect x="1137.9" y="1699.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.9" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.12%)</title><rect x="1137.9" y="1683.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.9" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.12%)</title><rect x="1137.9" y="1667.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.9" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.09%)</title><rect x="1137.9" y="1651.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.9" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.06%)</title><rect x="1137.9" y="1635.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.9" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1137.9" y="1619.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1140.9" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1137.9" y="1603.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.9" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1137.9" y="1587.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.9" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1137.9" y="1571.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.9" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1137.9" y="1555.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.9" y="1566.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1137.9" y="1539.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.9" y="1550.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1137.9" y="1523.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.9" y="1534.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1138.2" y="1619.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.2" y="1630.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1138.2" y="1603.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.2" y="1614.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1138.6" y="1635.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.6" y="1646.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1138.6" y="1619.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.6" y="1630.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1138.9" y="1651.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.9" y="1662.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1138.9" y="1635.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.9" y="1646.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1139.3" y="1683.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.3" y="1694.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1139.3" y="1667.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.3" y="1678.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (3 samples, 0.09%)</title><rect x="1139.6" y="1731.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.6" y="1742.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.09%)</title><rect x="1139.6" y="1715.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.6" y="1726.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1140.6" y="1747.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.6" y="1758.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1140.6" y="1731.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.6" y="1742.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (2 samples, 0.06%)</title><rect x="1141.0" y="1763.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.0" y="1774.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.06%)</title><rect x="1141.0" y="1747.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.0" y="1758.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1141.7" y="1779.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.7" y="1790.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1141.7" y="1763.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.7" y="1774.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (3 samples, 0.09%)</title><rect x="1142.0" y="1795.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.0" y="1806.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.09%)</title><rect x="1142.0" y="1779.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1145.0" y="1790.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.03%)</title><rect x="1143.1" y="1891.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.1" y="1902.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_allocate_node(AllocateNode*) (1 samples, 0.03%)</title><rect x="1143.1" y="1875.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.1" y="1886.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.03%)</title><rect x="1143.1" y="1859.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.1" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.03%)</title><rect x="1143.1" y="1843.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.1" y="1854.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (7 samples, 0.21%)</title><rect x="1143.4" y="1891.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.4" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.18%)</title><rect x="1143.4" y="1875.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.4" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.18%)</title><rect x="1143.4" y="1859.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.4" y="1870.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1143.4" y="1843.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.4" y="1854.0"></text>
</g>
<g>
<title>RegionNode::Opcode() const (1 samples, 0.03%)</title><rect x="1143.4" y="1827.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.4" y="1838.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.09%)</title><rect x="1143.8" y="1843.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.8" y="1854.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1143.8" y="1827.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.8" y="1838.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.03%)</title><rect x="1144.1" y="1827.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.1" y="1838.0"></text>
</g>
<g>
<title>LoadNode::find_previous_arraycopy(PhaseTransform*, Node*, Node*&amp;, bool) const (1 samples, 0.03%)</title><rect x="1144.1" y="1811.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.1" y="1822.0"></text>
</g>
<g>
<title>TypeRawPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1144.5" y="1827.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.5" y="1838.0"></text>
</g>
<g>
<title>MulNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1144.8" y="1843.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.8" y="1854.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1144.8" y="1827.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.8" y="1838.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1145.2" y="1843.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="1854.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.03%)</title><rect x="1145.2" y="1827.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.2" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1145.5" y="1875.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1148.5" y="1886.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1145.9" y="1891.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.9" y="1902.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1145.9" y="1875.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.9" y="1886.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1145.9" y="1859.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.9" y="1870.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1146.2" y="1891.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.2" y="1902.0"></text>
</g>
<g>
<title>StoreNNode::Opcode() const (1 samples, 0.03%)</title><rect x="1146.6" y="1891.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.6" y="1902.0"></text>
</g>
<g>
<title>URShiftLNode::bottom_type() const (1 samples, 0.03%)</title><rect x="1146.9" y="1891.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.9" y="1902.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.03%)</title><rect x="1147.2" y="1891.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1150.2" y="1902.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.03%)</title><rect x="1147.6" y="1907.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.6" y="1918.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (1 samples, 0.03%)</title><rect x="1147.6" y="1891.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.6" y="1902.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1147.6" y="1875.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.6" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1147.6" y="1859.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.6" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1147.6" y="1843.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.6" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1147.6" y="1827.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.6" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1147.6" y="1811.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.6" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1147.6" y="1795.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.6" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1147.6" y="1779.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.6" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1147.6" y="1763.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.6" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1147.6" y="1747.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.6" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1147.6" y="1731.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.6" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1147.6" y="1715.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.6" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1147.6" y="1699.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.6" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1147.6" y="1683.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.6" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1147.6" y="1667.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.6" y="1678.0"></text>
</g>
<g>
<title>JVMState::JVMState(ciMethod*, JVMState*) (1 samples, 0.03%)</title><rect x="1147.6" y="1651.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.6" y="1662.0"></text>
</g>
<g>
<title>Compile::process_print_inlining() (1 samples, 0.03%)</title><rect x="1147.9" y="1907.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.9" y="1918.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (52 samples, 1.53%)</title><rect x="1148.3" y="1907.0" width="18.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.3" y="1918.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (52 samples, 1.53%)</title><rect x="1148.3" y="1891.0" width="18.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.3" y="1902.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (52 samples, 1.53%)</title><rect x="1148.3" y="1875.0" width="18.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="1886.0"></text>
</g>
<g>
<title>Parse::do_one_block() (52 samples, 1.53%)</title><rect x="1148.3" y="1859.0" width="18.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.3" y="1870.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (52 samples, 1.53%)</title><rect x="1148.3" y="1843.0" width="18.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="1854.0"></text>
</g>
<g>
<title>Parse::do_call() (50 samples, 1.47%)</title><rect x="1148.3" y="1827.0" width="17.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.3" y="1838.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1148.3" y="1811.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.3" y="1822.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1148.3" y="1795.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.3" y="1806.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1148.3" y="1779.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="1790.0"></text>
</g>
<g>
<title>CompilerOracle::should_inline(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="1148.3" y="1763.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.3" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (36 samples, 1.06%)</title><rect x="1148.6" y="1811.0" width="12.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.6" y="1822.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (36 samples, 1.06%)</title><rect x="1148.6" y="1795.0" width="12.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.6" y="1806.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.03%)</title><rect x="1148.6" y="1779.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.6" y="1790.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.285] (1 samples, 0.03%)</title><rect x="1148.6" y="1763.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.6" y="1774.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1148.6" y="1747.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.6" y="1758.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.03%)</title><rect x="1148.6" y="1731.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.6" y="1742.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1148.6" y="1715.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.6" y="1726.0"></text>
</g>
<g>
<title>TypeInt::hash() const (1 samples, 0.03%)</title><rect x="1148.6" y="1699.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.6" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (35 samples, 1.03%)</title><rect x="1149.0" y="1779.0" width="12.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.0" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_block() (35 samples, 1.03%)</title><rect x="1149.0" y="1763.0" width="12.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.0" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (35 samples, 1.03%)</title><rect x="1149.0" y="1747.0" width="12.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.0" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (34 samples, 1.00%)</title><rect x="1149.0" y="1731.0" width="11.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.0" y="1742.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_receiver_for_speculation(Node*) [clone .part.242] (1 samples, 0.03%)</title><rect x="1149.0" y="1715.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.0" y="1726.0"></text>
</g>
<g>
<title>ciMethod::call_profile_at_bci(int) (1 samples, 0.03%)</title><rect x="1149.0" y="1699.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1710.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.03%)</title><rect x="1149.0" y="1683.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.0" y="1694.0"></text>
</g>
<g>
<title>ciMethodData::data_at(int) (1 samples, 0.03%)</title><rect x="1149.0" y="1667.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.0" y="1678.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1149.0" y="1651.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.0" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 0.59%)</title><rect x="1149.3" y="1715.0" width="7.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.3" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.59%)</title><rect x="1149.3" y="1699.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.3" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.59%)</title><rect x="1149.3" y="1683.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.3" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.59%)</title><rect x="1149.3" y="1667.0" width="7.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.3" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.59%)</title><rect x="1149.3" y="1651.0" width="7.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.3" y="1662.0"></text>
</g>
<g>
<title>Compile::print_inlining_assert_ready() (1 samples, 0.03%)</title><rect x="1149.3" y="1635.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.3" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.53%)</title><rect x="1149.7" y="1635.0" width="6.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.7" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.41%)</title><rect x="1149.7" y="1619.0" width="4.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.7" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.41%)</title><rect x="1149.7" y="1603.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.41%)</title><rect x="1149.7" y="1587.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.7" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.38%)</title><rect x="1149.7" y="1571.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.7" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.38%)</title><rect x="1149.7" y="1555.0" width="4.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.7" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.38%)</title><rect x="1149.7" y="1539.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.7" y="1550.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1149.7" y="1523.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.7" y="1534.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1149.7" y="1507.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.7" y="1518.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1149.7" y="1491.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.7" y="1502.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1149.7" y="1475.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.7" y="1486.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1149.7" y="1459.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.7" y="1470.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1149.7" y="1443.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.7" y="1454.0"></text>
</g>
<g>
<title>ciBytecodeStream::reset_to_bci(int) (1 samples, 0.03%)</title><rect x="1149.7" y="1427.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.7" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.32%)</title><rect x="1150.0" y="1523.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.0" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.32%)</title><rect x="1150.0" y="1507.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.0" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.29%)</title><rect x="1150.0" y="1491.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.0" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.29%)</title><rect x="1150.0" y="1475.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.0" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.29%)</title><rect x="1150.0" y="1459.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.0" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.29%)</title><rect x="1150.0" y="1443.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.0" y="1454.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.03%)</title><rect x="1150.0" y="1427.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.0" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.27%)</title><rect x="1150.4" y="1427.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.4" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.27%)</title><rect x="1150.4" y="1411.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.4" y="1422.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.03%)</title><rect x="1150.4" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.24%)</title><rect x="1150.7" y="1395.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.21%)</title><rect x="1150.7" y="1379.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.21%)</title><rect x="1150.7" y="1363.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.18%)</title><rect x="1150.7" y="1347.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.7" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.18%)</title><rect x="1150.7" y="1331.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.7" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.18%)</title><rect x="1150.7" y="1315.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.18%)</title><rect x="1150.7" y="1299.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.18%)</title><rect x="1150.7" y="1283.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.18%)</title><rect x="1150.7" y="1267.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.7" y="1278.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.03%)</title><rect x="1150.7" y="1251.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.7" y="1262.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.03%)</title><rect x="1150.7" y="1235.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.7" y="1246.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1150.7" y="1219.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.7" y="1230.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.03%)</title><rect x="1150.7" y="1203.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.12%)</title><rect x="1151.1" y="1251.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.1" y="1262.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="1151.1" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.1" y="1246.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1151.4" y="1235.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.4" y="1246.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.03%)</title><rect x="1151.4" y="1219.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.4" y="1230.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 0.03%)</title><rect x="1151.4" y="1203.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.4" y="1214.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1151.4" y="1187.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.4" y="1198.0"></text>
</g>
<g>
<title>ArrayCopyNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1151.4" y="1171.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.4" y="1182.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1151.4" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.4" y="1166.0"></text>
</g>
<g>
<title>CMoveNode::is_cmove_id(PhaseTransform*, Node*, Node*, Node*, BoolNode*) (1 samples, 0.03%)</title><rect x="1151.4" y="1139.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.4" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1151.8" y="1235.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.8" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1151.8" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1151.8" y="1203.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.8" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1151.8" y="1187.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.8" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1151.8" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.8" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1151.8" y="1155.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.8" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1151.8" y="1139.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.8" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1151.8" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1151.8" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1151.8" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1151.8" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.8" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1151.8" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.8" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1151.8" y="1043.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.8" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1151.8" y="1027.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1151.8" y="1011.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1151.8" y="995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1151.8" y="979.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1151.8" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.8" y="974.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1151.8" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.8" y="958.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1151.8" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.8" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1151.8" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.8" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1151.8" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.8" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1151.8" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.8" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1151.8" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.8" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1151.8" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.8" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1151.8" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.8" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1151.8" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.8" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="1151.8" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.8" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1151.8" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.8" y="798.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1151.8" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.8" y="782.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1151.8" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.8" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1151.8" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.8" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="1151.8" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.8" y="734.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.03%)</title><rect x="1151.8" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1152.1" y="947.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.1" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1152.1" y="931.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1152.1" y="915.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1152.1" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1152.5" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.5" y="1262.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1152.5" y="1235.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.5" y="1246.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.03%)</title><rect x="1152.5" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.5" y="1230.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.03%)</title><rect x="1152.5" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.5" y="1214.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.03%)</title><rect x="1152.5" y="1187.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1152.8" y="1347.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.8" y="1358.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.03%)</title><rect x="1152.8" y="1331.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.8" y="1342.0"></text>
</g>
<g>
<title>Parse::ensure_phis_everywhere() (1 samples, 0.03%)</title><rect x="1153.2" y="1379.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.2" y="1390.0"></text>
</g>
<g>
<title>Parse::ensure_phi(int, bool) (1 samples, 0.03%)</title><rect x="1153.2" y="1363.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.2" y="1374.0"></text>
</g>
<g>
<title>Parse::do_method_entry() (1 samples, 0.03%)</title><rect x="1153.5" y="1491.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.5" y="1502.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_parameters_for_speculation() (1 samples, 0.03%)</title><rect x="1153.5" y="1475.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.5" y="1486.0"></text>
</g>
<g>
<title>MethodData::profile_parameters() (1 samples, 0.03%)</title><rect x="1153.5" y="1459.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.5" y="1470.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1153.9" y="1523.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.9" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1153.9" y="1507.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.9" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1153.9" y="1491.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1153.9" y="1475.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.9" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1153.9" y="1459.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1153.9" y="1443.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.9" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1153.9" y="1427.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.9" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1153.9" y="1411.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.9" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1153.9" y="1395.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1153.9" y="1379.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1153.9" y="1363.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1153.9" y="1347.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.03%)</title><rect x="1153.9" y="1331.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.9" y="1342.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.03%)</title><rect x="1153.9" y="1315.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.9" y="1326.0"></text>
</g>
<g>
<title>GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool) (1 samples, 0.03%)</title><rect x="1153.9" y="1299.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.9" y="1310.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.03%)</title><rect x="1153.9" y="1283.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.9" y="1294.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.03%)</title><rect x="1153.9" y="1267.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="1278.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.03%)</title><rect x="1153.9" y="1251.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="1262.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1153.9" y="1235.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="1246.0"></text>
</g>
<g>
<title>LoadNKlassNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1153.9" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.9" y="1230.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.03%)</title><rect x="1154.2" y="1571.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.2" y="1582.0"></text>
</g>
<g>
<title>Parse::merge_memory_edges(MergeMemNode*, int, bool) (1 samples, 0.03%)</title><rect x="1154.2" y="1555.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.2" y="1566.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1154.2" y="1539.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.2" y="1550.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1154.2" y="1523.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.2" y="1534.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.12%)</title><rect x="1154.5" y="1619.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.5" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1154.5" y="1603.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.5" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1154.5" y="1587.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.09%)</title><rect x="1154.5" y="1571.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.5" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.09%)</title><rect x="1154.5" y="1555.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.5" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.09%)</title><rect x="1154.5" y="1539.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.09%)</title><rect x="1154.5" y="1523.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.5" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1154.5" y="1507.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.5" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1154.5" y="1491.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.09%)</title><rect x="1154.5" y="1475.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.5" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.09%)</title><rect x="1154.5" y="1459.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.09%)</title><rect x="1154.5" y="1443.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.09%)</title><rect x="1154.5" y="1427.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.5" y="1438.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1154.5" y="1411.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.5" y="1422.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1154.5" y="1395.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.5" y="1406.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1154.5" y="1379.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.5" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1154.5" y="1363.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.5" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1154.5" y="1347.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.5" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1154.5" y="1331.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.5" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1154.5" y="1315.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.5" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::compute_exceptions() (1 samples, 0.03%)</title><rect x="1154.5" y="1299.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.5" y="1310.0"></text>
</g>
<g>
<title>ciExceptionHandlerStream::count() (1 samples, 0.03%)</title><rect x="1154.5" y="1283.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.5" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1154.9" y="1411.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.9" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1154.9" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1154.9" y="1379.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1154.9" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1154.9" y="1347.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1154.9" y="1331.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.9" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1154.9" y="1315.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.9" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1154.9" y="1299.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.9" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1154.9" y="1283.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.9" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1154.9" y="1267.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1154.9" y="1251.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.9" y="1262.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1154.9" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1154.9" y="1219.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.9" y="1230.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1154.9" y="1203.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.9" y="1214.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1154.9" y="1187.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.9" y="1198.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1154.9" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.9" y="1182.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1154.9" y="1155.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.9" y="1166.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.03%)</title><rect x="1154.9" y="1139.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.9" y="1150.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.03%)</title><rect x="1154.9" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.9" y="1134.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1154.9" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.9" y="1118.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1154.9" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.9" y="1102.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.03%)</title><rect x="1154.9" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.9" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1155.2" y="1315.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.2" y="1326.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1155.2" y="1299.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.2" y="1310.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1155.2" y="1283.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.2" y="1294.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1155.2" y="1267.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.2" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1155.2" y="1251.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.2" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1155.6" y="1603.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.6" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1155.6" y="1587.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.6" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1155.6" y="1571.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.6" y="1582.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1155.6" y="1555.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.6" y="1566.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1155.6" y="1539.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.6" y="1550.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1155.6" y="1523.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.6" y="1534.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1155.9" y="1635.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1155.9" y="1619.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.9" y="1630.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.03%)</title><rect x="1155.9" y="1603.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.9" y="1614.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1155.9" y="1587.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.9" y="1598.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1155.9" y="1571.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.9" y="1582.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1155.9" y="1555.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.9" y="1566.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.03%)</title><rect x="1155.9" y="1539.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.9" y="1550.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.03%)</title><rect x="1155.9" y="1523.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.9" y="1534.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.03%)</title><rect x="1155.9" y="1507.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.9" y="1518.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.03%)</title><rect x="1155.9" y="1491.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.9" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.03%)</title><rect x="1155.9" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.9" y="1486.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.03%)</title><rect x="1155.9" y="1459.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.9" y="1470.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (13 samples, 0.38%)</title><rect x="1156.3" y="1715.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.3" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.29%)</title><rect x="1156.3" y="1699.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.3" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.29%)</title><rect x="1156.3" y="1683.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.3" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.29%)</title><rect x="1156.3" y="1667.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.3" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.29%)</title><rect x="1156.3" y="1651.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.3" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.29%)</title><rect x="1156.3" y="1635.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.3" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.29%)</title><rect x="1156.3" y="1619.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.3" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.24%)</title><rect x="1156.3" y="1603.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.3" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.24%)</title><rect x="1156.3" y="1587.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.3" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.24%)</title><rect x="1156.3" y="1571.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.3" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.24%)</title><rect x="1156.3" y="1555.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.3" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.24%)</title><rect x="1156.3" y="1539.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.3" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.21%)</title><rect x="1156.3" y="1523.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.3" y="1534.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1156.3" y="1507.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.3" y="1518.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1156.3" y="1491.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.3" y="1502.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1156.3" y="1475.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.3" y="1486.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1156.3" y="1459.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.3" y="1470.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1156.3" y="1443.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.3" y="1454.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1156.3" y="1427.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.3" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1156.3" y="1411.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.3" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1156.3" y="1395.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.3" y="1406.0"></text>
</g>
<g>
<title>ciSignature::type_at(int) const (1 samples, 0.03%)</title><rect x="1156.3" y="1379.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.3" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.15%)</title><rect x="1156.6" y="1507.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.15%)</title><rect x="1156.6" y="1491.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.6" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.15%)</title><rect x="1156.6" y="1475.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.6" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.15%)</title><rect x="1156.6" y="1459.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.6" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.15%)</title><rect x="1156.6" y="1443.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.15%)</title><rect x="1156.6" y="1427.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.6" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1156.6" y="1411.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.6" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1156.6" y="1395.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.6" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.09%)</title><rect x="1156.6" y="1379.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1156.6" y="1363.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.6" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1156.6" y="1347.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.6" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1156.6" y="1331.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.6" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1156.6" y="1315.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1156.6" y="1299.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1156.6" y="1283.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1156.6" y="1267.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1156.6" y="1251.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1156.6" y="1235.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.6" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1156.6" y="1219.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.6" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1156.6" y="1203.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1156.6" y="1187.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1156.6" y="1171.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1156.6" y="1155.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1156.6" y="1139.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1156.6" y="1123.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.6" y="1134.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.03%)</title><rect x="1156.6" y="1107.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1157.0" y="1235.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.0" y="1246.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.03%)</title><rect x="1157.0" y="1219.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.0" y="1230.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.03%)</title><rect x="1157.0" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.0" y="1214.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.03%)</title><rect x="1157.0" y="1187.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.0" y="1198.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1157.0" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.0" y="1182.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1157.0" y="1155.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.0" y="1166.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="1157.0" y="1139.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1160.0" y="1150.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.03%)</title><rect x="1157.3" y="1363.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.3" y="1374.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1157.7" y="1411.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.7" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1157.7" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.7" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1157.7" y="1379.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1157.7" y="1363.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1157.7" y="1347.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.7" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1157.7" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.7" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1157.7" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.7" y="1326.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="1157.7" y="1299.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.7" y="1310.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="1157.7" y="1283.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.7" y="1294.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.03%)</title><rect x="1157.7" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.7" y="1278.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1157.7" y="1251.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.7" y="1262.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1157.7" y="1235.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.7" y="1246.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.0" y="1299.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.0" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.0" y="1283.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.0" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1158.0" y="1267.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.0" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1158.0" y="1251.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.0" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1158.0" y="1235.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1158.0" y="1219.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1158.0" y="1203.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.0" y="1214.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1158.0" y="1187.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.0" y="1198.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1158.0" y="1171.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.0" y="1182.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1158.0" y="1155.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.0" y="1166.0"></text>
</g>
<g>
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.03%)</title><rect x="1158.0" y="1139.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.0" y="1150.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.03%)</title><rect x="1158.0" y="1123.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.0" y="1134.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="1158.0" y="1107.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.0" y="1118.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol_or_null() (1 samples, 0.03%)</title><rect x="1158.0" y="1091.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.0" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.4" y="1507.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.4" y="1491.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.4" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1158.4" y="1475.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1158.4" y="1459.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.4" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1158.4" y="1443.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.4" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1158.4" y="1427.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1158.4" y="1411.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.4" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.4" y="1395.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.4" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1158.4" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1158.4" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1158.4" y="1347.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.4" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1158.4" y="1331.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1158.4" y="1315.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.4" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.4" y="1299.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.4" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1158.4" y="1283.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1158.4" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1158.4" y="1251.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.4" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1158.4" y="1235.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.4" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1158.4" y="1219.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.4" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.4" y="1203.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.4" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1158.4" y="1187.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.4" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1158.4" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.4" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1158.4" y="1155.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.4" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1158.4" y="1139.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1158.4" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1158.4" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1158.4" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.4" y="1102.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1158.4" y="1075.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="1086.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1158.4" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.4" y="1070.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1158.4" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="1054.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1158.4" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.4" y="1038.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.03%)</title><rect x="1158.4" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.4" y="1022.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.03%)</title><rect x="1158.4" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.03%)</title><rect x="1158.7" y="1523.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.7" y="1534.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.03%)</title><rect x="1158.7" y="1507.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="1518.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.03%)</title><rect x="1158.7" y="1491.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.7" y="1502.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar_volatile(int, int, Node*) (1 samples, 0.03%)</title><rect x="1158.7" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.7" y="1486.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.03%)</title><rect x="1158.7" y="1459.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.7" y="1470.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.03%)</title><rect x="1158.7" y="1443.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.7" y="1454.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1159.1" y="1603.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.1" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1159.1" y="1587.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.1" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1159.1" y="1571.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.1" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1159.1" y="1555.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.1" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1159.1" y="1539.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.1" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1159.1" y="1523.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.1" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1159.1" y="1507.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.1" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.1" y="1491.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.1" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.1" y="1475.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.1" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.1" y="1459.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.1" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.1" y="1443.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.1" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.1" y="1427.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.1" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.1" y="1411.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.1" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.1" y="1395.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.1" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.1" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.1" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.1" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.1" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.1" y="1347.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.1" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.1" y="1331.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.1" y="1342.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.03%)</title><rect x="1159.1" y="1315.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.1" y="1326.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.03%)</title><rect x="1159.1" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.1" y="1310.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.03%)</title><rect x="1159.1" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.1" y="1294.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1159.1" y="1267.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.1" y="1278.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1159.1" y="1251.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.1" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1491.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.4" y="1502.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1475.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1459.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.4" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.4" y="1443.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.4" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.4" y="1427.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.4" y="1411.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.4" y="1395.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.4" y="1379.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.4" y="1390.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1363.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.4" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1347.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.4" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.4" y="1331.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.4" y="1315.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.4" y="1299.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.4" y="1283.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.4" y="1267.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.4" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1251.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.4" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.4" y="1235.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.4" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.4" y="1219.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.4" y="1203.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.4" y="1187.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.4" y="1171.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.4" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1155.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.4" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.4" y="1139.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.4" y="1123.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.4" y="1107.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.4" y="1091.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.4" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.4" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.4" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.4" y="1027.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.4" y="1011.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.4" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.4" y="1006.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.03%)</title><rect x="1159.4" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.4" y="990.0"></text>
</g>
<g>
<title>PhiNode::slice_memory(TypePtr const*) const (1 samples, 0.03%)</title><rect x="1159.4" y="963.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.4" y="974.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.03%)</title><rect x="1159.4" y="947.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="958.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1159.8" y="1699.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1159.8" y="1683.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.8" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1159.8" y="1667.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.09%)</title><rect x="1159.8" y="1651.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.09%)</title><rect x="1159.8" y="1635.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.09%)</title><rect x="1159.8" y="1619.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.09%)</title><rect x="1159.8" y="1603.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.8" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1159.8" y="1587.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.8" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1159.8" y="1571.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1159.8" y="1555.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1159.8" y="1539.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1159.8" y="1523.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1159.8" y="1507.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.8" y="1518.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1491.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.8" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1475.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.8" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.8" y="1459.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.8" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.8" y="1443.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.8" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.8" y="1427.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.8" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.8" y="1411.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.8" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.8" y="1395.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.8" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.8" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.8" y="1363.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.8" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.8" y="1347.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.8" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.8" y="1331.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.8" y="1315.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.8" y="1299.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.8" y="1310.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1267.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.8" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.8" y="1251.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.8" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.8" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.8" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.8" y="1219.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.8" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.8" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.8" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.8" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.8" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.8" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.8" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.8" y="1123.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.8" y="1107.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1159.8" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.8" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1159.8" y="1075.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.8" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1159.8" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1159.8" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1159.8" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1159.8" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1159.8" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1159.8" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.8" y="990.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1159.8" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1159.8" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.8" y="958.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1159.8" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.8" y="942.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.03%)</title><rect x="1159.8" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.8" y="926.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.03%)</title><rect x="1159.8" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.8" y="910.0"></text>
</g>
<g>
<title>IdealKit::delay_transform(Node*) (1 samples, 0.03%)</title><rect x="1159.8" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="894.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.03%)</title><rect x="1159.8" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.8" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1159.8" y="851.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1162.8" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.03%)</title><rect x="1160.1" y="1491.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.1" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1160.1" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.1" y="1486.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1587.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.5" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1571.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.5" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="1555.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.5" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1160.5" y="1539.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1160.5" y="1523.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1160.5" y="1507.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1160.5" y="1491.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1475.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.5" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="1459.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1160.5" y="1443.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1160.5" y="1427.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1160.5" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1160.5" y="1395.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.5" y="1406.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.5" y="1390.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1363.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.5" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1347.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.5" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="1331.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1160.5" y="1315.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1160.5" y="1299.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1160.5" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1160.5" y="1267.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.5" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1251.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="1235.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1160.5" y="1219.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1160.5" y="1203.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1160.5" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1160.5" y="1171.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.5" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1155.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.5" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1160.5" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1160.5" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1160.5" y="1091.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1160.5" y="1075.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.5" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="1043.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1160.5" y="1027.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1160.5" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1160.5" y="995.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1160.5" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1160.5" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.5" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1160.5" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1160.5" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.5" y="942.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1160.5" y="915.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.5" y="926.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1160.5" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.5" y="910.0"></text>
</g>
<g>
<title>TypeInt::filter_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1160.5" y="883.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1160.8" y="1731.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.8" y="1742.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1160.8" y="1715.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="1726.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1160.8" y="1699.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.8" y="1710.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1160.8" y="1683.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.8" y="1694.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1160.8" y="1667.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.8" y="1678.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.03%)</title><rect x="1160.8" y="1651.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.8" y="1662.0"></text>
</g>
<g>
<title>CardTableBarrierSetC2::byte_map_base_node(GraphKit*) const (1 samples, 0.03%)</title><rect x="1160.8" y="1635.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.8" y="1646.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1160.8" y="1619.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.8" y="1630.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1160.8" y="1603.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="1614.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (13 samples, 0.38%)</title><rect x="1161.2" y="1811.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.2" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.32%)</title><rect x="1161.2" y="1795.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.2" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.32%)</title><rect x="1161.2" y="1779.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.2" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.32%)</title><rect x="1161.2" y="1763.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.2" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.32%)</title><rect x="1161.2" y="1747.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.2" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.32%)</title><rect x="1161.2" y="1731.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.2" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.32%)</title><rect x="1161.2" y="1715.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.2" y="1726.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="1161.2" y="1699.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.2" y="1710.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="1161.2" y="1683.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.2" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.27%)</title><rect x="1161.5" y="1699.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.5" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.27%)</title><rect x="1161.5" y="1683.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.24%)</title><rect x="1161.5" y="1667.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.24%)</title><rect x="1161.5" y="1651.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.5" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.24%)</title><rect x="1161.5" y="1635.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.5" y="1646.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.03%)</title><rect x="1161.5" y="1619.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.5" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1603.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1164.5" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1587.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1164.5" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1571.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1164.5" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1555.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1164.5" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1539.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1164.5" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1523.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1164.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1161.5" y="1507.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1164.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.21%)</title><rect x="1161.8" y="1619.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.8" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.21%)</title><rect x="1161.8" y="1603.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.8" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.21%)</title><rect x="1161.8" y="1587.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.8" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.21%)</title><rect x="1161.8" y="1571.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.8" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.21%)</title><rect x="1161.8" y="1555.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.8" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.21%)</title><rect x="1161.8" y="1539.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.21%)</title><rect x="1161.8" y="1523.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.8" y="1534.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1161.8" y="1507.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.8" y="1518.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1161.8" y="1491.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.8" y="1502.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1161.8" y="1475.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.8" y="1486.0"></text>
</g>
<g>
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.03%)</title><rect x="1161.8" y="1459.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.8" y="1470.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.03%)</title><rect x="1161.8" y="1443.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.8" y="1454.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="1161.8" y="1427.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.8" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.12%)</title><rect x="1162.2" y="1507.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.2" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.12%)</title><rect x="1162.2" y="1491.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.2" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.12%)</title><rect x="1162.2" y="1475.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.2" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.12%)</title><rect x="1162.2" y="1459.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.2" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.12%)</title><rect x="1162.2" y="1443.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.2" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.09%)</title><rect x="1162.2" y="1427.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.2" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1162.2" y="1411.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.2" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1162.2" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.2" y="1406.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.03%)</title><rect x="1162.2" y="1379.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.2" y="1390.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.03%)</title><rect x="1162.2" y="1363.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.2" y="1374.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.03%)</title><rect x="1162.2" y="1347.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.2" y="1358.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="1162.2" y="1331.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1165.2" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1162.5" y="1379.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.5" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1162.5" y="1363.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.5" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1162.5" y="1347.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1162.5" y="1331.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.5" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1162.5" y="1315.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.5" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1162.5" y="1299.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.5" y="1310.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.164] (1 samples, 0.03%)</title><rect x="1162.5" y="1283.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.5" y="1294.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1162.5" y="1267.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.5" y="1278.0"></text>
</g>
<g>
<title>ciTypeStackSlotEntries::translate_type_data_from(TypeStackSlotEntries const*) (1 samples, 0.03%)</title><rect x="1162.5" y="1251.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.5" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1162.9" y="1411.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.9" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1162.9" y="1395.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.9" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1162.9" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1162.9" y="1363.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1162.9" y="1347.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1162.9" y="1331.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.9" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1162.9" y="1315.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="1326.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="1162.9" y="1299.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.9" y="1310.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="1162.9" y="1283.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.9" y="1294.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.03%)</title><rect x="1162.9" y="1267.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.9" y="1278.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1162.9" y="1251.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.9" y="1262.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1162.9" y="1235.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.9" y="1246.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1162.9" y="1219.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.9" y="1230.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1162.9" y="1203.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.9" y="1214.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1162.9" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.9" y="1198.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.03%)</title><rect x="1162.9" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.9" y="1182.0"></text>
</g>
<g>
<title>TypeOopPtr::eq(Type const*) const [clone .part.150] (1 samples, 0.03%)</title><rect x="1162.9" y="1155.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1163.2" y="1427.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.2" y="1438.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1163.2" y="1411.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="1422.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1163.2" y="1395.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.2" y="1406.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_input_for_runtime_call(SafePointNode*) (1 samples, 0.03%)</title><rect x="1163.2" y="1379.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.2" y="1390.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1163.2" y="1363.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.2" y="1374.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1163.2" y="1347.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.2" y="1358.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1163.6" y="1507.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.6" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1163.6" y="1491.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.6" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1163.6" y="1475.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.6" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1163.6" y="1459.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.6" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1163.6" y="1443.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1163.6" y="1427.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.6" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1163.6" y="1411.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.6" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1163.6" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.6" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1163.6" y="1379.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.6" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1163.6" y="1363.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.6" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1163.6" y="1347.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.6" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1163.6" y="1331.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1163.6" y="1315.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.6" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1163.6" y="1299.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.6" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1163.6" y="1283.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1163.6" y="1267.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1163.6" y="1251.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1163.6" y="1235.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1163.6" y="1219.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.6" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1163.6" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.6" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1163.6" y="1187.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1163.6" y="1171.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1163.6" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1163.6" y="1139.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1163.6" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.6" y="1134.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.03%)</title><rect x="1163.6" y="1107.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.6" y="1118.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.03%)</title><rect x="1163.6" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.6" y="1102.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.03%)</title><rect x="1163.6" y="1075.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.6" y="1086.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1163.6" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.6" y="1070.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1163.6" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.6" y="1054.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1163.6" y="1027.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.6" y="1038.0"></text>
</g>
<g>
<title>TypePtr::speculative() const (1 samples, 0.03%)</title><rect x="1163.6" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.6" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method_index() (1 samples, 0.03%)</title><rect x="1163.9" y="1507.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.9" y="1518.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.164] (1 samples, 0.03%)</title><rect x="1164.3" y="1667.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.3" y="1678.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1164.3" y="1651.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.3" y="1662.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1164.3" y="1635.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.3" y="1646.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1164.6" y="1699.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.6" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1164.6" y="1683.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.6" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1164.6" y="1667.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.6" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1164.6" y="1651.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.6" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1164.6" y="1635.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.6" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1164.6" y="1619.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.6" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1164.6" y="1603.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.6" y="1614.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1164.6" y="1587.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.6" y="1598.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.03%)</title><rect x="1164.6" y="1571.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.6" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1795.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.0" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1779.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.0" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1165.0" y="1763.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.0" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1165.0" y="1747.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.0" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1165.0" y="1731.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.0" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1165.0" y="1715.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.0" y="1726.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1165.0" y="1699.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.0" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1683.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.0" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1165.0" y="1667.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.0" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1165.0" y="1651.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.0" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1165.0" y="1635.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.0" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1165.0" y="1619.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.0" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1165.0" y="1603.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.0" y="1614.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1587.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.0" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1165.0" y="1571.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.0" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1165.0" y="1555.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.0" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1165.0" y="1539.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.0" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1165.0" y="1523.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.0" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1165.0" y="1507.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.0" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1491.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.0" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1165.0" y="1475.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.0" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1165.0" y="1459.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.0" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1165.0" y="1443.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.0" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1165.0" y="1427.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.0" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1165.0" y="1411.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.0" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.0" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1165.0" y="1379.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.0" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1165.0" y="1363.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.0" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1165.0" y="1347.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.0" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1165.0" y="1331.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.0" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1165.0" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.0" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.0" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.0" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1165.0" y="1283.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.0" y="1294.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1165.0" y="1267.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.0" y="1278.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.03%)</title><rect x="1165.0" y="1251.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.0" y="1262.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1165.0" y="1235.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.0" y="1246.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1165.0" y="1219.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.0" y="1230.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1165.3" y="1795.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.3" y="1806.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1165.3" y="1779.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.3" y="1790.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1165.7" y="1827.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.7" y="1838.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.285] (1 samples, 0.03%)</title><rect x="1165.7" y="1811.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.7" y="1822.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1165.7" y="1795.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.7" y="1806.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1166.0" y="1827.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.0" y="1838.0"></text>
</g>
<g>
<title>CmpINode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1166.0" y="1811.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.0" y="1822.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (6 samples, 0.18%)</title><rect x="1166.4" y="1907.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.4" y="1918.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.09%)</title><rect x="1166.4" y="1891.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.4" y="1902.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (3 samples, 0.09%)</title><rect x="1167.4" y="1891.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.4" y="1902.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1168.5" y="1939.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.5" y="1950.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.03%)</title><rect x="1168.5" y="1923.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.5" y="1934.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.03%)</title><rect x="1168.5" y="1907.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1171.5" y="1918.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (41 samples, 1.21%)</title><rect x="1168.8" y="1939.0" width="14.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.8" y="1950.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (41 samples, 1.21%)</title><rect x="1168.8" y="1923.0" width="14.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.8" y="1934.0"></text>
</g>
<g>
<title>Compilation::compile_method() (41 samples, 1.21%)</title><rect x="1168.8" y="1907.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.8" y="1918.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (40 samples, 1.18%)</title><rect x="1168.8" y="1891.0" width="13.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.8" y="1902.0"></text>
</g>
<g>
<title>Compilation::build_hir() (19 samples, 0.56%)</title><rect x="1168.8" y="1875.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.8" y="1886.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (16 samples, 0.47%)</title><rect x="1168.8" y="1859.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.8" y="1870.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (16 samples, 0.47%)</title><rect x="1168.8" y="1843.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.8" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (16 samples, 0.47%)</title><rect x="1168.8" y="1827.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.8" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (16 samples, 0.47%)</title><rect x="1168.8" y="1811.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (16 samples, 0.47%)</title><rect x="1168.8" y="1795.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.8" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1168.8" y="1779.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.8" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.03%)</title><rect x="1168.8" y="1763.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.8" y="1774.0"></text>
</g>
<g>
<title>Constant::is_equal(Instruction*) const (1 samples, 0.03%)</title><rect x="1168.8" y="1747.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.8" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (14 samples, 0.41%)</title><rect x="1169.1" y="1779.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.1" y="1790.0"></text>
</g>
<g>
<title>DirectiveSet::should_not_inline(ciMethod*) (1 samples, 0.03%)</title><rect x="1169.1" y="1763.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.1" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (11 samples, 0.32%)</title><rect x="1169.5" y="1763.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.5" y="1774.0"></text>
</g>
<g>
<title>DirectiveSet::should_inline(ciMethod*) (1 samples, 0.03%)</title><rect x="1169.5" y="1747.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.5" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.29%)</title><rect x="1169.8" y="1747.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.8" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.24%)</title><rect x="1169.8" y="1731.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.8" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.24%)</title><rect x="1169.8" y="1715.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.8" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (8 samples, 0.24%)</title><rect x="1169.8" y="1699.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.8" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.24%)</title><rect x="1169.8" y="1683.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.8" y="1694.0"></text>
</g>
<g>
<title>Compilation::notice_inlined_method(ciMethod*) (1 samples, 0.03%)</title><rect x="1170.2" y="1667.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.2" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.15%)</title><rect x="1170.5" y="1667.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.5" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.09%)</title><rect x="1170.5" y="1651.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.5" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::connect_to_end(BlockBegin*) (1 samples, 0.03%)</title><rect x="1170.5" y="1635.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.5" y="1646.0"></text>
</g>
<g>
<title>ValueMap::kill_all() (1 samples, 0.03%)</title><rect x="1170.5" y="1619.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.5" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.06%)</title><rect x="1170.9" y="1635.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.9" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.06%)</title><rect x="1170.9" y="1619.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.9" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.06%)</title><rect x="1170.9" y="1603.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.9" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1170.9" y="1587.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.9" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1170.9" y="1571.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.9" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1170.9" y="1555.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.9" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1170.9" y="1539.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.9" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1170.9" y="1523.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.9" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1170.9" y="1507.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.9" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::null_check(Instruction*) (1 samples, 0.03%)</title><rect x="1170.9" y="1491.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.9" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::copy_state_for_exception_with_bci(int) (1 samples, 0.03%)</title><rect x="1170.9" y="1475.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.9" y="1486.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.03%)</title><rect x="1170.9" y="1459.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.9" y="1470.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.03%)</title><rect x="1170.9" y="1443.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.9" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.03%)</title><rect x="1171.2" y="1587.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.2" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1171.2" y="1571.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.2" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1171.2" y="1555.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.2" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1171.2" y="1539.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.2" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1171.2" y="1523.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.2" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1171.2" y="1507.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.2" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1171.2" y="1491.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.2" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1171.2" y="1475.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.2" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1171.2" y="1459.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.2" y="1470.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1171.2" y="1443.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.2" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1171.2" y="1427.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.2" y="1438.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1171.2" y="1411.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.2" y="1422.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1171.2" y="1395.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.2" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1171.6" y="1651.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.6" y="1662.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.03%)</title><rect x="1171.6" y="1635.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.6" y="1646.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.03%)</title><rect x="1171.6" y="1619.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.6" y="1630.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.03%)</title><rect x="1171.6" y="1603.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.6" y="1614.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.03%)</title><rect x="1171.6" y="1587.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.6" y="1598.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.03%)</title><rect x="1171.6" y="1571.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.6" y="1582.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int) (1 samples, 0.03%)</title><rect x="1171.6" y="1555.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.6" y="1566.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.03%)</title><rect x="1171.9" y="1651.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.9" y="1662.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="1171.9" y="1635.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="1646.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1171.9" y="1619.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.9" y="1630.0"></text>
</g>
<g>
<title>ciMethodData::load_extra_data() (1 samples, 0.03%)</title><rect x="1171.9" y="1603.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.9" y="1614.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.03%)</title><rect x="1171.9" y="1587.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.03%)</title><rect x="1172.3" y="1667.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.3" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1651.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1635.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1172.3" y="1619.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1172.3" y="1603.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.3" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1172.3" y="1587.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1571.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.3" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.03%)</title><rect x="1172.3" y="1555.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.3" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1539.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.3" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1523.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1172.3" y="1507.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1172.3" y="1491.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.3" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1172.3" y="1475.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1459.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.3" y="1470.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1443.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1172.3" y="1427.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.3" y="1438.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1172.3" y="1411.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.3" y="1422.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1172.3" y="1395.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1379.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1172.3" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1172.3" y="1347.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1172.3" y="1331.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.03%)</title><rect x="1172.3" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.3" y="1326.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.03%)</title><rect x="1172.3" y="1299.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.3" y="1310.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.03%)</title><rect x="1172.3" y="1283.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.3" y="1294.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.03%)</title><rect x="1172.3" y="1267.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="1278.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long) (1 samples, 0.03%)</title><rect x="1172.3" y="1251.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="1262.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1172.3" y="1235.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.3" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1172.6" y="1731.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.6" y="1742.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.03%)</title><rect x="1172.6" y="1715.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.6" y="1726.0"></text>
</g>
<g>
<title>XHandlers::XHandlers(ciMethod*) (1 samples, 0.03%)</title><rect x="1172.6" y="1699.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="1710.0"></text>
</g>
<g>
<title>ciMethod::load_code() (1 samples, 0.03%)</title><rect x="1172.6" y="1683.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="1694.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, Arena*) (1 samples, 0.03%)</title><rect x="1172.6" y="1667.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.6" y="1678.0"></text>
</g>
<g>
<title>ProfileCall::visit(InstructionVisitor*) (1 samples, 0.03%)</title><rect x="1173.0" y="1731.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.0" y="1742.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.06%)</title><rect x="1173.3" y="1763.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.3" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.06%)</title><rect x="1173.3" y="1747.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.3" y="1758.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.03%)</title><rect x="1173.3" y="1731.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.3" y="1742.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.03%)</title><rect x="1173.3" y="1715.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.3" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="1173.3" y="1699.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.3" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.03%)</title><rect x="1173.3" y="1683.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.3" y="1694.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="1173.3" y="1667.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.3" y="1678.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1173.7" y="1731.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.7" y="1742.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1173.7" y="1715.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.7" y="1726.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1173.7" y="1699.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.7" y="1710.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.03%)</title><rect x="1173.7" y="1683.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.7" y="1694.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="1173.7" y="1667.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.7" y="1678.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.03%)</title><rect x="1173.7" y="1651.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.7" y="1662.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.03%)</title><rect x="1173.7" y="1635.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1176.7" y="1646.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1174.0" y="1779.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1177.0" y="1790.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (2 samples, 0.06%)</title><rect x="1174.4" y="1859.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.4" y="1870.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (2 samples, 0.06%)</title><rect x="1174.4" y="1843.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.4" y="1854.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.03%)</title><rect x="1174.7" y="1827.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.7" y="1838.0"></text>
</g>
<g>
<title>BitMap::set_from(BitMap const&amp;) (1 samples, 0.03%)</title><rect x="1174.7" y="1811.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.7" y="1822.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.03%)</title><rect x="1175.1" y="1859.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.1" y="1870.0"></text>
</g>
<g>
<title>RangeCheckEliminator::RangeCheckEliminator(IR*) (1 samples, 0.03%)</title><rect x="1175.1" y="1843.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.1" y="1854.0"></text>
</g>
<g>
<title>Instruction::as_AccessIndexed() (1 samples, 0.03%)</title><rect x="1175.1" y="1827.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.1" y="1838.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (7 samples, 0.21%)</title><rect x="1175.4" y="1875.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.4" y="1886.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (3 samples, 0.09%)</title><rect x="1175.4" y="1859.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.4" y="1870.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op2(LIR_Op2*) (1 samples, 0.03%)</title><rect x="1175.7" y="1843.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.7" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::arith_op(LIR_Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, bool) (1 samples, 0.03%)</title><rect x="1175.7" y="1827.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.7" y="1838.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.03%)</title><rect x="1176.1" y="1843.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.1" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_exception_handler() (1 samples, 0.03%)</title><rect x="1176.4" y="1859.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.4" y="1870.0"></text>
</g>
<g>
<title>MacroAssembler::stop(char const*) (1 samples, 0.03%)</title><rect x="1176.4" y="1843.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="1854.0"></text>
</g>
<g>
<title>Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;) (1 samples, 0.03%)</title><rect x="1176.4" y="1827.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.4" y="1838.0"></text>
</g>
<g>
<title>relocInfo::initialize(CodeSection*, Relocation*) (1 samples, 0.03%)</title><rect x="1176.4" y="1811.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="1822.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (3 samples, 0.09%)</title><rect x="1176.8" y="1859.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.8" y="1870.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (3 samples, 0.09%)</title><rect x="1176.8" y="1843.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.8" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.06%)</title><rect x="1176.8" y="1827.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.8" y="1838.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.06%)</title><rect x="1176.8" y="1811.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.8" y="1822.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.06%)</title><rect x="1176.8" y="1795.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.8" y="1806.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="1176.8" y="1779.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.8" y="1790.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="1177.1" y="1779.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1180.1" y="1790.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(Metadata*, int) (1 samples, 0.03%)</title><rect x="1177.5" y="1827.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.5" y="1838.0"></text>
</g>
<g>
<title>MacroAssembler::mov_metadata(Address, Metadata*) (1 samples, 0.03%)</title><rect x="1177.5" y="1811.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="1822.0"></text>
</g>
<g>
<title>Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;) (1 samples, 0.03%)</title><rect x="1177.5" y="1795.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.5" y="1806.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (14 samples, 0.41%)</title><rect x="1177.8" y="1875.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.8" y="1886.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (4 samples, 0.12%)</title><rect x="1177.8" y="1859.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.8" y="1870.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (4 samples, 0.12%)</title><rect x="1177.8" y="1843.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.8" y="1854.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.03%)</title><rect x="1177.8" y="1827.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.8" y="1838.0"></text>
</g>
<g>
<title>CompilationResourceObj::operator new(unsigned long) (1 samples, 0.03%)</title><rect x="1177.8" y="1811.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.8" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (1 samples, 0.03%)</title><rect x="1178.2" y="1827.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.2" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::access_load_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (1 samples, 0.03%)</title><rect x="1178.2" y="1811.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.2" y="1822.0"></text>
</g>
<g>
<title>BarrierSetC1::load_at(LIRAccess&amp;, LIR_OprDesc*) (1 samples, 0.03%)</title><rect x="1178.2" y="1795.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.2" y="1806.0"></text>
</g>
<g>
<title>BarrierSetC1::resolve_address(LIRAccess&amp;, bool) (1 samples, 0.03%)</title><rect x="1178.2" y="1779.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.2" y="1790.0"></text>
</g>
<g>
<title>LIR_Const::as_constant() (1 samples, 0.03%)</title><rect x="1178.2" y="1763.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.2" y="1774.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewInstance(NewInstance*) (1 samples, 0.03%)</title><rect x="1178.5" y="1827.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.5" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.03%)</title><rect x="1178.5" y="1811.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.5" y="1822.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.03%)</title><rect x="1178.5" y="1795.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.5" y="1806.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.03%)</title><rect x="1178.5" y="1779.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.5" y="1790.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.03%)</title><rect x="1178.5" y="1763.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.5" y="1774.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (1 samples, 0.03%)</title><rect x="1178.9" y="1827.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.9" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, LIR_OprDesc*, int, int, bool, bool) (1 samples, 0.03%)</title><rect x="1178.9" y="1811.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.9" y="1822.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1178.9" y="1795.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1181.9" y="1806.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (10 samples, 0.29%)</title><rect x="1179.2" y="1859.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.2" y="1870.0"></text>
</g>
<g>
<title>EdgeMoveOptimizer::optimize(BlockList*) (1 samples, 0.03%)</title><rect x="1179.2" y="1843.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.2" y="1854.0"></text>
</g>
<g>
<title>EdgeMoveOptimizer::optimize_moves_at_block_begin(BlockBegin*) (1 samples, 0.03%)</title><rect x="1179.2" y="1827.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.2" y="1838.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.03%)</title><rect x="1179.6" y="1843.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.6" y="1854.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (3 samples, 0.09%)</title><rect x="1179.9" y="1843.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.9" y="1854.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (3 samples, 0.09%)</title><rect x="1179.9" y="1827.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.9" y="1838.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.03%)</title><rect x="1181.0" y="1843.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.0" y="1854.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.03%)</title><rect x="1181.0" y="1827.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.0" y="1838.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.03%)</title><rect x="1181.0" y="1811.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="1822.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.03%)</title><rect x="1181.0" y="1795.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.0" y="1806.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.03%)</title><rect x="1181.0" y="1779.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.0" y="1790.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.06%)</title><rect x="1181.3" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="1854.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.03%)</title><rect x="1181.7" y="1827.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.7" y="1838.0"></text>
</g>
<g>
<title>LinearScan::compute_global_live_sets() (1 samples, 0.03%)</title><rect x="1182.0" y="1843.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.0" y="1854.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.03%)</title><rect x="1182.4" y="1843.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.4" y="1854.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="1182.4" y="1827.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1185.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.4" y="1811.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1185.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.4" y="1795.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1185.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.4" y="1779.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1185.4" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.4" y="1763.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1185.4" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.4" y="1747.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1185.4" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.4" y="1731.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1185.4" y="1742.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.03%)</title><rect x="1182.7" y="1891.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.7" y="1902.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.03%)</title><rect x="1182.7" y="1875.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.03%)</title><rect x="1182.7" y="1859.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="1870.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*, bool) (1 samples, 0.03%)</title><rect x="1182.7" y="1843.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="1854.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (1 samples, 0.03%)</title><rect x="1183.0" y="1939.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.0" y="1950.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.03%)</title><rect x="1183.4" y="1971.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.4" y="1982.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.03%)</title><rect x="1183.4" y="1955.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.4" y="1966.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.03%)</title><rect x="1183.4" y="1939.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.4" y="1950.0"></text>
</g>
<g>
<title>nmethod::is_locked_by_vm() const (1 samples, 0.03%)</title><rect x="1183.4" y="1923.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.4" y="1934.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (12 samples, 0.35%)</title><rect x="1183.7" y="1971.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.7" y="1982.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (12 samples, 0.35%)</title><rect x="1183.7" y="1955.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.7" y="1966.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (12 samples, 0.35%)</title><rect x="1183.7" y="1939.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.7" y="1950.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.06%)</title><rect x="1183.7" y="1923.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.7" y="1934.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.06%)</title><rect x="1183.7" y="1907.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.7" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.06%)</title><rect x="1183.7" y="1891.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1875.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1187.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1859.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1187.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1843.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1187.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1827.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1187.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1811.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1187.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1795.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1187.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.1" y="1779.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1187.1" y="1790.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1184.4" y="1923.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1187.4" y="1934.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (8 samples, 0.24%)</title><rect x="1184.8" y="1923.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1187.8" y="1934.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.06%)</title><rect x="1185.1" y="1907.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.03%)</title><rect x="1185.5" y="1891.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="1902.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="1185.8" y="1907.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.8" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (3 samples, 0.09%)</title><rect x="1186.2" y="1907.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (3 samples, 0.09%)</title><rect x="1186.2" y="1891.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.2" y="1902.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="1187.2" y="1907.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.2" y="1918.0"></text>
</g>
<g>
<title>nmethod::scopes_pcs_end() const (1 samples, 0.03%)</title><rect x="1187.6" y="1923.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="1934.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.12%)</title><rect x="1187.9" y="2003.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.9" y="2014.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.12%)</title><rect x="1187.9" y="1987.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.9" y="1998.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.06%)</title><rect x="1187.9" y="1971.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="1982.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.06%)</title><rect x="1188.6" y="1971.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1191.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1189.0" y="1955.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1189.0" y="1939.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.0" y="1950.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.06%)</title><rect x="1189.3" y="2003.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.3" y="2014.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.06%)</title><rect x="1189.3" y="1987.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="1998.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.06%)</title><rect x="1189.3" y="1971.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="1982.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.06%)</title><rect x="1189.3" y="1955.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1189.3" y="1939.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.3" y="1950.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="1189.7" y="1939.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="1950.0"></text>
</g>
</g>
</svg>
