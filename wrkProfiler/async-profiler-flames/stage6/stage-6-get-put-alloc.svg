<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (22,471 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.exit (15 samples, 0.07%)</title><rect x="10.2" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/TerminatingThreadLocal.threadTerminated (15 samples, 0.07%)</title><rect x="10.2" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.iterator (15 samples, 0.07%)</title><rect x="10.2" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.2" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap$KeySet.iterator (15 samples, 0.07%)</title><rect x="10.2" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="766.0"></text>
</g>
<g>
<title>java.util.IdentityHashMap$KeyIterator (15 samples, 0.07%)</title><rect x="10.2" y="739.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (13,602 samples, 60.53%)</title><rect x="10.9" y="803.0" width="714.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.9" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13,602 samples, 60.53%)</title><rect x="10.9" y="787.0" width="714.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13,602 samples, 60.53%)</title><rect x="10.9" y="771.0" width="714.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.9" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (56 samples, 0.25%)</title><rect x="10.9" y="755.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$167/1215328857.run (56 samples, 0.25%)</title><rect x="10.9" y="739.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$upsert$2 (56 samples, 0.25%)</title><rect x="10.9" y="723.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (56 samples, 0.25%)</title><rect x="10.9" y="707.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (56 samples, 0.25%)</title><rect x="10.9" y="691.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (56 samples, 0.25%)</title><rect x="10.9" y="675.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.of (56 samples, 0.25%)</title><rect x="10.9" y="659.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.05%)</title><rect x="10.9" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.9" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.05%)</title><rect x="10.9" y="627.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (45 samples, 0.20%)</title><rect x="11.5" y="643.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="14.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,867 samples, 17.21%)</title><rect x="13.9" y="755.0" width="203.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.9" y="766.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,867 samples, 17.21%)</title><rect x="13.9" y="739.0" width="203.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.9" y="750.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,867 samples, 17.21%)</title><rect x="13.9" y="723.0" width="203.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.9" y="734.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.05%)</title><rect x="13.9" y="707.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="16.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/9819169.apply (3,849 samples, 17.13%)</title><rect x="14.8" y="707.0" width="202.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.8" y="718.0">jdk/internal/net/http/Mult..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,849 samples, 17.13%)</title><rect x="14.8" y="691.0" width="202.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.8" y="702.0">jdk/internal/net/http/Mult..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,849 samples, 17.13%)</title><rect x="14.8" y="675.0" width="202.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.8" y="686.0">jdk/internal/net/http/Mult..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.10%)</title><rect x="14.8" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.10%)</title><rect x="14.8" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.get$Lambda (10 samples, 0.04%)</title><rect x="14.8" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$294 (10 samples, 0.04%)</title><rect x="14.8" y="611.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="17.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$296/730056817.get$Lambda (12 samples, 0.05%)</title><rect x="15.4" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$296 (12 samples, 0.05%)</title><rect x="15.4" y="611.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="18.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (44 samples, 0.20%)</title><rect x="16.0" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (44 samples, 0.20%)</title><rect x="16.0" y="643.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (25 samples, 0.11%)</title><rect x="16.0" y="627.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="17.3" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="17.3" y="611.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="17.3" y="595.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="20.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (81 samples, 0.36%)</title><rect x="18.3" y="659.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (81 samples, 0.36%)</title><rect x="18.3" y="643.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (50 samples, 0.22%)</title><rect x="18.3" y="627.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="21.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.14%)</title><rect x="20.9" y="627.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.14%)</title><rect x="20.9" y="611.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.14%)</title><rect x="20.9" y="595.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="23.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,675 samples, 16.35%)</title><rect x="22.6" y="659.0" width="192.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.6" y="670.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,675 samples, 16.35%)</title><rect x="22.6" y="643.0" width="192.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.6" y="654.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,675 samples, 16.35%)</title><rect x="22.6" y="627.0" width="192.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.6" y="638.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.34%)</title><rect x="22.6" y="611.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.34%)</title><rect x="22.6" y="595.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.get$Lambda (51 samples, 0.23%)</title><rect x="22.6" y="579.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$172 (51 samples, 0.23%)</title><rect x="22.6" y="563.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="25.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.get$Lambda (10 samples, 0.04%)</title><rect x="25.2" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$173 (10 samples, 0.04%)</title><rect x="25.2" y="563.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="28.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.get$Lambda (15 samples, 0.07%)</title><rect x="25.8" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$248 (15 samples, 0.07%)</title><rect x="25.8" y="563.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="28.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,291 samples, 10.20%)</title><rect x="26.5" y="611.0" width="120.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.5" y="622.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,291 samples, 10.20%)</title><rect x="26.5" y="595.0" width="120.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.5" y="606.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,274 samples, 10.12%)</title><rect x="26.5" y="579.0" width="119.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.5" y="590.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$248/281491976.apply (2,274 samples, 10.12%)</title><rect x="26.5" y="563.0" width="119.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.5" y="574.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,274 samples, 10.12%)</title><rect x="26.5" y="547.0" width="119.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.5" y="558.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,274 samples, 10.12%)</title><rect x="26.5" y="531.0" width="119.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.5" y="542.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$173/1773270012.apply (2,274 samples, 10.12%)</title><rect x="26.5" y="515.0" width="119.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.5" y="526.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,274 samples, 10.12%)</title><rect x="26.5" y="499.0" width="119.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.5" y="510.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="26.5" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="26.5" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.get$Lambda (11 samples, 0.05%)</title><rect x="26.5" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$286 (11 samples, 0.05%)</title><rect x="26.5" y="435.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (44 samples, 0.20%)</title><rect x="27.1" y="483.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (44 samples, 0.20%)</title><rect x="27.1" y="467.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (28 samples, 0.12%)</title><rect x="27.1" y="451.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="30.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="28.7" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="28.7" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="28.7" y="419.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="31.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 0.19%)</title><rect x="29.4" y="483.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (43 samples, 0.19%)</title><rect x="29.4" y="467.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (29 samples, 0.13%)</title><rect x="29.4" y="451.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="31.0" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="31.0" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="31.0" y="419.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="34.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,176 samples, 9.68%)</title><rect x="31.7" y="483.0" width="114.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.7" y="494.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="31.7" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="31.7" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.get$Lambda (5 samples, 0.02%)</title><rect x="31.7" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$280 (5 samples, 0.02%)</title><rect x="31.7" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="34.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/1958570298.get$Lambda (8 samples, 0.04%)</title><rect x="32.0" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$283 (8 samples, 0.04%)</title><rect x="32.0" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="35.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,893 samples, 8.42%)</title><rect x="32.4" y="467.0" width="99.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.4" y="478.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,893 samples, 8.42%)</title><rect x="32.4" y="451.0" width="99.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.4" y="462.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (20 samples, 0.09%)</title><rect x="32.4" y="435.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="35.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$280/1579216262.apply (1,836 samples, 8.17%)</title><rect x="33.4" y="435.0" width="96.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.4" y="446.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,836 samples, 8.17%)</title><rect x="33.4" y="419.0" width="96.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.4" y="430.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="33.4" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="33.4" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$297/37694024.get$Lambda (6 samples, 0.03%)</title><rect x="33.4" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$297 (6 samples, 0.03%)</title><rect x="33.4" y="355.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="36.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.20%)</title><rect x="33.7" y="403.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.20%)</title><rect x="33.7" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.09%)</title><rect x="33.7" y="371.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="36.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="34.8" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="34.8" y="355.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="34.8" y="339.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="37.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.07%)</title><rect x="36.0" y="403.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="39.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (23 samples, 0.10%)</title><rect x="36.9" y="403.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (11 samples, 0.05%)</title><rect x="36.9" y="387.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="39.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.05%)</title><rect x="37.5" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (12 samples, 0.05%)</title><rect x="37.5" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (12 samples, 0.05%)</title><rect x="37.5" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (12 samples, 0.05%)</title><rect x="37.5" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (12 samples, 0.05%)</title><rect x="37.5" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (12 samples, 0.05%)</title><rect x="37.5" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="40.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (47 samples, 0.21%)</title><rect x="38.1" y="403.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (47 samples, 0.21%)</title><rect x="38.1" y="387.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (12 samples, 0.05%)</title><rect x="38.1" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.05%)</title><rect x="38.1" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (12 samples, 0.05%)</title><rect x="38.1" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (12 samples, 0.05%)</title><rect x="38.1" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="41.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 0.16%)</title><rect x="38.7" y="371.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 0.16%)</title><rect x="38.7" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (28 samples, 0.12%)</title><rect x="38.7" y="339.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="41.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (7 samples, 0.03%)</title><rect x="40.2" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (7 samples, 0.03%)</title><rect x="40.2" y="323.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="43.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,700 samples, 7.57%)</title><rect x="40.6" y="403.0" width="89.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.6" y="414.0">jdk/intern..</text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.05%)</title><rect x="40.6" y="387.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="43.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (8 samples, 0.04%)</title><rect x="41.2" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="41.3" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="44.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (163 samples, 0.73%)</title><rect x="41.6" y="387.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (163 samples, 0.73%)</title><rect x="41.6" y="371.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (163 samples, 0.73%)</title><rect x="41.6" y="355.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.6" y="366.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.73%)</title><rect x="41.6" y="339.0" width="8.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="44.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.20%)</title><rect x="50.2" y="387.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.20%)</title><rect x="50.2" y="371.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.2" y="382.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.20%)</title><rect x="50.2" y="355.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="53.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (177 samples, 0.79%)</title><rect x="52.5" y="387.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (177 samples, 0.79%)</title><rect x="52.5" y="371.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="52.5" y="355.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="55.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (163 samples, 0.73%)</title><rect x="53.2" y="355.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.73%)</title><rect x="53.2" y="339.0" width="8.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="56.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.14%)</title><rect x="61.8" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.14%)</title><rect x="61.8" y="371.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.14%)</title><rect x="61.8" y="355.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="64.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.06%)</title><rect x="63.5" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.5" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.06%)</title><rect x="63.5" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="66.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,077 samples, 4.79%)</title><rect x="64.1" y="387.0" width="56.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.1" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (13 samples, 0.06%)</title><rect x="64.1" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.06%)</title><rect x="64.1" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="64.1" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.1" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.get$Lambda (13 samples, 0.06%)</title><rect x="64.1" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.1" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$302 (13 samples, 0.06%)</title><rect x="64.1" y="307.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="67.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (554 samples, 2.47%)</title><rect x="64.8" y="371.0" width="29.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.8" y="382.0">jd..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (235 samples, 1.05%)</title><rect x="64.8" y="355.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (235 samples, 1.05%)</title><rect x="64.8" y="339.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.8" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (235 samples, 1.05%)</title><rect x="64.8" y="323.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (235 samples, 1.05%)</title><rect x="64.8" y="307.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.8" y="318.0"></text>
</g>
<g>
<title>byte[] (235 samples, 1.05%)</title><rect x="64.8" y="291.0" width="12.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="67.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (65 samples, 0.29%)</title><rect x="77.3" y="355.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.3" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (29 samples, 0.13%)</title><rect x="77.3" y="339.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="80.3" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (36 samples, 0.16%)</title><rect x="78.8" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (36 samples, 0.16%)</title><rect x="78.8" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (36 samples, 0.16%)</title><rect x="78.8" y="307.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="81.8" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (40 samples, 0.18%)</title><rect x="80.7" y="355.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.7" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (18 samples, 0.08%)</title><rect x="80.7" y="339.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="83.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (22 samples, 0.10%)</title><rect x="81.7" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (22 samples, 0.10%)</title><rect x="81.7" y="323.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="84.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$302/273370462.test (207 samples, 0.92%)</title><rect x="83.0" y="355.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.0" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (207 samples, 0.92%)</title><rect x="83.0" y="339.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1995619265.test (207 samples, 0.92%)</title><rect x="83.0" y="323.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (207 samples, 0.92%)</title><rect x="83.0" y="307.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.0" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/20094719.test (207 samples, 0.92%)</title><rect x="83.0" y="291.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.0" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (207 samples, 0.92%)</title><rect x="83.0" y="275.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/324457684.test (207 samples, 0.92%)</title><rect x="83.0" y="259.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (207 samples, 0.92%)</title><rect x="83.0" y="243.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (207 samples, 0.92%)</title><rect x="83.0" y="227.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (207 samples, 0.92%)</title><rect x="83.0" y="211.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.0" y="222.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.51%)</title><rect x="83.0" y="195.0" width="6.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="86.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (93 samples, 0.41%)</title><rect x="89.0" y="195.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.0" y="206.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.41%)</title><rect x="89.0" y="179.0" width="4.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="92.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (510 samples, 2.27%)</title><rect x="93.9" y="371.0" width="26.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.9" y="382.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (510 samples, 2.27%)</title><rect x="93.9" y="355.0" width="26.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.9" y="366.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (510 samples, 2.27%)</title><rect x="93.9" y="339.0" width="26.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="350.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (8 samples, 0.04%)</title><rect x="93.9" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.9" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.08%)</title><rect x="94.3" y="323.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="97.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.11%)</title><rect x="95.3" y="323.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (11 samples, 0.05%)</title><rect x="96.6" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="99.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.07%)</title><rect x="97.2" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.07%)</title><rect x="97.2" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (15 samples, 0.07%)</title><rect x="97.2" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.2" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (15 samples, 0.07%)</title><rect x="97.2" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="100.2" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (16 samples, 0.07%)</title><rect x="98.0" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.0" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (16 samples, 0.07%)</title><rect x="98.0" y="307.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="101.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (392 samples, 1.74%)</title><rect x="98.8" y="323.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (392 samples, 1.74%)</title><rect x="98.8" y="307.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (392 samples, 1.74%)</title><rect x="98.8" y="291.0" width="20.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.29%)</title><rect x="98.8" y="275.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.29%)</title><rect x="98.8" y="259.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (66 samples, 0.29%)</title><rect x="98.8" y="243.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.8" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (66 samples, 0.29%)</title><rect x="98.8" y="227.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="101.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (38 samples, 0.17%)</title><rect x="102.3" y="275.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (38 samples, 0.17%)</title><rect x="102.3" y="259.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (38 samples, 0.17%)</title><rect x="102.3" y="243.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.17%)</title><rect x="102.3" y="227.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.17%)</title><rect x="102.3" y="211.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.17%)</title><rect x="102.3" y="195.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.17%)</title><rect x="102.3" y="179.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.17%)</title><rect x="102.3" y="163.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.17%)</title><rect x="102.3" y="147.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="105.3" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (153 samples, 0.68%)</title><rect x="104.3" y="275.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.3" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (153 samples, 0.68%)</title><rect x="104.3" y="259.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (72 samples, 0.32%)</title><rect x="104.3" y="243.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.32%)</title><rect x="104.3" y="227.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.32%)</title><rect x="104.3" y="211.0" width="3.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.3" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (81 samples, 0.36%)</title><rect x="108.0" y="243.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.0" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (81 samples, 0.36%)</title><rect x="108.0" y="227.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="111.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (135 samples, 0.60%)</title><rect x="112.3" y="275.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (135 samples, 0.60%)</title><rect x="112.3" y="259.0" width="7.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="115.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (25 samples, 0.11%)</title><rect x="119.4" y="323.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.11%)</title><rect x="119.4" y="307.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="122.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (37 samples, 0.16%)</title><rect x="120.7" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (12 samples, 0.05%)</title><rect x="120.7" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.7" y="382.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="120.7" y="355.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="123.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.11%)</title><rect x="121.3" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (25 samples, 0.11%)</title><rect x="121.3" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (25 samples, 0.11%)</title><rect x="121.3" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.11%)</title><rect x="121.3" y="323.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.06%)</title><rect x="121.3" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="121.3" y="291.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="124.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.05%)</title><rect x="122.1" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.05%)</title><rect x="122.1" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.1" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="122.1" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="125.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (30 samples, 0.13%)</title><rect x="122.6" y="387.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (30 samples, 0.13%)</title><rect x="122.6" y="371.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.13%)</title><rect x="122.6" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (30 samples, 0.13%)</title><rect x="122.6" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (30 samples, 0.13%)</title><rect x="122.6" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.13%)</title><rect x="122.6" y="307.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.05%)</title><rect x="122.6" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="122.6" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="125.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.08%)</title><rect x="123.2" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.08%)</title><rect x="123.2" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.2" y="286.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="123.2" y="259.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="126.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (107 samples, 0.48%)</title><rect x="124.2" y="387.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.2" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.15%)</title><rect x="124.2" y="371.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="127.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (28 samples, 0.12%)</title><rect x="125.9" y="371.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.12%)</title><rect x="125.9" y="355.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="128.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (46 samples, 0.20%)</title><rect x="127.4" y="371.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (46 samples, 0.20%)</title><rect x="127.4" y="355.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="130.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.16%)</title><rect x="129.8" y="435.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.16%)</title><rect x="129.8" y="419.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.16%)</title><rect x="129.8" y="403.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="132.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (43 samples, 0.19%)</title><rect x="131.8" y="467.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="134.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.09%)</title><rect x="134.0" y="467.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="137.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (207 samples, 0.92%)</title><rect x="135.1" y="467.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.08%)</title><rect x="135.1" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.08%)</title><rect x="135.1" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1865137363.get$Lambda (9 samples, 0.04%)</title><rect x="135.1" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (9 samples, 0.04%)</title><rect x="135.1" y="403.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="138.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$256/725033970.get$Lambda (8 samples, 0.04%)</title><rect x="135.6" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$256 (8 samples, 0.04%)</title><rect x="135.6" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="138.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (20 samples, 0.09%)</title><rect x="136.0" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="139.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (10 samples, 0.04%)</title><rect x="137.0" y="451.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="140.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (18 samples, 0.08%)</title><rect x="137.6" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="140.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (65 samples, 0.29%)</title><rect x="138.5" y="451.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.29%)</title><rect x="138.5" y="435.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.29%)</title><rect x="138.5" y="419.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (65 samples, 0.29%)</title><rect x="138.5" y="403.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (65 samples, 0.29%)</title><rect x="138.5" y="387.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (65 samples, 0.29%)</title><rect x="138.5" y="371.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (65 samples, 0.29%)</title><rect x="138.5" y="355.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (65 samples, 0.29%)</title><rect x="138.5" y="339.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (65 samples, 0.29%)</title><rect x="138.5" y="323.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.11%)</title><rect x="138.5" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.11%)</title><rect x="138.5" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (10 samples, 0.04%)</title><rect x="138.5" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$264 (10 samples, 0.04%)</title><rect x="138.5" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="141.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$267/401982671.get$Lambda (15 samples, 0.07%)</title><rect x="139.0" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$267 (15 samples, 0.07%)</title><rect x="139.0" y="259.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="142.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (20 samples, 0.09%)</title><rect x="139.8" y="307.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="142.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (20 samples, 0.09%)</title><rect x="140.9" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (20 samples, 0.09%)</title><rect x="140.9" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (13 samples, 0.06%)</title><rect x="140.9" y="275.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="143.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (7 samples, 0.03%)</title><rect x="141.5" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.03%)</title><rect x="141.5" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="144.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (58 samples, 0.26%)</title><rect x="141.9" y="451.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.9" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.04%)</title><rect x="141.9" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="144.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (29 samples, 0.13%)</title><rect x="142.3" y="435.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="145.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.09%)</title><rect x="143.9" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.09%)</title><rect x="143.9" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.9" y="430.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="143.9" y="403.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="146.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (19 samples, 0.08%)</title><rect x="145.0" y="451.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="145.0" y="435.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="148.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="146.0" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="146.0" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.08%)</title><rect x="146.0" y="547.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="149.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (40 samples, 0.18%)</title><rect x="146.8" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (40 samples, 0.18%)</title><rect x="146.8" y="595.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (19 samples, 0.08%)</title><rect x="146.8" y="579.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="149.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="147.8" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="147.8" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="147.8" y="547.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="150.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,268 samples, 5.64%)</title><rect x="148.9" y="611.0" width="66.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.9" y="622.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.11%)</title><rect x="148.9" y="595.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.11%)</title><rect x="148.9" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$242/1842297967.get$Lambda (22 samples, 0.10%)</title><rect x="148.9" y="563.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$242 (22 samples, 0.10%)</title><rect x="148.9" y="547.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="151.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29 samples, 0.13%)</title><rect x="150.3" y="595.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29 samples, 0.13%)</title><rect x="150.3" y="579.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/687077497.apply (10 samples, 0.04%)</title><rect x="150.3" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (10 samples, 0.04%)</title><rect x="150.3" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.04%)</title><rect x="150.3" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="150.3" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="153.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="150.8" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.08%)</title><rect x="150.8" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.08%)</title><rect x="150.8" y="531.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="153.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.08%)</title><rect x="151.8" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.08%)</title><rect x="151.8" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="151.8" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="151.8" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="151.8" y="531.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="154.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,196 samples, 5.32%)</title><rect x="152.7" y="595.0" width="62.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.7" y="606.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="152.7" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="152.7" y="563.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.get$Lambda (19 samples, 0.08%)</title><rect x="152.7" y="547.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$177 (19 samples, 0.08%)</title><rect x="152.7" y="531.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="155.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,096 samples, 4.88%)</title><rect x="153.7" y="579.0" width="57.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.7" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,096 samples, 4.88%)</title><rect x="153.7" y="563.0" width="57.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.7" y="574.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,073 samples, 4.78%)</title><rect x="153.7" y="547.0" width="56.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.7" y="558.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$177/399234874.apply (1,073 samples, 4.78%)</title><rect x="153.7" y="531.0" width="56.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.7" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,073 samples, 4.78%)</title><rect x="153.7" y="515.0" width="56.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.7" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,073 samples, 4.78%)</title><rect x="153.7" y="499.0" width="56.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.7" y="510.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="153.7" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="153.7" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.get$Lambda (10 samples, 0.04%)</title><rect x="153.7" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$236 (10 samples, 0.04%)</title><rect x="153.7" y="435.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="156.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (418 samples, 1.86%)</title><rect x="154.3" y="483.0" width="21.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (418 samples, 1.86%)</title><rect x="154.3" y="467.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (418 samples, 1.86%)</title><rect x="154.3" y="451.0" width="21.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.3" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$236/1436763450.apply (398 samples, 1.77%)</title><rect x="154.3" y="435.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (398 samples, 1.77%)</title><rect x="154.3" y="419.0" width="20.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (398 samples, 1.77%)</title><rect x="154.3" y="403.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (398 samples, 1.77%)</title><rect x="154.3" y="387.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (248 samples, 1.10%)</title><rect x="154.3" y="371.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.3" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (57 samples, 0.25%)</title><rect x="154.3" y="355.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.04%)</title><rect x="154.3" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="157.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.12%)</title><rect x="154.7" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.12%)</title><rect x="154.7" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.7" y="334.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.12%)</title><rect x="154.7" y="307.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="157.7" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (23 samples, 0.10%)</title><rect x="156.0" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.0" y="350.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="156.0" y="323.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="159.0" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (11 samples, 0.05%)</title><rect x="157.2" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.2" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (11 samples, 0.05%)</title><rect x="157.2" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="160.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (128 samples, 0.57%)</title><rect x="157.8" y="355.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (15 samples, 0.07%)</title><rect x="157.8" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="160.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (99 samples, 0.44%)</title><rect x="158.6" y="339.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (99 samples, 0.44%)</title><rect x="158.6" y="323.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (73 samples, 0.32%)</title><rect x="158.6" y="307.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.32%)</title><rect x="158.6" y="291.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.get$Lambda (73 samples, 0.32%)</title><rect x="158.6" y="275.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (73 samples, 0.32%)</title><rect x="158.6" y="259.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="161.6" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (26 samples, 0.12%)</title><rect x="162.4" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1595282218.run (26 samples, 0.12%)</title><rect x="162.4" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (26 samples, 0.12%)</title><rect x="162.4" y="275.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.4" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (26 samples, 0.12%)</title><rect x="162.4" y="259.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (26 samples, 0.12%)</title><rect x="162.4" y="243.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (26 samples, 0.12%)</title><rect x="162.4" y="227.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="165.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (14 samples, 0.06%)</title><rect x="163.8" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (14 samples, 0.06%)</title><rect x="163.8" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.8" y="334.0"></text>
</g>
<g>
<title>int[] (14 samples, 0.06%)</title><rect x="163.8" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="166.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (52 samples, 0.23%)</title><rect x="164.5" y="355.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.5" y="366.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="164.5" y="339.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="167.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.13%)</title><rect x="165.8" y="339.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.13%)</title><rect x="165.8" y="323.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.13%)</title><rect x="165.8" y="307.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="168.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (150 samples, 0.67%)</title><rect x="167.3" y="371.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (45 samples, 0.20%)</title><rect x="167.3" y="355.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="170.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (32 samples, 0.14%)</title><rect x="169.6" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.14%)</title><rect x="169.6" y="339.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="172.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (73 samples, 0.32%)</title><rect x="171.3" y="355.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (73 samples, 0.32%)</title><rect x="171.3" y="339.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.09%)</title><rect x="175.2" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.09%)</title><rect x="175.2" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.09%)</title><rect x="175.2" y="403.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="178.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (645 samples, 2.87%)</title><rect x="176.2" y="483.0" width="33.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.2" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (53 samples, 0.24%)</title><rect x="176.2" y="467.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="179.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (564 samples, 2.51%)</title><rect x="179.0" y="467.0" width="29.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.0" y="478.0">jd..</text>
</g>
<g>
<title>java.lang.Object (12 samples, 0.05%)</title><rect x="179.0" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="182.0" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (15 samples, 0.07%)</title><rect x="179.6" y="451.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="182.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (9 samples, 0.04%)</title><rect x="180.4" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="183.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (22 samples, 0.10%)</title><rect x="180.9" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (22 samples, 0.10%)</title><rect x="180.9" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.10%)</title><rect x="180.9" y="419.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="183.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (10 samples, 0.04%)</title><rect x="182.0" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.04%)</title><rect x="182.0" y="435.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (41 samples, 0.18%)</title><rect x="182.6" y="451.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="185.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (32 samples, 0.14%)</title><rect x="184.7" y="451.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="187.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (32 samples, 0.14%)</title><rect x="186.4" y="451.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="189.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.13%)</title><rect x="188.1" y="451.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="191.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (180 samples, 0.80%)</title><rect x="189.6" y="451.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (10 samples, 0.04%)</title><rect x="189.6" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="192.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (10 samples, 0.04%)</title><rect x="190.1" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="193.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (13 samples, 0.06%)</title><rect x="190.6" y="435.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="193.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (14 samples, 0.06%)</title><rect x="191.3" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="194.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="192.1" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="192.1" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.get$Lambda (14 samples, 0.06%)</title><rect x="192.1" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$231 (14 samples, 0.06%)</title><rect x="192.1" y="387.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="195.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (18 samples, 0.08%)</title><rect x="192.8" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (18 samples, 0.08%)</title><rect x="192.8" y="419.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="195.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (10 samples, 0.04%)</title><rect x="193.7" y="435.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="196.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.09%)</title><rect x="194.3" y="435.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="197.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (71 samples, 0.32%)</title><rect x="195.3" y="435.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (15 samples, 0.07%)</title><rect x="195.3" y="419.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="198.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (14 samples, 0.06%)</title><rect x="196.1" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="199.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (13 samples, 0.06%)</title><rect x="196.8" y="419.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (13 samples, 0.06%)</title><rect x="196.8" y="403.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="199.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (29 samples, 0.13%)</title><rect x="197.5" y="419.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (10 samples, 0.04%)</title><rect x="197.5" y="403.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="200.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (8 samples, 0.04%)</title><rect x="198.0" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="201.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (11 samples, 0.05%)</title><rect x="198.5" y="403.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="201.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (123 samples, 0.55%)</title><rect x="199.0" y="451.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (12 samples, 0.05%)</title><rect x="199.0" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="202.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (10 samples, 0.04%)</title><rect x="199.7" y="435.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="202.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.04%)</title><rect x="200.2" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="203.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (16 samples, 0.07%)</title><rect x="200.6" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (16 samples, 0.07%)</title><rect x="200.6" y="419.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="203.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (77 samples, 0.34%)</title><rect x="201.5" y="435.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (8 samples, 0.04%)</title><rect x="201.5" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="204.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (25 samples, 0.11%)</title><rect x="201.9" y="419.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="204.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (7 samples, 0.03%)</title><rect x="203.2" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.03%)</title><rect x="203.2" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="206.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (37 samples, 0.16%)</title><rect x="203.6" y="419.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.06%)</title><rect x="203.6" y="403.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="206.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (11 samples, 0.05%)</title><rect x="204.2" y="403.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="207.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (13 samples, 0.06%)</title><rect x="204.8" y="403.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="207.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (24 samples, 0.11%)</title><rect x="205.5" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (24 samples, 0.11%)</title><rect x="205.5" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (11 samples, 0.05%)</title><rect x="205.5" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="208.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (13 samples, 0.06%)</title><rect x="206.1" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.05%)</title><rect x="206.1" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.05%)</title><rect x="206.1" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (11 samples, 0.05%)</title><rect x="206.1" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.05%)</title><rect x="206.1" y="355.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="209.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (35 samples, 0.16%)</title><rect x="206.8" y="451.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (11 samples, 0.05%)</title><rect x="206.8" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="206.8" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.get$Lambda (11 samples, 0.05%)</title><rect x="206.8" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$187 (11 samples, 0.05%)</title><rect x="206.8" y="387.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="209.8" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 0.11%)</title><rect x="207.3" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$187/850260700.run (24 samples, 0.11%)</title><rect x="207.3" y="419.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (24 samples, 0.11%)</title><rect x="207.3" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.3" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (8 samples, 0.04%)</title><rect x="207.3" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="210.3" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (16 samples, 0.07%)</title><rect x="207.8" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.8" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (8 samples, 0.04%)</title><rect x="207.8" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="210.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (8 samples, 0.04%)</title><rect x="208.2" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (8 samples, 0.04%)</title><rect x="208.2" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (8 samples, 0.04%)</title><rect x="208.2" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (8 samples, 0.04%)</title><rect x="208.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (8 samples, 0.04%)</title><rect x="208.2" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="211.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (28 samples, 0.12%)</title><rect x="208.6" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.12%)</title><rect x="208.6" y="451.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="211.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="210.1" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="210.1" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="210.1" y="515.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="213.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (18 samples, 0.08%)</title><rect x="211.3" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (18 samples, 0.08%)</title><rect x="211.3" y="563.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="211.3" y="547.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="211.3" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="211.3" y="515.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="214.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (63 samples, 0.28%)</title><rect x="212.2" y="579.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (38 samples, 0.17%)</title><rect x="212.2" y="563.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (38 samples, 0.17%)</title><rect x="212.2" y="547.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1188682934.linkToTargetMethod (38 samples, 0.17%)</title><rect x="212.2" y="531.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/189601446.invoke (38 samples, 0.17%)</title><rect x="212.2" y="515.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1561732919.invoke (38 samples, 0.17%)</title><rect x="212.2" y="499.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.17%)</title><rect x="212.2" y="483.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.06%)</title><rect x="212.2" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.06%)</title><rect x="212.2" y="451.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="215.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.11%)</title><rect x="212.9" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.11%)</title><rect x="212.9" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.9" y="462.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="212.9" y="435.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="215.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.11%)</title><rect x="214.2" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.11%)</title><rect x="214.2" y="547.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="217.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (27 samples, 0.12%)</title><rect x="215.5" y="659.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.12%)</title><rect x="215.5" y="643.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="218.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,678 samples, 7.47%)</title><rect x="217.0" y="755.0" width="88.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.0" y="766.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.call (1,678 samples, 7.47%)</title><rect x="217.0" y="739.0" width="88.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.0" y="750.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$4 (1,678 samples, 7.47%)</title><rect x="217.0" y="723.0" width="88.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.0" y="734.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (1,211 samples, 5.39%)</title><rect x="217.0" y="707.0" width="63.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.0" y="718.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (1,211 samples, 5.39%)</title><rect x="217.0" y="691.0" width="63.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.0" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (407 samples, 1.81%)</title><rect x="217.0" y="675.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.0" y="686.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (193 samples, 0.86%)</title><rect x="217.0" y="659.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.0" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (21 samples, 0.09%)</title><rect x="217.0" y="643.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="220.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (172 samples, 0.77%)</title><rect x="218.1" y="643.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.1" y="654.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (40 samples, 0.18%)</title><rect x="218.1" y="627.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="221.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (41 samples, 0.18%)</title><rect x="220.2" y="627.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.2" y="638.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (41 samples, 0.18%)</title><rect x="220.2" y="611.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="223.2" y="622.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (57 samples, 0.25%)</title><rect x="222.3" y="627.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="225.3" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (34 samples, 0.15%)</title><rect x="225.3" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.15%)</title><rect x="225.3" y="611.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="228.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (214 samples, 0.95%)</title><rect x="227.1" y="659.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.1" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (21 samples, 0.09%)</title><rect x="227.1" y="643.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="230.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (193 samples, 0.86%)</title><rect x="228.2" y="643.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (193 samples, 0.86%)</title><rect x="228.2" y="627.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (193 samples, 0.86%)</title><rect x="228.2" y="611.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (193 samples, 0.86%)</title><rect x="228.2" y="595.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (76 samples, 0.34%)</title><rect x="228.2" y="579.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (76 samples, 0.34%)</title><rect x="228.2" y="563.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (76 samples, 0.34%)</title><rect x="228.2" y="547.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (44 samples, 0.20%)</title><rect x="228.2" y="531.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (44 samples, 0.20%)</title><rect x="228.2" y="515.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (44 samples, 0.20%)</title><rect x="228.2" y="499.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (44 samples, 0.20%)</title><rect x="228.2" y="483.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.2" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (44 samples, 0.20%)</title><rect x="228.2" y="467.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="231.2" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (32 samples, 0.14%)</title><rect x="230.5" y="531.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.5" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (32 samples, 0.14%)</title><rect x="230.5" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (32 samples, 0.14%)</title><rect x="230.5" y="499.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (32 samples, 0.14%)</title><rect x="230.5" y="483.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.5" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (32 samples, 0.14%)</title><rect x="230.5" y="467.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="233.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (117 samples, 0.52%)</title><rect x="232.2" y="579.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (117 samples, 0.52%)</title><rect x="232.2" y="563.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (117 samples, 0.52%)</title><rect x="232.2" y="547.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (117 samples, 0.52%)</title><rect x="232.2" y="531.0" width="6.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="235.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (804 samples, 3.58%)</title><rect x="238.3" y="675.0" width="42.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.3" y="686.0">ru/m..</text>
</g>
<g>
<title>java.util.ArrayList (75 samples, 0.33%)</title><rect x="238.3" y="659.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="241.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (83 samples, 0.37%)</title><rect x="242.3" y="659.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (83 samples, 0.37%)</title><rect x="242.3" y="643.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (83 samples, 0.37%)</title><rect x="242.3" y="627.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (83 samples, 0.37%)</title><rect x="242.3" y="611.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (83 samples, 0.37%)</title><rect x="242.3" y="595.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (83 samples, 0.37%)</title><rect x="242.3" y="579.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="245.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (646 samples, 2.87%)</title><rect x="246.6" y="659.0" width="33.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.6" y="670.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (156 samples, 0.69%)</title><rect x="246.6" y="643.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.6" y="654.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (19 samples, 0.08%)</title><rect x="246.6" y="627.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="249.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (137 samples, 0.61%)</title><rect x="247.6" y="627.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.6" y="638.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (28 samples, 0.12%)</title><rect x="247.6" y="611.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="250.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (33 samples, 0.15%)</title><rect x="249.1" y="611.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.1" y="622.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (33 samples, 0.15%)</title><rect x="249.1" y="595.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="252.1" y="606.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (36 samples, 0.16%)</title><rect x="250.8" y="611.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="253.8" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (40 samples, 0.18%)</title><rect x="252.7" y="611.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.18%)</title><rect x="252.7" y="595.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="255.7" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.17%)</title><rect x="254.8" y="643.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="257.8" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (92 samples, 0.41%)</title><rect x="256.8" y="643.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.8" y="654.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (40 samples, 0.18%)</title><rect x="256.8" y="627.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="259.8" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (52 samples, 0.23%)</title><rect x="258.9" y="627.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (52 samples, 0.23%)</title><rect x="258.9" y="611.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.9" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (52 samples, 0.23%)</title><rect x="258.9" y="595.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="261.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (28 samples, 0.12%)</title><rect x="261.6" y="643.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.6" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.12%)</title><rect x="261.6" y="627.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="264.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (107 samples, 0.48%)</title><rect x="263.1" y="643.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (33 samples, 0.15%)</title><rect x="263.1" y="627.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="266.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (74 samples, 0.33%)</title><rect x="264.8" y="627.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (74 samples, 0.33%)</title><rect x="264.8" y="611.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (74 samples, 0.33%)</title><rect x="264.8" y="595.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (74 samples, 0.33%)</title><rect x="264.8" y="579.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (46 samples, 0.20%)</title><rect x="264.8" y="563.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (46 samples, 0.20%)</title><rect x="264.8" y="547.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (46 samples, 0.20%)</title><rect x="264.8" y="531.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (46 samples, 0.20%)</title><rect x="264.8" y="515.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (46 samples, 0.20%)</title><rect x="264.8" y="499.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="267.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (28 samples, 0.12%)</title><rect x="267.3" y="563.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.3" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (28 samples, 0.12%)</title><rect x="267.3" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (28 samples, 0.12%)</title><rect x="267.3" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (28 samples, 0.12%)</title><rect x="267.3" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.3" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (28 samples, 0.12%)</title><rect x="267.3" y="499.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="270.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (225 samples, 1.00%)</title><rect x="268.7" y="643.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (35 samples, 0.16%)</title><rect x="268.7" y="627.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.7" y="638.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (35 samples, 0.16%)</title><rect x="268.7" y="611.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="271.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="270.6" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="270.6" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.get$Lambda (21 samples, 0.09%)</title><rect x="270.6" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.6" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.table.MemTable$$Lambda$364 (21 samples, 0.09%)</title><rect x="270.6" y="579.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="273.6" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (76 samples, 0.34%)</title><rect x="271.7" y="627.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.7" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (33 samples, 0.15%)</title><rect x="271.7" y="611.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="274.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (43 samples, 0.19%)</title><rect x="273.4" y="611.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (43 samples, 0.19%)</title><rect x="273.4" y="595.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (43 samples, 0.19%)</title><rect x="273.4" y="579.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="276.4" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (40 samples, 0.18%)</title><rect x="275.7" y="627.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.7" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (20 samples, 0.09%)</title><rect x="275.7" y="611.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="278.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (20 samples, 0.09%)</title><rect x="276.7" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (20 samples, 0.09%)</title><rect x="276.7" y="595.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="279.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (53 samples, 0.24%)</title><rect x="277.8" y="627.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (53 samples, 0.24%)</title><rect x="277.8" y="611.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (53 samples, 0.24%)</title><rect x="277.8" y="595.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (53 samples, 0.24%)</title><rect x="277.8" y="579.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (53 samples, 0.24%)</title><rect x="277.8" y="563.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="280.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.valueOf (467 samples, 2.08%)</title><rect x="280.5" y="707.0" width="24.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.5" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (355 samples, 1.58%)</title><rect x="280.5" y="691.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (211 samples, 0.94%)</title><rect x="280.5" y="675.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (211 samples, 0.94%)</title><rect x="280.5" y="659.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (211 samples, 0.94%)</title><rect x="280.5" y="643.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (73 samples, 0.32%)</title><rect x="280.5" y="627.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (73 samples, 0.32%)</title><rect x="280.5" y="611.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (73 samples, 0.32%)</title><rect x="280.5" y="595.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (47 samples, 0.21%)</title><rect x="280.5" y="579.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (47 samples, 0.21%)</title><rect x="280.5" y="563.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (47 samples, 0.21%)</title><rect x="280.5" y="547.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (47 samples, 0.21%)</title><rect x="280.5" y="531.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (47 samples, 0.21%)</title><rect x="280.5" y="515.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="283.5" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (26 samples, 0.12%)</title><rect x="283.0" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.0" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (26 samples, 0.12%)</title><rect x="283.0" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (26 samples, 0.12%)</title><rect x="283.0" y="547.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (26 samples, 0.12%)</title><rect x="283.0" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.0" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (26 samples, 0.12%)</title><rect x="283.0" y="515.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="286.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (138 samples, 0.61%)</title><rect x="284.4" y="627.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (138 samples, 0.61%)</title><rect x="284.4" y="611.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (138 samples, 0.61%)</title><rect x="284.4" y="595.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.4" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (138 samples, 0.61%)</title><rect x="284.4" y="579.0" width="7.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="287.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (144 samples, 0.64%)</title><rect x="291.6" y="675.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (144 samples, 0.64%)</title><rect x="291.6" y="659.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (144 samples, 0.64%)</title><rect x="291.6" y="643.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (144 samples, 0.64%)</title><rect x="291.6" y="627.0" width="7.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="294.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (73 samples, 0.32%)</title><rect x="299.2" y="691.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (73 samples, 0.32%)</title><rect x="299.2" y="675.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.2" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (73 samples, 0.32%)</title><rect x="299.2" y="659.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="302.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.present (39 samples, 0.17%)</title><rect x="303.0" y="691.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.0" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (39 samples, 0.17%)</title><rect x="303.0" y="675.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="306.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (284 samples, 1.26%)</title><rect x="305.1" y="755.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (62 samples, 0.28%)</title><rect x="305.1" y="739.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (62 samples, 0.28%)</title><rect x="305.1" y="723.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (62 samples, 0.28%)</title><rect x="305.1" y="707.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (62 samples, 0.28%)</title><rect x="305.1" y="691.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="308.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (99 samples, 0.44%)</title><rect x="308.4" y="739.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (99 samples, 0.44%)</title><rect x="308.4" y="723.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.08%)</title><rect x="308.4" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (17 samples, 0.08%)</title><rect x="308.4" y="691.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (17 samples, 0.08%)</title><rect x="308.4" y="675.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="311.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (82 samples, 0.36%)</title><rect x="309.3" y="707.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (82 samples, 0.36%)</title><rect x="309.3" y="691.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (82 samples, 0.36%)</title><rect x="309.3" y="675.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="312.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (90 samples, 0.40%)</title><rect x="313.6" y="739.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (90 samples, 0.40%)</title><rect x="313.6" y="723.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (90 samples, 0.40%)</title><rect x="313.6" y="707.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (90 samples, 0.40%)</title><rect x="313.6" y="691.0" width="4.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="316.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (33 samples, 0.15%)</title><rect x="318.3" y="739.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (33 samples, 0.15%)</title><rect x="318.3" y="723.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (33 samples, 0.15%)</title><rect x="318.3" y="707.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (33 samples, 0.15%)</title><rect x="318.3" y="691.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="321.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.run (589 samples, 2.62%)</title><rect x="320.1" y="755.0" width="30.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.1" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (589 samples, 2.62%)</title><rect x="320.1" y="739.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.1" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (589 samples, 2.62%)</title><rect x="320.1" y="723.0" width="30.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.1" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (589 samples, 2.62%)</title><rect x="320.1" y="707.0" width="30.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.1" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (589 samples, 2.62%)</title><rect x="320.1" y="691.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.1" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (589 samples, 2.62%)</title><rect x="320.1" y="675.0" width="30.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.1" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (589 samples, 2.62%)</title><rect x="320.1" y="659.0" width="30.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.1" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (589 samples, 2.62%)</title><rect x="320.1" y="643.0" width="30.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.1" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (589 samples, 2.62%)</title><rect x="320.1" y="627.0" width="30.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.1" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (589 samples, 2.62%)</title><rect x="320.1" y="611.0" width="30.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.1" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (589 samples, 2.62%)</title><rect x="320.1" y="595.0" width="30.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.1" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (539 samples, 2.40%)</title><rect x="320.1" y="579.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.1" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.33%)</title><rect x="320.1" y="563.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.33%)</title><rect x="320.1" y="547.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$304/383822122.get$Lambda (62 samples, 0.28%)</title><rect x="320.1" y="531.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$304 (62 samples, 0.28%)</title><rect x="320.1" y="515.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="323.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$312/1117598094.get$Lambda (6 samples, 0.03%)</title><rect x="323.3" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$312 (6 samples, 0.03%)</title><rect x="323.3" y="515.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="326.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$313/1568044126.get$Lambda (6 samples, 0.03%)</title><rect x="323.7" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$313 (6 samples, 0.03%)</title><rect x="323.7" y="515.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="326.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (465 samples, 2.07%)</title><rect x="324.0" y="563.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.0" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (25 samples, 0.11%)</title><rect x="324.0" y="547.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="327.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (440 samples, 1.96%)</title><rect x="325.3" y="547.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (440 samples, 1.96%)</title><rect x="325.3" y="531.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.3" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (440 samples, 1.96%)</title><rect x="325.3" y="515.0" width="23.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (120 samples, 0.53%)</title><rect x="325.3" y="499.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (41 samples, 0.18%)</title><rect x="325.3" y="483.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="328.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$308/1021512958.apply (78 samples, 0.35%)</title><rect x="327.4" y="483.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (78 samples, 0.35%)</title><rect x="327.4" y="467.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (78 samples, 0.35%)</title><rect x="327.4" y="451.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.08%)</title><rect x="327.4" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.4" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (17 samples, 0.08%)</title><rect x="327.4" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.4" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (17 samples, 0.08%)</title><rect x="327.4" y="403.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="330.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (61 samples, 0.27%)</title><rect x="328.3" y="435.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="328.3" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="328.3" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.get$Lambda (10 samples, 0.04%)</title><rect x="328.3" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$314 (10 samples, 0.04%)</title><rect x="328.3" y="371.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="331.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (51 samples, 0.23%)</title><rect x="328.9" y="419.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (51 samples, 0.23%)</title><rect x="328.9" y="403.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (27 samples, 0.12%)</title><rect x="328.9" y="387.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="331.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="330.3" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="330.3" y="371.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="330.3" y="355.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="333.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (320 samples, 1.42%)</title><rect x="331.6" y="499.0" width="16.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (320 samples, 1.42%)</title><rect x="331.6" y="483.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/689008889.apply (320 samples, 1.42%)</title><rect x="331.6" y="467.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (320 samples, 1.42%)</title><rect x="331.6" y="451.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (320 samples, 1.42%)</title><rect x="331.6" y="435.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/544090600.apply (320 samples, 1.42%)</title><rect x="331.6" y="419.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (320 samples, 1.42%)</title><rect x="331.6" y="403.0" width="16.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (40 samples, 0.18%)</title><rect x="331.8" y="387.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (40 samples, 0.18%)</title><rect x="331.8" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (23 samples, 0.10%)</title><rect x="331.8" y="355.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="334.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="333.0" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="333.0" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.08%)</title><rect x="333.0" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="336.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (45 samples, 0.20%)</title><rect x="333.9" y="387.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="333.9" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="333.9" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$309/1621395256.get$Lambda (10 samples, 0.04%)</title><rect x="333.9" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$309 (10 samples, 0.04%)</title><rect x="333.9" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="336.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (35 samples, 0.16%)</title><rect x="334.4" y="371.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (35 samples, 0.16%)</title><rect x="334.4" y="355.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (24 samples, 0.11%)</title><rect x="334.4" y="339.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="337.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="335.7" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="335.7" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="335.7" y="307.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="338.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (231 samples, 1.03%)</title><rect x="336.3" y="387.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (75 samples, 0.33%)</title><rect x="336.5" y="371.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (75 samples, 0.33%)</title><rect x="336.5" y="355.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (75 samples, 0.33%)</title><rect x="336.5" y="339.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$305/1944453069.accept (28 samples, 0.12%)</title><rect x="336.5" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (28 samples, 0.12%)</title><rect x="336.5" y="307.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (28 samples, 0.12%)</title><rect x="336.5" y="291.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="336.5" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="336.5" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$306/1143115771.get$Lambda (6 samples, 0.03%)</title><rect x="336.5" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$306 (6 samples, 0.03%)</title><rect x="336.5" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="339.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (22 samples, 0.10%)</title><rect x="336.8" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (22 samples, 0.10%)</title><rect x="336.8" y="259.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.06%)</title><rect x="336.8" y="243.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="339.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="337.5" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="337.5" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.04%)</title><rect x="337.5" y="211.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="340.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$307/840568830.accept (32 samples, 0.14%)</title><rect x="337.9" y="323.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (32 samples, 0.14%)</title><rect x="337.9" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (32 samples, 0.14%)</title><rect x="337.9" y="291.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (32 samples, 0.14%)</title><rect x="337.9" y="275.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (32 samples, 0.14%)</title><rect x="337.9" y="259.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.14%)</title><rect x="337.9" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.14%)</title><rect x="337.9" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (32 samples, 0.14%)</title><rect x="337.9" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (32 samples, 0.14%)</title><rect x="337.9" y="195.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (32 samples, 0.14%)</title><rect x="337.9" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (13 samples, 0.06%)</title><rect x="337.9" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.06%)</title><rect x="337.9" y="147.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (11 samples, 0.05%)</title><rect x="337.9" y="131.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="340.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (19 samples, 0.08%)</title><rect x="338.6" y="163.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (19 samples, 0.08%)</title><rect x="338.6" y="147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.04%)</title><rect x="338.6" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.6" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.04%)</title><rect x="338.6" y="115.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="341.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.05%)</title><rect x="339.0" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.04%)</title><rect x="339.2" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (8 samples, 0.04%)</title><rect x="339.2" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.04%)</title><rect x="339.2" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.04%)</title><rect x="339.2" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.04%)</title><rect x="339.2" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.04%)</title><rect x="339.2" y="35.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="342.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="339.6" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="339.6" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.07%)</title><rect x="339.6" y="291.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="342.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (20 samples, 0.09%)</title><rect x="340.4" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (9 samples, 0.04%)</title><rect x="340.4" y="355.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="343.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (11 samples, 0.05%)</title><rect x="340.9" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (11 samples, 0.05%)</title><rect x="340.9" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="340.9" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="343.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.07%)</title><rect x="341.5" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (7 samples, 0.03%)</title><rect x="341.5" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="344.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.04%)</title><rect x="341.8" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (8 samples, 0.04%)</title><rect x="341.8" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.04%)</title><rect x="341.8" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.04%)</title><rect x="341.8" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.04%)</title><rect x="341.8" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.04%)</title><rect x="341.8" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="344.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (117 samples, 0.52%)</title><rect x="342.2" y="371.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (8 samples, 0.04%)</title><rect x="342.2" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="345.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (11 samples, 0.05%)</title><rect x="342.7" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (11 samples, 0.05%)</title><rect x="342.7" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="342.7" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="345.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (98 samples, 0.44%)</title><rect x="343.2" y="355.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (5 samples, 0.02%)</title><rect x="343.2" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="346.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (59 samples, 0.26%)</title><rect x="343.5" y="339.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (11 samples, 0.05%)</title><rect x="343.5" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (11 samples, 0.05%)</title><rect x="343.5" y="307.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="346.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (8 samples, 0.04%)</title><rect x="344.1" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="347.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (40 samples, 0.18%)</title><rect x="344.5" y="323.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (10 samples, 0.04%)</title><rect x="344.8" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="347.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.04%)</title><rect x="345.3" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.04%)</title><rect x="345.3" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="348.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (15 samples, 0.07%)</title><rect x="345.8" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (5 samples, 0.02%)</title><rect x="345.8" y="291.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="348.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (5 samples, 0.02%)</title><rect x="346.1" y="291.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="349.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (5 samples, 0.02%)</title><rect x="346.3" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="349.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (34 samples, 0.15%)</title><rect x="346.6" y="339.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="346.6" y="323.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="349.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.06%)</title><rect x="347.0" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.04%)</title><rect x="347.0" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="350.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.06%)</title><rect x="347.7" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.06%)</title><rect x="347.7" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.06%)</title><rect x="347.7" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.06%)</title><rect x="347.7" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="347.7" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="347.7" y="243.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="350.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (50 samples, 0.22%)</title><rect x="348.4" y="579.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (50 samples, 0.22%)</title><rect x="348.4" y="563.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (50 samples, 0.22%)</title><rect x="348.4" y="547.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (50 samples, 0.22%)</title><rect x="348.4" y="531.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (50 samples, 0.22%)</title><rect x="348.4" y="515.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.4" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (50 samples, 0.22%)</title><rect x="348.4" y="499.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (19 samples, 0.08%)</title><rect x="348.4" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.4" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (19 samples, 0.08%)</title><rect x="348.4" y="467.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="351.4" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (31 samples, 0.14%)</title><rect x="349.4" y="483.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.4" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (31 samples, 0.14%)</title><rect x="349.4" y="467.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="352.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,591 samples, 11.53%)</title><rect x="351.0" y="755.0" width="136.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.0" y="766.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,591 samples, 11.53%)</title><rect x="351.0" y="739.0" width="136.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.0" y="750.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,189 samples, 9.74%)</title><rect x="351.0" y="723.0" width="115.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.0" y="734.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (2,189 samples, 9.74%)</title><rect x="351.0" y="707.0" width="115.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.0" y="718.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,189 samples, 9.74%)</title><rect x="351.0" y="691.0" width="115.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.0" y="702.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (19 samples, 0.08%)</title><rect x="351.0" y="675.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (17 samples, 0.08%)</title><rect x="351.1" y="659.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onReadError (13 samples, 0.06%)</title><rect x="351.2" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.close (10 samples, 0.04%)</title><rect x="351.4" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.toString (7 samples, 0.03%)</title><rect x="351.4" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.toString (7 samples, 0.03%)</title><rect x="351.4" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.toString (6 samples, 0.03%)</title><rect x="351.4" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (51 samples, 0.23%)</title><rect x="352.0" y="675.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (51 samples, 0.23%)</title><rect x="352.0" y="659.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (51 samples, 0.23%)</title><rect x="352.0" y="643.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (51 samples, 0.23%)</title><rect x="352.0" y="627.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (22 samples, 0.10%)</title><rect x="352.0" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (22 samples, 0.10%)</title><rect x="352.0" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.10%)</title><rect x="352.0" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.10%)</title><rect x="352.0" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.10%)</title><rect x="352.0" y="547.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.0" y="558.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.10%)</title><rect x="352.0" y="531.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="355.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (29 samples, 0.13%)</title><rect x="353.2" y="611.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.13%)</title><rect x="353.2" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.13%)</title><rect x="353.2" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (29 samples, 0.13%)</title><rect x="353.2" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (29 samples, 0.13%)</title><rect x="353.2" y="547.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="356.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,119 samples, 9.43%)</title><rect x="354.7" y="675.0" width="111.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.7" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,119 samples, 9.43%)</title><rect x="354.7" y="659.0" width="111.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.7" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,119 samples, 9.43%)</title><rect x="354.7" y="643.0" width="111.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.7" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,119 samples, 9.43%)</title><rect x="354.7" y="627.0" width="111.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.7" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (931 samples, 4.14%)</title><rect x="354.7" y="611.0" width="48.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.7" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (931 samples, 4.14%)</title><rect x="354.7" y="595.0" width="48.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.7" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (931 samples, 4.14%)</title><rect x="354.7" y="579.0" width="48.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.7" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (931 samples, 4.14%)</title><rect x="354.7" y="563.0" width="48.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.7" y="574.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (931 samples, 4.14%)</title><rect x="354.7" y="547.0" width="48.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.7" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (931 samples, 4.14%)</title><rect x="354.7" y="531.0" width="48.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.7" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (931 samples, 4.14%)</title><rect x="354.7" y="515.0" width="48.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.7" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (889 samples, 3.96%)</title><rect x="354.7" y="499.0" width="46.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.7" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (889 samples, 3.96%)</title><rect x="354.7" y="483.0" width="46.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.7" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (871 samples, 3.88%)</title><rect x="354.7" y="467.0" width="45.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.7" y="478.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (20 samples, 0.09%)</title><rect x="354.7" y="451.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="357.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$309/1621395256.apply (17 samples, 0.08%)</title><rect x="355.7" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (17 samples, 0.08%)</title><rect x="355.7" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (17 samples, 0.08%)</title><rect x="355.7" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (17 samples, 0.08%)</title><rect x="355.7" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.08%)</title><rect x="355.7" y="387.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="358.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (788 samples, 3.51%)</title><rect x="356.6" y="451.0" width="41.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.6" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (788 samples, 3.51%)</title><rect x="356.6" y="435.0" width="41.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.6" y="446.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.07%)</title><rect x="356.6" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.07%)</title><rect x="356.6" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.get$Lambda (15 samples, 0.07%)</title><rect x="356.6" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$341 (15 samples, 0.07%)</title><rect x="356.6" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="359.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (32 samples, 0.14%)</title><rect x="357.4" y="419.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (32 samples, 0.14%)</title><rect x="357.4" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (17 samples, 0.08%)</title><rect x="357.4" y="387.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="360.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="358.3" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="358.3" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.07%)</title><rect x="358.3" y="355.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="361.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (741 samples, 3.30%)</title><rect x="359.1" y="419.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.1" y="430.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="359.1" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="359.1" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$340/122266442.get$Lambda (10 samples, 0.04%)</title><rect x="359.1" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$340 (10 samples, 0.04%)</title><rect x="359.1" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="362.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (48 samples, 0.21%)</title><rect x="359.6" y="403.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (48 samples, 0.21%)</title><rect x="359.6" y="387.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.12%)</title><rect x="359.6" y="371.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="362.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.09%)</title><rect x="361.1" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.09%)</title><rect x="361.1" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.09%)</title><rect x="361.1" y="339.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="364.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (683 samples, 3.04%)</title><rect x="362.1" y="403.0" width="35.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.1" y="414.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$146/2083139844.apply (19 samples, 0.08%)</title><rect x="362.1" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (19 samples, 0.08%)</title><rect x="362.1" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (19 samples, 0.08%)</title><rect x="362.1" y="355.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (9 samples, 0.04%)</title><rect x="362.1" y="339.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="365.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (10 samples, 0.04%)</title><rect x="362.6" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.04%)</title><rect x="362.7" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="365.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$365/462289540.apply (30 samples, 0.13%)</title><rect x="363.1" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (30 samples, 0.13%)</title><rect x="363.1" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (30 samples, 0.13%)</title><rect x="363.1" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (12 samples, 0.05%)</title><rect x="363.1" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="366.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (18 samples, 0.08%)</title><rect x="363.8" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="363.8" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="366.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="364.1" y="323.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="367.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (634 samples, 2.82%)</title><rect x="364.7" y="387.0" width="33.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.7" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="364.7" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="364.7" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.get$Lambda (10 samples, 0.04%)</title><rect x="364.7" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$337 (10 samples, 0.04%)</title><rect x="364.7" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="367.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$339/609318195.get$Lambda (9 samples, 0.04%)</title><rect x="365.2" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$339 (9 samples, 0.04%)</title><rect x="365.2" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="368.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2096789396.linkToTargetMethod (24 samples, 0.11%)</title><rect x="365.7" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/282651814.invokeStatic (24 samples, 0.11%)</title><rect x="365.7" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.get$Lambda (24 samples, 0.11%)</title><rect x="365.7" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$323 (24 samples, 0.11%)</title><rect x="365.7" y="323.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="368.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (143 samples, 0.64%)</title><rect x="367.0" y="371.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (47 samples, 0.21%)</title><rect x="367.0" y="355.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (13 samples, 0.06%)</title><rect x="367.0" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.0" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (13 samples, 0.06%)</title><rect x="367.0" y="323.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="370.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (34 samples, 0.15%)</title><rect x="367.7" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (34 samples, 0.15%)</title><rect x="367.7" y="323.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="370.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (56 samples, 0.25%)</title><rect x="369.4" y="355.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (56 samples, 0.25%)</title><rect x="369.4" y="339.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (56 samples, 0.25%)</title><rect x="369.4" y="323.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (24 samples, 0.11%)</title><rect x="369.4" y="307.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (24 samples, 0.11%)</title><rect x="369.4" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (24 samples, 0.11%)</title><rect x="369.4" y="275.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (24 samples, 0.11%)</title><rect x="369.4" y="259.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="372.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$320/39647453.get (15 samples, 0.07%)</title><rect x="370.7" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (15 samples, 0.07%)</title><rect x="370.7" y="291.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="373.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (17 samples, 0.08%)</title><rect x="371.5" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (17 samples, 0.08%)</title><rect x="371.5" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.5" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (17 samples, 0.08%)</title><rect x="371.5" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.5" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (17 samples, 0.08%)</title><rect x="371.5" y="259.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="374.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (40 samples, 0.18%)</title><rect x="372.4" y="355.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (40 samples, 0.18%)</title><rect x="372.4" y="339.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="375.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (77 samples, 0.34%)</title><rect x="374.5" y="371.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (40 samples, 0.18%)</title><rect x="374.5" y="355.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.09%)</title><rect x="374.5" y="339.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="377.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.09%)</title><rect x="375.5" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.09%)</title><rect x="375.5" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.09%)</title><rect x="375.5" y="307.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="378.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (37 samples, 0.16%)</title><rect x="376.6" y="355.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (37 samples, 0.16%)</title><rect x="376.6" y="339.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.06%)</title><rect x="376.6" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="379.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="377.3" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="377.3" y="307.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="377.3" y="291.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="380.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (11 samples, 0.05%)</title><rect x="378.5" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="381.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (19 samples, 0.08%)</title><rect x="379.1" y="371.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="382.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="380.1" y="371.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="383.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (6 samples, 0.03%)</title><rect x="380.6" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (6 samples, 0.03%)</title><rect x="380.6" y="355.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="383.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (325 samples, 1.45%)</title><rect x="380.9" y="371.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$323/1833703036.run (325 samples, 1.45%)</title><rect x="380.9" y="355.0" width="17.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (325 samples, 1.45%)</title><rect x="380.9" y="339.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.16%)</title><rect x="380.9" y="323.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.16%)</title><rect x="380.9" y="307.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.get$Lambda (6 samples, 0.03%)</title><rect x="380.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (6 samples, 0.03%)</title><rect x="380.9" y="275.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="383.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/1994142006.get$Lambda (15 samples, 0.07%)</title><rect x="381.3" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$327 (15 samples, 0.07%)</title><rect x="381.3" y="275.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="384.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1978442940.get$Lambda (14 samples, 0.06%)</title><rect x="382.0" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$333 (14 samples, 0.06%)</title><rect x="382.0" y="275.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="385.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.22%)</title><rect x="382.8" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.22%)</title><rect x="382.8" y="307.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.14%)</title><rect x="382.8" y="291.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="385.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="384.4" y="291.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="384.4" y="275.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="384.4" y="259.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="387.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (19 samples, 0.08%)</title><rect x="385.4" y="323.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="388.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (18 samples, 0.08%)</title><rect x="386.4" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="386.4" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="389.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (48 samples, 0.21%)</title><rect x="387.3" y="323.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (48 samples, 0.21%)</title><rect x="387.3" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="387.3" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="387.3" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$335/1458335372.get$Lambda (12 samples, 0.05%)</title><rect x="387.3" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$335 (12 samples, 0.05%)</title><rect x="387.3" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="390.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.16%)</title><rect x="387.9" y="291.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.16%)</title><rect x="387.9" y="275.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.16%)</title><rect x="387.9" y="259.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.08%)</title><rect x="387.9" y="243.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="390.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="388.9" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="388.9" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.08%)</title><rect x="388.9" y="211.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="391.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (42 samples, 0.19%)</title><rect x="389.8" y="323.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.18%)</title><rect x="389.8" y="307.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122606666.invoke (41 samples, 0.18%)</title><rect x="389.8" y="291.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.18%)</title><rect x="389.8" y="275.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (9 samples, 0.04%)</title><rect x="389.8" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="389.8" y="243.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="392.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (32 samples, 0.14%)</title><rect x="390.3" y="259.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (32 samples, 0.14%)</title><rect x="390.3" y="243.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.3" y="254.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="390.3" y="227.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="393.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (114 samples, 0.51%)</title><rect x="392.0" y="323.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (32 samples, 0.14%)</title><rect x="392.0" y="307.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="395.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (82 samples, 0.36%)</title><rect x="393.7" y="307.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.36%)</title><rect x="393.7" y="291.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122606666.invoke (82 samples, 0.36%)</title><rect x="393.7" y="275.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.36%)</title><rect x="393.7" y="259.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (17 samples, 0.08%)</title><rect x="393.7" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.08%)</title><rect x="393.7" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="396.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (65 samples, 0.29%)</title><rect x="394.6" y="243.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (65 samples, 0.29%)</title><rect x="394.6" y="227.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.6" y="238.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.29%)</title><rect x="394.6" y="211.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="397.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$294/2004173693.apply (46 samples, 0.20%)</title><rect x="398.0" y="451.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (46 samples, 0.20%)</title><rect x="398.0" y="435.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (24 samples, 0.11%)</title><rect x="398.0" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (22 samples, 0.10%)</title><rect x="398.1" y="403.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.1" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (22 samples, 0.10%)</title><rect x="398.1" y="387.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.1" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (22 samples, 0.10%)</title><rect x="398.1" y="371.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="401.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (22 samples, 0.10%)</title><rect x="399.3" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.10%)</title><rect x="399.3" y="403.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="402.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (18 samples, 0.08%)</title><rect x="400.4" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (18 samples, 0.08%)</title><rect x="400.4" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$296/730056817.apply (18 samples, 0.08%)</title><rect x="400.4" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (18 samples, 0.08%)</title><rect x="400.4" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (18 samples, 0.08%)</title><rect x="400.4" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="400.4" y="387.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="403.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/1397481348.apply (42 samples, 0.19%)</title><rect x="401.4" y="499.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (42 samples, 0.19%)</title><rect x="401.4" y="483.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (42 samples, 0.19%)</title><rect x="401.4" y="467.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="404.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,188 samples, 5.29%)</title><rect x="403.6" y="611.0" width="62.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.6" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (71 samples, 0.32%)</title><rect x="403.6" y="595.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (71 samples, 0.32%)</title><rect x="403.6" y="579.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (71 samples, 0.32%)</title><rect x="403.6" y="563.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (71 samples, 0.32%)</title><rect x="403.6" y="547.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (71 samples, 0.32%)</title><rect x="403.6" y="531.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.6" y="542.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.32%)</title><rect x="403.6" y="515.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="406.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (16 samples, 0.07%)</title><rect x="407.3" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (16 samples, 0.07%)</title><rect x="407.3" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (16 samples, 0.07%)</title><rect x="407.3" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (16 samples, 0.07%)</title><rect x="407.3" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.07%)</title><rect x="407.3" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.3" y="542.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="407.3" y="515.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="410.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (79 samples, 0.35%)</title><rect x="408.1" y="595.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.08%)</title><rect x="408.1" y="579.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="411.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.05%)</title><rect x="409.0" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.05%)</title><rect x="409.0" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="409.0" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.0" y="558.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="409.0" y="531.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="412.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (17 samples, 0.08%)</title><rect x="409.7" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (17 samples, 0.08%)</title><rect x="409.7" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.7" y="574.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.08%)</title><rect x="409.7" y="547.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="412.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (33 samples, 0.15%)</title><rect x="410.6" y="579.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.15%)</title><rect x="410.6" y="563.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.08%)</title><rect x="410.6" y="547.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="413.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.07%)</title><rect x="411.5" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.5" y="558.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="411.5" y="531.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="414.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (325 samples, 1.45%)</title><rect x="412.3" y="595.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (325 samples, 1.45%)</title><rect x="412.3" y="579.0" width="17.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (325 samples, 1.45%)</title><rect x="412.3" y="563.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.3" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.05%)</title><rect x="412.3" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="415.3" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.06%)</title><rect x="412.9" y="547.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="415.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.12%)</title><rect x="413.6" y="547.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="416.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.03%)</title><rect x="415.1" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="418.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.12%)</title><rect x="415.4" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.12%)</title><rect x="415.4" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (27 samples, 0.12%)</title><rect x="415.4" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (27 samples, 0.12%)</title><rect x="415.4" y="499.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="418.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (18 samples, 0.08%)</title><rect x="416.9" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.9" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (18 samples, 0.08%)</title><rect x="416.9" y="531.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="419.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (194 samples, 0.86%)</title><rect x="417.8" y="547.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (194 samples, 0.86%)</title><rect x="417.8" y="531.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (194 samples, 0.86%)</title><rect x="417.8" y="515.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.12%)</title><rect x="417.8" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.12%)</title><rect x="417.8" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (27 samples, 0.12%)</title><rect x="417.8" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.8" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (27 samples, 0.12%)</title><rect x="417.8" y="451.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="420.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (34 samples, 0.15%)</title><rect x="419.2" y="499.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (34 samples, 0.15%)</title><rect x="419.2" y="483.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (34 samples, 0.15%)</title><rect x="419.2" y="467.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.15%)</title><rect x="419.2" y="451.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.15%)</title><rect x="419.2" y="435.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.15%)</title><rect x="419.2" y="419.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.15%)</title><rect x="419.2" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.15%)</title><rect x="419.2" y="387.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.15%)</title><rect x="419.2" y="371.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="422.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (79 samples, 0.35%)</title><rect x="421.0" y="499.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (79 samples, 0.35%)</title><rect x="421.0" y="483.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (48 samples, 0.21%)</title><rect x="421.0" y="467.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.21%)</title><rect x="421.0" y="451.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.21%)</title><rect x="421.0" y="435.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="424.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (31 samples, 0.14%)</title><rect x="423.5" y="467.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (31 samples, 0.14%)</title><rect x="423.5" y="451.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="426.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (54 samples, 0.24%)</title><rect x="425.2" y="499.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (54 samples, 0.24%)</title><rect x="425.2" y="483.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="428.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (26 samples, 0.12%)</title><rect x="428.0" y="547.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.12%)</title><rect x="428.0" y="531.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="431.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (697 samples, 3.10%)</title><rect x="429.4" y="595.0" width="36.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.4" y="606.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (36 samples, 0.16%)</title><rect x="429.4" y="579.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="432.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (47 samples, 0.21%)</title><rect x="431.3" y="579.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (47 samples, 0.21%)</title><rect x="431.3" y="563.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.3" y="574.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.21%)</title><rect x="431.3" y="547.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="434.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (106 samples, 0.47%)</title><rect x="433.7" y="579.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (106 samples, 0.47%)</title><rect x="433.7" y="563.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.14%)</title><rect x="433.7" y="547.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="436.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.33%)</title><rect x="435.3" y="547.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.3" y="558.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.33%)</title><rect x="435.3" y="531.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="438.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (508 samples, 2.26%)</title><rect x="439.3" y="579.0" width="26.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (137 samples, 0.61%)</title><rect x="439.3" y="563.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (137 samples, 0.61%)</title><rect x="439.3" y="547.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.21%)</title><rect x="439.3" y="531.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="442.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (89 samples, 0.40%)</title><rect x="441.8" y="531.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.8" y="542.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.40%)</title><rect x="441.8" y="515.0" width="4.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="444.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (75 samples, 0.33%)</title><rect x="446.5" y="563.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (75 samples, 0.33%)</title><rect x="446.5" y="547.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.5" y="558.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.16%)</title><rect x="446.5" y="531.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="449.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.17%)</title><rect x="448.4" y="531.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="451.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (78 samples, 0.35%)</title><rect x="450.4" y="563.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (78 samples, 0.35%)</title><rect x="450.4" y="547.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (78 samples, 0.35%)</title><rect x="450.4" y="531.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.17%)</title><rect x="450.4" y="515.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="453.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.17%)</title><rect x="452.5" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.5" y="526.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.17%)</title><rect x="452.5" y="499.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="455.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.41%)</title><rect x="454.5" y="563.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.41%)</title><rect x="454.5" y="547.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.41%)</title><rect x="454.5" y="531.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.41%)</title><rect x="454.5" y="515.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.41%)</title><rect x="454.5" y="499.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.41%)</title><rect x="454.5" y="483.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="457.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (125 samples, 0.56%)</title><rect x="459.4" y="563.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (43 samples, 0.19%)</title><rect x="459.4" y="547.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (43 samples, 0.19%)</title><rect x="459.4" y="531.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="462.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (51 samples, 0.23%)</title><rect x="461.7" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (51 samples, 0.23%)</title><rect x="461.7" y="531.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="464.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$315/1017512857.apply (31 samples, 0.14%)</title><rect x="464.3" y="547.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (31 samples, 0.14%)</title><rect x="464.3" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.14%)</title><rect x="464.3" y="515.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="467.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (402 samples, 1.79%)</title><rect x="466.0" y="723.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.0" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (402 samples, 1.79%)</title><rect x="466.0" y="707.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.0" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (402 samples, 1.79%)</title><rect x="466.0" y="691.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.0" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$231/136586174.run (402 samples, 1.79%)</title><rect x="466.0" y="675.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.0" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (402 samples, 1.79%)</title><rect x="466.0" y="659.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.0" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (198 samples, 0.88%)</title><rect x="466.0" y="643.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.10%)</title><rect x="466.0" y="627.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.10%)</title><rect x="466.0" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$264/1454589555.get$Lambda (7 samples, 0.03%)</title><rect x="466.0" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$264 (7 samples, 0.03%)</title><rect x="466.0" y="579.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="469.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$267/401982671.get$Lambda (15 samples, 0.07%)</title><rect x="466.3" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$267 (15 samples, 0.07%)</title><rect x="466.3" y="579.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="469.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (23 samples, 0.10%)</title><rect x="467.1" y="627.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="470.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (23 samples, 0.10%)</title><rect x="468.3" y="627.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (23 samples, 0.10%)</title><rect x="468.3" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (9 samples, 0.04%)</title><rect x="468.3" y="595.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="471.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (14 samples, 0.06%)</title><rect x="468.8" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (14 samples, 0.06%)</title><rect x="468.8" y="579.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="471.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (130 samples, 0.58%)</title><rect x="469.5" y="627.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (130 samples, 0.58%)</title><rect x="469.5" y="611.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.run (119 samples, 0.53%)</title><rect x="469.5" y="595.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (119 samples, 0.53%)</title><rect x="469.5" y="579.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (119 samples, 0.53%)</title><rect x="469.5" y="563.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (28 samples, 0.12%)</title><rect x="469.5" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.5" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (17 samples, 0.08%)</title><rect x="469.5" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.07%)</title><rect x="469.6" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.07%)</title><rect x="469.6" y="499.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="472.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (11 samples, 0.05%)</title><rect x="470.4" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.05%)</title><rect x="470.4" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.05%)</title><rect x="470.4" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (9 samples, 0.04%)</title><rect x="470.4" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (9 samples, 0.04%)</title><rect x="470.4" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="473.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (91 samples, 0.40%)</title><rect x="471.0" y="547.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (12 samples, 0.05%)</title><rect x="471.0" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.0" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (12 samples, 0.05%)</title><rect x="471.0" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.05%)</title><rect x="471.0" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.05%)</title><rect x="471.0" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.0" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (12 samples, 0.05%)</title><rect x="471.0" y="467.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="474.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (79 samples, 0.35%)</title><rect x="471.6" y="531.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (41 samples, 0.18%)</title><rect x="471.6" y="515.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (10 samples, 0.04%)</title><rect x="471.8" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (10 samples, 0.04%)</title><rect x="471.8" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.04%)</title><rect x="471.8" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.04%)</title><rect x="471.8" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.04%)</title><rect x="471.8" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.04%)</title><rect x="471.8" y="419.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="474.8" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (9 samples, 0.04%)</title><rect x="472.4" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (9 samples, 0.04%)</title><rect x="472.4" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (9 samples, 0.04%)</title><rect x="472.4" y="467.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="475.4" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (11 samples, 0.05%)</title><rect x="472.8" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (11 samples, 0.05%)</title><rect x="472.8" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (11 samples, 0.05%)</title><rect x="472.8" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="475.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (7 samples, 0.03%)</title><rect x="473.4" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="476.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (16 samples, 0.07%)</title><rect x="473.8" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.03%)</title><rect x="473.8" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.03%)</title><rect x="473.8" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (6 samples, 0.03%)</title><rect x="473.8" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="473.8" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="476.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.02%)</title><rect x="474.1" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.02%)</title><rect x="474.1" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.02%)</title><rect x="474.1" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="477.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (5 samples, 0.02%)</title><rect x="474.4" y="499.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (5 samples, 0.02%)</title><rect x="474.4" y="483.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="477.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (22 samples, 0.10%)</title><rect x="474.6" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (20 samples, 0.09%)</title><rect x="474.7" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.02%)</title><rect x="474.7" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.02%)</title><rect x="474.7" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.02%)</title><rect x="474.7" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (5 samples, 0.02%)</title><rect x="474.7" y="435.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="477.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (15 samples, 0.07%)</title><rect x="475.0" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (15 samples, 0.07%)</title><rect x="475.0" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (9 samples, 0.04%)</title><rect x="475.0" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="478.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.03%)</title><rect x="475.5" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (6 samples, 0.03%)</title><rect x="475.5" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="478.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (11 samples, 0.05%)</title><rect x="475.8" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (11 samples, 0.05%)</title><rect x="475.8" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (11 samples, 0.05%)</title><rect x="475.8" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11 samples, 0.05%)</title><rect x="475.8" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.05%)</title><rect x="475.8" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.05%)</title><rect x="475.8" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.05%)</title><rect x="475.8" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.accept (11 samples, 0.05%)</title><rect x="475.8" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (11 samples, 0.05%)</title><rect x="475.8" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11 samples, 0.05%)</title><rect x="475.8" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.05%)</title><rect x="475.8" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11 samples, 0.05%)</title><rect x="475.8" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.apply (11 samples, 0.05%)</title><rect x="475.8" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (11 samples, 0.05%)</title><rect x="475.8" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (11 samples, 0.05%)</title><rect x="475.8" y="371.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="478.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (198 samples, 0.88%)</title><rect x="476.4" y="643.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (198 samples, 0.88%)</title><rect x="476.4" y="627.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (198 samples, 0.88%)</title><rect x="476.4" y="611.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (198 samples, 0.88%)</title><rect x="476.4" y="595.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (198 samples, 0.88%)</title><rect x="476.4" y="579.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (198 samples, 0.88%)</title><rect x="476.4" y="563.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="476.4" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="476.4" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.4" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="476.4" y="515.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="479.4" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.04%)</title><rect x="476.7" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.7" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.04%)</title><rect x="476.7" y="531.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="479.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/652349130.run (112 samples, 0.50%)</title><rect x="477.1" y="547.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (112 samples, 0.50%)</title><rect x="477.1" y="531.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (112 samples, 0.50%)</title><rect x="477.1" y="515.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (32 samples, 0.14%)</title><rect x="477.1" y="499.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.10%)</title><rect x="477.1" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (8 samples, 0.04%)</title><rect x="477.1" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.1" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (8 samples, 0.04%)</title><rect x="477.1" y="451.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="480.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="477.6" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="477.6" y="451.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="480.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.04%)</title><rect x="478.3" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.04%)</title><rect x="478.3" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.04%)</title><rect x="478.3" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (6 samples, 0.03%)</title><rect x="478.3" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.3" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (6 samples, 0.03%)</title><rect x="478.3" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="481.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (80 samples, 0.36%)</title><rect x="478.8" y="499.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.04%)</title><rect x="478.8" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.8" y="494.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.04%)</title><rect x="478.8" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (9 samples, 0.04%)</title><rect x="478.8" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (9 samples, 0.04%)</title><rect x="478.8" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (9 samples, 0.04%)</title><rect x="478.8" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="481.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (71 samples, 0.32%)</title><rect x="479.3" y="483.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (33 samples, 0.15%)</title><rect x="479.3" y="467.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.3" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (8 samples, 0.04%)</title><rect x="479.5" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (8 samples, 0.04%)</title><rect x="479.5" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.5" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (8 samples, 0.04%)</title><rect x="479.5" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="482.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (12 samples, 0.05%)</title><rect x="479.9" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (12 samples, 0.05%)</title><rect x="479.9" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.05%)</title><rect x="479.9" y="419.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="482.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (9 samples, 0.04%)</title><rect x="480.6" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="483.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (14 samples, 0.06%)</title><rect x="481.0" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.03%)</title><rect x="481.0" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.03%)</title><rect x="481.0" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (6 samples, 0.03%)</title><rect x="481.0" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="481.0" y="403.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="484.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.02%)</title><rect x="481.3" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.02%)</title><rect x="481.3" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.02%)</title><rect x="481.3" y="419.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="484.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (24 samples, 0.11%)</title><rect x="481.8" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (6 samples, 0.03%)</title><rect x="481.8" y="451.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="484.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (18 samples, 0.08%)</title><rect x="482.1" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.06%)</title><rect x="482.3" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.06%)</title><rect x="482.3" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (9 samples, 0.04%)</title><rect x="482.3" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="485.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.02%)</title><rect x="482.8" y="403.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (5 samples, 0.02%)</title><rect x="482.8" y="387.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="485.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (33 samples, 0.15%)</title><rect x="483.0" y="547.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (33 samples, 0.15%)</title><rect x="483.0" y="531.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (33 samples, 0.15%)</title><rect x="483.0" y="515.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (27 samples, 0.12%)</title><rect x="483.0" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.12%)</title><rect x="483.0" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (27 samples, 0.12%)</title><rect x="483.0" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (27 samples, 0.12%)</title><rect x="483.0" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$337/1586705746.accept (27 samples, 0.12%)</title><rect x="483.0" y="435.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (27 samples, 0.12%)</title><rect x="483.0" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (27 samples, 0.12%)</title><rect x="483.0" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.12%)</title><rect x="483.0" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.12%)</title><rect x="483.0" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$341/1769506406.apply (27 samples, 0.12%)</title><rect x="483.0" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (27 samples, 0.12%)</title><rect x="483.0" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (27 samples, 0.12%)</title><rect x="483.0" y="323.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="486.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (6 samples, 0.03%)</title><rect x="484.4" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.4" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="484.4" y="483.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="487.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (38 samples, 0.17%)</title><rect x="484.8" y="547.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (38 samples, 0.17%)</title><rect x="484.8" y="531.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (38 samples, 0.17%)</title><rect x="484.8" y="515.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (38 samples, 0.17%)</title><rect x="484.8" y="499.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (38 samples, 0.17%)</title><rect x="484.8" y="483.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.8" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.04%)</title><rect x="484.8" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="484.8" y="451.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="487.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.13%)</title><rect x="485.2" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.13%)</title><rect x="485.2" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.13%)</title><rect x="485.2" y="435.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="488.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6 samples, 0.03%)</title><rect x="486.8" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6 samples, 0.03%)</title><rect x="486.8" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6 samples, 0.03%)</title><rect x="486.8" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6 samples, 0.03%)</title><rect x="486.8" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.02%)</title><rect x="486.8" y="579.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.02%)</title><rect x="486.8" y="563.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.02%)</title><rect x="486.8" y="547.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.02%)</title><rect x="486.8" y="531.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.02%)</title><rect x="486.8" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.02%)</title><rect x="486.8" y="499.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.02%)</title><rect x="486.8" y="483.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.02%)</title><rect x="486.8" y="467.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.02%)</title><rect x="486.8" y="451.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.02%)</title><rect x="486.8" y="435.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.apply (5 samples, 0.02%)</title><rect x="486.8" y="419.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.02%)</title><rect x="486.8" y="403.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (5 samples, 0.02%)</title><rect x="486.8" y="387.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5 samples, 0.02%)</title><rect x="486.8" y="371.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5 samples, 0.02%)</title><rect x="486.8" y="355.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.run (4,535 samples, 20.18%)</title><rect x="487.1" y="755.0" width="238.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.1" y="766.0">ru/mail/polis/service/rest/RestC..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$asyncExecute$3 (4,535 samples, 20.18%)</title><rect x="487.1" y="739.0" width="238.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.1" y="750.0">ru/mail/polis/service/rest/RestC..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$115/59933779.submit (2,253 samples, 10.03%)</title><rect x="487.1" y="723.0" width="118.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.1" y="734.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$2 (2,253 samples, 10.03%)</title><rect x="487.1" y="707.0" width="118.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.1" y="718.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.upsert (2,253 samples, 10.03%)</title><rect x="487.1" y="691.0" width="118.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.1" y="702.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue (6 samples, 0.03%)</title><rect x="487.1" y="675.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="490.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1278628581.linkToTargetMethod (12 samples, 0.05%)</title><rect x="487.4" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="487.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$131/1648498957.get$Lambda (12 samples, 0.05%)</title><rect x="487.4" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$131 (12 samples, 0.05%)</title><rect x="487.4" y="627.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="490.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 0.32%)</title><rect x="488.0" y="675.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 0.32%)</title><rect x="488.0" y="659.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.0" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.32%)</title><rect x="488.0" y="643.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="491.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,558 samples, 6.93%)</title><rect x="491.7" y="675.0" width="81.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.7" y="686.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$131/1648498957.accept (1,558 samples, 6.93%)</title><rect x="491.7" y="659.0" width="81.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.7" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$upsert$3 (1,558 samples, 6.93%)</title><rect x="491.7" y="643.0" width="81.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.7" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (16 samples, 0.07%)</title><rect x="492.0" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (16 samples, 0.07%)</title><rect x="492.0" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (16 samples, 0.07%)</title><rect x="492.0" y="595.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="495.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.upsert (1,182 samples, 5.26%)</title><rect x="492.8" y="627.0" width="62.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.8" y="638.0">ru/mai..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (161 samples, 0.72%)</title><rect x="492.8" y="611.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (10 samples, 0.04%)</title><rect x="492.8" y="595.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="495.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (151 samples, 0.67%)</title><rect x="493.3" y="595.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (147 samples, 0.65%)</title><rect x="493.3" y="579.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (147 samples, 0.65%)</title><rect x="493.3" y="563.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.3" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (5 samples, 0.02%)</title><rect x="493.3" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="496.3" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="493.6" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="496.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.12%)</title><rect x="493.9" y="547.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="496.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.03%)</title><rect x="495.4" y="547.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="498.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="495.7" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="495.7" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (9 samples, 0.04%)</title><rect x="495.7" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (9 samples, 0.04%)</title><rect x="495.7" y="499.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="498.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.04%)</title><rect x="496.2" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.04%)</title><rect x="496.2" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="499.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (68 samples, 0.30%)</title><rect x="496.6" y="547.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (68 samples, 0.30%)</title><rect x="496.6" y="531.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (68 samples, 0.30%)</title><rect x="496.6" y="515.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="496.6" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="496.6" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (7 samples, 0.03%)</title><rect x="496.6" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (7 samples, 0.03%)</title><rect x="496.6" y="451.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="499.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.06%)</title><rect x="496.9" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (14 samples, 0.06%)</title><rect x="496.9" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (14 samples, 0.06%)</title><rect x="496.9" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.06%)</title><rect x="496.9" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.06%)</title><rect x="496.9" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.06%)</title><rect x="496.9" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.06%)</title><rect x="496.9" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="496.9" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="496.9" y="371.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="499.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (30 samples, 0.13%)</title><rect x="497.7" y="499.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (30 samples, 0.13%)</title><rect x="497.7" y="483.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (10 samples, 0.04%)</title><rect x="497.7" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="497.7" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.04%)</title><rect x="497.7" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="500.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (20 samples, 0.09%)</title><rect x="498.2" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (20 samples, 0.09%)</title><rect x="498.2" y="451.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="501.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (17 samples, 0.08%)</title><rect x="499.3" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (17 samples, 0.08%)</title><rect x="499.3" y="483.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="502.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (17 samples, 0.08%)</title><rect x="500.1" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.08%)</title><rect x="500.1" y="531.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="503.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.builder (240 samples, 1.07%)</title><rect x="501.3" y="611.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.15%)</title><rect x="501.3" y="595.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (33 samples, 0.15%)</title><rect x="501.3" y="579.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (33 samples, 0.15%)</title><rect x="501.3" y="563.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.15%)</title><rect x="501.3" y="547.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.06%)</title><rect x="501.3" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="501.3" y="515.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="504.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.08%)</title><rect x="502.0" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.08%)</title><rect x="502.0" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.0" y="526.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="502.0" y="499.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="505.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (140 samples, 0.62%)</title><rect x="503.0" y="595.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.0" y="606.0"></text>
</g>
<g>
<title>java.net.URI (32 samples, 0.14%)</title><rect x="503.0" y="579.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="506.0" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (108 samples, 0.48%)</title><rect x="504.7" y="579.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.7" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (8 samples, 0.04%)</title><rect x="504.7" y="563.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="507.7" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (100 samples, 0.45%)</title><rect x="505.1" y="563.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.07%)</title><rect x="505.1" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.07%)</title><rect x="505.1" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.04%)</title><rect x="505.1" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="508.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.04%)</title><rect x="505.5" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.5" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="505.5" y="499.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="508.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (84 samples, 0.37%)</title><rect x="505.9" y="547.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.18%)</title><rect x="505.9" y="531.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.18%)</title><rect x="505.9" y="515.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.09%)</title><rect x="505.9" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="508.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.09%)</title><rect x="507.0" y="499.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.0" y="510.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.09%)</title><rect x="507.0" y="483.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="510.0" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (43 samples, 0.19%)</title><rect x="508.1" y="531.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.08%)</title><rect x="508.1" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.08%)</title><rect x="508.1" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.04%)</title><rect x="508.1" y="483.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="511.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="508.5" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.5" y="494.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="508.5" y="467.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="511.5" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (24 samples, 0.11%)</title><rect x="509.1" y="515.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.1" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (24 samples, 0.11%)</title><rect x="509.1" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.11%)</title><rect x="509.1" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.11%)</title><rect x="509.1" y="467.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.05%)</title><rect x="509.1" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="512.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="509.7" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.7" y="462.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="509.7" y="435.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="512.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (44 samples, 0.20%)</title><rect x="510.3" y="595.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (17 samples, 0.08%)</title><rect x="510.3" y="579.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="513.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (27 samples, 0.12%)</title><rect x="511.2" y="579.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (23 samples, 0.10%)</title><rect x="511.4" y="563.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.10%)</title><rect x="511.4" y="547.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="514.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (20 samples, 0.09%)</title><rect x="512.6" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (20 samples, 0.09%)</title><rect x="512.6" y="579.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (20 samples, 0.09%)</title><rect x="512.6" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.6" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (20 samples, 0.09%)</title><rect x="512.6" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.03%)</title><rect x="512.6" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.6" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.03%)</title><rect x="512.6" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="515.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$135/1156412280.apply (13 samples, 0.06%)</title><rect x="513.0" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (13 samples, 0.06%)</title><rect x="513.0" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.0" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="513.0" y="499.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="516.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="513.4" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="513.4" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="516.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.ofBytes (14 samples, 0.06%)</title><rect x="513.9" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (14 samples, 0.06%)</title><rect x="513.9" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (14 samples, 0.06%)</title><rect x="513.9" y="579.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="516.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.sendAsyncRequest (767 samples, 3.41%)</title><rect x="514.6" y="611.0" width="40.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.6" y="622.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (21 samples, 0.09%)</title><rect x="514.6" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (21 samples, 0.09%)</title><rect x="514.6" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (7 samples, 0.03%)</title><rect x="514.6" y="563.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="517.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="515.0" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="515.0" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="515.0" y="531.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="518.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (746 samples, 3.32%)</title><rect x="515.7" y="595.0" width="39.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (746 samples, 3.32%)</title><rect x="515.7" y="579.0" width="39.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.7" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (746 samples, 3.32%)</title><rect x="515.7" y="563.0" width="39.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.7" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (746 samples, 3.32%)</title><rect x="515.7" y="547.0" width="39.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.7" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (28 samples, 0.12%)</title><rect x="515.9" y="531.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (28 samples, 0.12%)</title><rect x="515.9" y="515.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.08%)</title><rect x="515.9" y="499.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="518.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="516.8" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="516.8" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="516.8" y="467.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="519.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (27 samples, 0.12%)</title><rect x="517.4" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.12%)</title><rect x="517.4" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.09%)</title><rect x="517.4" y="499.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="520.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="518.5" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="518.5" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="518.5" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="521.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (21 samples, 0.09%)</title><rect x="518.8" y="531.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="521.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (29 samples, 0.13%)</title><rect x="519.9" y="531.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="522.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (5 samples, 0.02%)</title><rect x="521.4" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="524.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (376 samples, 1.67%)</title><rect x="521.7" y="531.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (53 samples, 0.24%)</title><rect x="521.7" y="515.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.7" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (43 samples, 0.19%)</title><rect x="521.7" y="499.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.7" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (25 samples, 0.11%)</title><rect x="521.7" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.7" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (25 samples, 0.11%)</title><rect x="521.7" y="467.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="524.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.08%)</title><rect x="523.0" y="483.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.0" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.08%)</title><rect x="523.0" y="467.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="526.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.04%)</title><rect x="523.9" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.04%)</title><rect x="523.9" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.04%)</title><rect x="523.9" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (10 samples, 0.04%)</title><rect x="523.9" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.9" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (10 samples, 0.04%)</title><rect x="523.9" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="526.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (140 samples, 0.62%)</title><rect x="524.5" y="515.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (140 samples, 0.62%)</title><rect x="524.5" y="499.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.5" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (5 samples, 0.02%)</title><rect x="524.5" y="483.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="527.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.02%)</title><rect x="524.7" y="483.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="527.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.06%)</title><rect x="525.0" y="483.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="528.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="525.9" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="525.9" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (10 samples, 0.04%)</title><rect x="525.9" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.9" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (10 samples, 0.04%)</title><rect x="525.9" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="528.9" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (73 samples, 0.32%)</title><rect x="526.4" y="483.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (73 samples, 0.32%)</title><rect x="526.4" y="467.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (73 samples, 0.32%)</title><rect x="526.4" y="451.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (73 samples, 0.32%)</title><rect x="526.4" y="435.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (33 samples, 0.15%)</title><rect x="526.4" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (25 samples, 0.11%)</title><rect x="526.4" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (25 samples, 0.11%)</title><rect x="526.4" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.11%)</title><rect x="526.4" y="371.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.11%)</title><rect x="526.4" y="355.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.11%)</title><rect x="526.4" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.11%)</title><rect x="526.4" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.11%)</title><rect x="526.4" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.11%)</title><rect x="526.4" y="291.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="529.4" y="302.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (8 samples, 0.04%)</title><rect x="527.7" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (8 samples, 0.04%)</title><rect x="527.7" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="530.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="528.1" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="528.1" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (11 samples, 0.05%)</title><rect x="528.1" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (11 samples, 0.05%)</title><rect x="528.1" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="531.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (11 samples, 0.05%)</title><rect x="528.7" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.7" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (11 samples, 0.05%)</title><rect x="528.7" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.04%)</title><rect x="528.9" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.04%)</title><rect x="528.9" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="531.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 0.08%)</title><rect x="529.3" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.08%)</title><rect x="529.3" y="403.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="532.3" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (7 samples, 0.03%)</title><rect x="530.2" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.2" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (7 samples, 0.03%)</title><rect x="530.2" y="467.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="533.2" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (23 samples, 0.10%)</title><rect x="530.6" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.10%)</title><rect x="530.6" y="467.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="533.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (134 samples, 0.60%)</title><rect x="532.0" y="515.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.0" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (134 samples, 0.60%)</title><rect x="532.0" y="499.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.0" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (123 samples, 0.55%)</title><rect x="532.0" y="483.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.0" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (123 samples, 0.55%)</title><rect x="532.0" y="467.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.0" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (123 samples, 0.55%)</title><rect x="532.0" y="451.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.0" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (25 samples, 0.11%)</title><rect x="532.0" y="435.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="535.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (36 samples, 0.16%)</title><rect x="533.3" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (36 samples, 0.16%)</title><rect x="533.3" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.3" y="430.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.16%)</title><rect x="533.3" y="403.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="536.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (62 samples, 0.28%)</title><rect x="535.2" y="435.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.28%)</title><rect x="535.2" y="419.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.12%)</title><rect x="535.2" y="403.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="538.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.16%)</title><rect x="536.6" y="403.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.6" y="414.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.16%)</title><rect x="536.6" y="387.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="539.6" y="398.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (11 samples, 0.05%)</title><rect x="538.5" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="541.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="539.1" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.06%)</title><rect x="539.1" y="499.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="542.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (31 samples, 0.14%)</title><rect x="539.8" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.8" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.05%)</title><rect x="539.8" y="499.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="542.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 0.08%)</title><rect x="540.5" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.08%)</title><rect x="540.5" y="483.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="543.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (176 samples, 0.78%)</title><rect x="541.4" y="531.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (28 samples, 0.12%)</title><rect x="541.6" y="515.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="544.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (142 samples, 0.63%)</title><rect x="543.2" y="515.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (142 samples, 0.63%)</title><rect x="543.2" y="499.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Class[] (19 samples, 0.08%)</title><rect x="543.2" y="483.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="546.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.05%)</title><rect x="544.2" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="547.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (11 samples, 0.05%)</title><rect x="544.8" y="483.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="547.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (63 samples, 0.28%)</title><rect x="545.4" y="483.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (63 samples, 0.28%)</title><rect x="545.4" y="467.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.4" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (63 samples, 0.28%)</title><rect x="545.4" y="451.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.4" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (63 samples, 0.28%)</title><rect x="545.4" y="435.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.4" y="446.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (63 samples, 0.28%)</title><rect x="545.4" y="419.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="548.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (21 samples, 0.09%)</title><rect x="548.7" y="483.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (21 samples, 0.09%)</title><rect x="548.7" y="467.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (8 samples, 0.04%)</title><rect x="548.7" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (8 samples, 0.04%)</title><rect x="548.7" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="551.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (13 samples, 0.06%)</title><rect x="549.1" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (13 samples, 0.06%)</title><rect x="549.1" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="552.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.08%)</title><rect x="549.8" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.8" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (17 samples, 0.08%)</title><rect x="549.8" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.8" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (17 samples, 0.08%)</title><rect x="549.8" y="451.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="552.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (80 samples, 0.36%)</title><rect x="550.7" y="531.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (14 samples, 0.06%)</title><rect x="550.7" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.04%)</title><rect x="550.9" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (10 samples, 0.04%)</title><rect x="550.9" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (10 samples, 0.04%)</title><rect x="550.9" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (10 samples, 0.04%)</title><rect x="550.9" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (10 samples, 0.04%)</title><rect x="550.9" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="553.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="551.4" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="554.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (56 samples, 0.25%)</title><rect x="551.9" y="515.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="551.9" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="551.9" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 0.23%)</title><rect x="552.2" y="499.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 0.23%)</title><rect x="552.2" y="483.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (34 samples, 0.15%)</title><rect x="552.2" y="467.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="555.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="554.0" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.08%)</title><rect x="554.0" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.08%)</title><rect x="554.0" y="435.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="557.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.handleLocal (15 samples, 0.07%)</title><rect x="554.9" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (15 samples, 0.07%)</title><rect x="554.9" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (15 samples, 0.07%)</title><rect x="554.9" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.04%)</title><rect x="555.2" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.04%)</title><rect x="555.2" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.04%)</title><rect x="555.2" y="547.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="558.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (258 samples, 1.15%)</title><rect x="555.7" y="627.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (258 samples, 1.15%)</title><rect x="555.7" y="611.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (258 samples, 1.15%)</title><rect x="555.7" y="595.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.7" y="606.0"></text>
</g>
<g>
<title>java/net/URL.toString (258 samples, 1.15%)</title><rect x="555.7" y="579.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.7" y="590.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (258 samples, 1.15%)</title><rect x="555.7" y="563.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.7" y="574.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (258 samples, 1.15%)</title><rect x="555.7" y="547.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.7" y="558.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="555.7" y="531.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="558.7" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (20 samples, 0.09%)</title><rect x="557.1" y="531.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="560.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.18%)</title><rect x="558.2" y="531.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="561.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (38 samples, 0.17%)</title><rect x="560.3" y="531.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.3" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (38 samples, 0.17%)</title><rect x="560.3" y="515.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.3" y="526.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.17%)</title><rect x="560.3" y="499.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="563.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (64 samples, 0.28%)</title><rect x="562.3" y="531.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.3" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (64 samples, 0.28%)</title><rect x="562.3" y="515.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.3" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (64 samples, 0.28%)</title><rect x="562.3" y="499.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.28%)</title><rect x="562.3" y="483.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.3" y="494.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.28%)</title><rect x="562.3" y="467.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="565.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (68 samples, 0.30%)</title><rect x="565.6" y="531.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (68 samples, 0.30%)</title><rect x="565.6" y="515.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.11%)</title><rect x="565.6" y="499.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="568.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.19%)</title><rect x="566.9" y="499.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.9" y="510.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.19%)</title><rect x="566.9" y="483.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="569.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (83 samples, 0.37%)</title><rect x="569.2" y="627.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.2" y="638.0"></text>
</g>
<g>
<title>java/net/URL.toString (83 samples, 0.37%)</title><rect x="569.2" y="611.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.2" y="622.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (83 samples, 0.37%)</title><rect x="569.2" y="595.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.2" y="606.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (83 samples, 0.37%)</title><rect x="569.2" y="579.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.2" y="590.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="569.2" y="563.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="572.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="570.1" y="563.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="573.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.06%)</title><rect x="570.4" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.06%)</title><rect x="570.4" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.4" y="558.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="570.4" y="531.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="573.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (19 samples, 0.08%)</title><rect x="571.1" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (19 samples, 0.08%)</title><rect x="571.1" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (19 samples, 0.08%)</title><rect x="571.1" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.08%)</title><rect x="571.1" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.1" y="526.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="571.1" y="499.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="574.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (28 samples, 0.12%)</title><rect x="572.1" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.12%)</title><rect x="572.1" y="547.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="572.1" y="531.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="575.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.08%)</title><rect x="572.6" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.6" y="542.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="572.6" y="515.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="575.6" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="573.7" y="675.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="576.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.08%)</title><rect x="574.0" y="675.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.0" y="686.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="574.0" y="659.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="577.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.03%)</title><rect x="574.4" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (30 samples, 0.13%)</title><rect x="575.0" y="675.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (30 samples, 0.13%)</title><rect x="575.0" y="659.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (30 samples, 0.13%)</title><rect x="575.0" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.of (30 samples, 0.13%)</title><rect x="575.0" y="627.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (19 samples, 0.08%)</title><rect x="575.0" y="611.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.0" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.08%)</title><rect x="575.0" y="595.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (11 samples, 0.05%)</title><rect x="576.0" y="611.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="579.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.fromCompletableFuture (16 samples, 0.07%)</title><rect x="576.6" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (15 samples, 0.07%)</title><rect x="576.6" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (15 samples, 0.07%)</title><rect x="576.6" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (15 samples, 0.07%)</title><rect x="576.6" y="627.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="579.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.responseFuture (186 samples, 0.83%)</title><rect x="577.4" y="675.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (9 samples, 0.04%)</title><rect x="577.4" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 0.04%)</title><rect x="577.4" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (6 samples, 0.03%)</title><rect x="577.4" y="627.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="580.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.collapseFutures (177 samples, 0.79%)</title><rect x="577.9" y="659.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.9" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.04%)</title><rect x="577.9" y="643.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="580.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1401870099.linkToTargetMethod (6 samples, 0.03%)</title><rect x="578.5" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/557383628.invokeStatic (6 samples, 0.03%)</title><rect x="578.5" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.get$Lambda (6 samples, 0.03%)</title><rect x="578.5" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$168 (6 samples, 0.03%)</title><rect x="578.5" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="581.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEach (158 samples, 0.70%)</title><rect x="578.9" y="643.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEachFrom (158 samples, 0.70%)</title><rect x="578.9" y="627.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.accept (158 samples, 0.70%)</title><rect x="578.9" y="611.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$collapseFutures$2 (158 samples, 0.70%)</title><rect x="578.9" y="595.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (37 samples, 0.16%)</title><rect x="578.9" y="579.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (37 samples, 0.16%)</title><rect x="578.9" y="563.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (21 samples, 0.09%)</title><rect x="578.9" y="547.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="581.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="580.1" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="580.1" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="580.1" y="515.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="583.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (27 samples, 0.12%)</title><rect x="580.8" y="579.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (27 samples, 0.12%)</title><rect x="580.8" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (17 samples, 0.08%)</title><rect x="580.8" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="583.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="581.8" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="581.8" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.04%)</title><rect x="581.8" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="584.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (44 samples, 0.20%)</title><rect x="582.2" y="579.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.20%)</title><rect x="582.2" y="563.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.11%)</title><rect x="582.2" y="547.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="585.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="583.5" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (8 samples, 0.04%)</title><rect x="583.5" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="586.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="584.0" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="584.0" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="584.0" y="515.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="587.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.biConsumer (50 samples, 0.22%)</title><rect x="584.5" y="579.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (6 samples, 0.03%)</title><rect x="584.5" y="563.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="587.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1708024697.linkToTargetMethod (22 samples, 0.10%)</title><rect x="584.9" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/156204642.invokeStatic (22 samples, 0.10%)</title><rect x="584.9" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.get$Lambda (22 samples, 0.10%)</title><rect x="584.9" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.9" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$169 (22 samples, 0.10%)</title><rect x="584.9" y="515.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="587.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (22 samples, 0.10%)</title><rect x="586.0" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.10%)</title><rect x="586.0" y="547.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="589.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (314 samples, 1.40%)</title><rect x="587.2" y="675.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.2" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (6 samples, 0.03%)</title><rect x="587.2" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.2" y="670.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (6 samples, 0.03%)</title><rect x="587.2" y="643.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="590.2" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.11%)</title><rect x="587.5" y="659.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.spliterator (8 samples, 0.04%)</title><rect x="587.5" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.5" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (8 samples, 0.04%)</title><rect x="587.5" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.5" y="638.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (8 samples, 0.04%)</title><rect x="587.5" y="611.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="590.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (17 samples, 0.08%)</title><rect x="587.9" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.9" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (17 samples, 0.08%)</title><rect x="587.9" y="627.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="590.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (116 samples, 0.52%)</title><rect x="589.1" y="659.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (106 samples, 0.47%)</title><rect x="589.1" y="643.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (106 samples, 0.47%)</title><rect x="589.1" y="627.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (102 samples, 0.45%)</title><rect x="589.1" y="611.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (74 samples, 0.33%)</title><rect x="589.1" y="595.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (74 samples, 0.33%)</title><rect x="589.1" y="579.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.1" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (12 samples, 0.05%)</title><rect x="589.1" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.1" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (12 samples, 0.05%)</title><rect x="589.1" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.1" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (12 samples, 0.05%)</title><rect x="589.1" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (10 samples, 0.04%)</title><rect x="589.2" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (5 samples, 0.02%)</title><rect x="589.2" y="499.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (5 samples, 0.02%)</title><rect x="589.2" y="483.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="592.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (5 samples, 0.02%)</title><rect x="589.4" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (5 samples, 0.02%)</title><rect x="589.4" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="592.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (33 samples, 0.15%)</title><rect x="589.7" y="563.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.7" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (33 samples, 0.15%)</title><rect x="589.7" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (33 samples, 0.15%)</title><rect x="589.7" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (33 samples, 0.15%)</title><rect x="589.7" y="515.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (25 samples, 0.11%)</title><rect x="589.7" y="499.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (25 samples, 0.11%)</title><rect x="589.7" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (25 samples, 0.11%)</title><rect x="589.7" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.7" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (12 samples, 0.05%)</title><rect x="589.7" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.7" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (12 samples, 0.05%)</title><rect x="589.7" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="592.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (13 samples, 0.06%)</title><rect x="590.3" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.3" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (13 samples, 0.06%)</title><rect x="590.3" y="435.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="593.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (8 samples, 0.04%)</title><rect x="591.0" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.accept (8 samples, 0.04%)</title><rect x="591.0" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.04%)</title><rect x="591.0" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.04%)</title><rect x="591.0" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.04%)</title><rect x="591.0" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.04%)</title><rect x="591.0" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.04%)</title><rect x="591.0" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.04%)</title><rect x="591.0" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="594.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (16 samples, 0.07%)</title><rect x="591.4" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.begin (16 samples, 0.07%)</title><rect x="591.4" y="547.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.4" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (10 samples, 0.04%)</title><rect x="591.5" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.5" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (10 samples, 0.04%)</title><rect x="591.5" y="515.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="594.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (13 samples, 0.06%)</title><rect x="592.3" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (13 samples, 0.06%)</title><rect x="592.3" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (13 samples, 0.06%)</title><rect x="592.3" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (13 samples, 0.06%)</title><rect x="592.3" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (9 samples, 0.04%)</title><rect x="592.3" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/1543974463.accept (9 samples, 0.04%)</title><rect x="592.3" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.04%)</title><rect x="592.3" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.04%)</title><rect x="592.3" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.04%)</title><rect x="592.3" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.04%)</title><rect x="592.3" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.04%)</title><rect x="592.3" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="592.3" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="595.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (28 samples, 0.12%)</title><rect x="592.9" y="595.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (8 samples, 0.04%)</title><rect x="593.1" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (8 samples, 0.04%)</title><rect x="593.1" y="563.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (9 samples, 0.04%)</title><rect x="593.6" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1$1 (9 samples, 0.04%)</title><rect x="593.6" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="596.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$OfRef.opWrapSink (7 samples, 0.03%)</title><rect x="594.0" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$RefSortingSink (7 samples, 0.03%)</title><rect x="594.0" y="563.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="597.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (10 samples, 0.04%)</title><rect x="594.6" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.6" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (10 samples, 0.04%)</title><rect x="594.6" y="627.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="597.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.distinct (11 samples, 0.05%)</title><rect x="595.1" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps.makeRef (11 samples, 0.05%)</title><rect x="595.1" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.1" y="654.0"></text>
</g>
<g>
<title>java.util.stream.DistinctOps$1 (11 samples, 0.05%)</title><rect x="595.1" y="627.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="598.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (16 samples, 0.07%)</title><rect x="595.7" y="659.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (16 samples, 0.07%)</title><rect x="595.7" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.7" y="654.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (16 samples, 0.07%)</title><rect x="595.7" y="627.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="598.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (16 samples, 0.07%)</title><rect x="596.6" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (16 samples, 0.07%)</title><rect x="596.6" y="643.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="599.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (14 samples, 0.06%)</title><rect x="597.4" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (14 samples, 0.06%)</title><rect x="597.4" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.4" y="654.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (14 samples, 0.06%)</title><rect x="597.4" y="627.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (105 samples, 0.47%)</title><rect x="598.1" y="659.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="598.3" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.3" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="598.3" y="627.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="601.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (7 samples, 0.03%)</title><rect x="598.8" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (7 samples, 0.03%)</title><rect x="598.8" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (7 samples, 0.03%)</title><rect x="598.8" y="611.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="601.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (85 samples, 0.38%)</title><rect x="599.2" y="643.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.03%)</title><rect x="599.3" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.3" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="599.3" y="611.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="602.3" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (5 samples, 0.02%)</title><rect x="599.7" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.7" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (5 samples, 0.02%)</title><rect x="599.7" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.7" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (5 samples, 0.02%)</title><rect x="599.7" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.7" y="606.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="599.7" y="579.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="602.7" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (70 samples, 0.31%)</title><rect x="600.0" y="627.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (9 samples, 0.04%)</title><rect x="600.0" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (61 samples, 0.27%)</title><rect x="600.4" y="611.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.4" y="622.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (61 samples, 0.27%)</title><rect x="600.4" y="595.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.4" y="606.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (61 samples, 0.27%)</title><rect x="600.4" y="579.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.4" y="590.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (58 samples, 0.26%)</title><rect x="600.4" y="563.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="574.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (58 samples, 0.26%)</title><rect x="600.4" y="547.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (7 samples, 0.03%)</title><rect x="600.4" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="603.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.04%)</title><rect x="600.9" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (9 samples, 0.04%)</title><rect x="600.9" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (9 samples, 0.04%)</title><rect x="600.9" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (9 samples, 0.04%)</title><rect x="600.9" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.9" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (8 samples, 0.04%)</title><rect x="600.9" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="603.9" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (40 samples, 0.18%)</title><rect x="601.4" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (40 samples, 0.18%)</title><rect x="601.4" y="515.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor1.newInstance (40 samples, 0.18%)</title><rect x="601.4" y="499.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.4" y="510.0"></text>
</g>
<g>
<title>sun.security.provider.MD5 (8 samples, 0.04%)</title><rect x="601.4" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="604.4" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (32 samples, 0.14%)</title><rect x="601.8" y="483.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.8" y="494.0"></text>
</g>
<g>
<title>int[] (15 samples, 0.07%)</title><rect x="601.8" y="467.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="604.8" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (16 samples, 0.07%)</title><rect x="602.7" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.7" y="478.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="602.7" y="451.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="605.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.keyByteBuffer (33 samples, 0.15%)</title><rect x="603.6" y="675.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.08%)</title><rect x="603.6" y="659.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.08%)</title><rect x="603.6" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.08%)</title><rect x="603.6" y="627.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="606.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.getBytesFromKey (15 samples, 0.07%)</title><rect x="604.6" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.07%)</title><rect x="604.6" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.07%)</title><rect x="604.6" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.07%)</title><rect x="604.6" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.07%)</title><rect x="604.6" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.6" y="606.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="604.6" y="579.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="607.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$349/1174152785.submit (2,062 samples, 9.18%)</title><rect x="605.4" y="723.0" width="108.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.4" y="734.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.lambda$entity$0 (2,062 samples, 9.18%)</title><rect x="605.4" y="707.0" width="108.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.4" y="718.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.get (2,062 samples, 9.18%)</title><rect x="605.4" y="691.0" width="108.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.4" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="605.5" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="605.5" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$354/1976306945.get$Lambda (5 samples, 0.02%)</title><rect x="605.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.5" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$354 (5 samples, 0.02%)</title><rect x="605.5" y="627.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="608.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,016 samples, 4.52%)</title><rect x="605.8" y="675.0" width="53.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.8" y="686.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$354/1976306945.accept (1,016 samples, 4.52%)</title><rect x="605.8" y="659.0" width="53.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.8" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$5 (1,016 samples, 4.52%)</title><rect x="605.8" y="643.0" width="53.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.8" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="605.8" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="605.8" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$356/1103053497.get$Lambda (6 samples, 0.03%)</title><rect x="605.8" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.service.EntityService$$Lambda$356 (6 samples, 0.03%)</title><rect x="605.8" y="579.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="608.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (5 samples, 0.02%)</title><rect x="606.1" y="627.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (5 samples, 0.02%)</title><rect x="606.3" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (5 samples, 0.02%)</title><rect x="606.3" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedQueue$Node (5 samples, 0.02%)</title><rect x="606.3" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="609.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.get (757 samples, 3.37%)</title><rect x="606.6" y="627.0" width="39.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.6" y="638.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (26 samples, 0.12%)</title><rect x="606.6" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (26 samples, 0.12%)</title><rect x="606.6" y="595.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (12 samples, 0.05%)</title><rect x="606.6" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="609.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="607.3" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="607.3" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="607.3" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="610.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (464 samples, 2.06%)</title><rect x="608.0" y="611.0" width="24.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (464 samples, 2.06%)</title><rect x="608.0" y="595.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.0" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (464 samples, 2.06%)</title><rect x="608.0" y="579.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.0" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (464 samples, 2.06%)</title><rect x="608.0" y="563.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.07%)</title><rect x="608.2" y="547.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.07%)</title><rect x="608.2" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.04%)</title><rect x="608.2" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="611.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="608.7" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="608.7" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="608.7" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="611.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (17 samples, 0.08%)</title><rect x="609.1" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.08%)</title><rect x="609.1" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.03%)</title><rect x="609.1" y="515.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="612.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="609.4" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="609.4" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="609.4" y="483.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="612.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (11 samples, 0.05%)</title><rect x="610.0" y="547.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="613.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (18 samples, 0.08%)</title><rect x="610.5" y="547.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="613.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (235 samples, 1.05%)</title><rect x="611.5" y="547.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (24 samples, 0.11%)</title><rect x="611.5" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.5" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (21 samples, 0.09%)</title><rect x="611.5" y="515.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.5" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (7 samples, 0.03%)</title><rect x="611.5" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.5" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (7 samples, 0.03%)</title><rect x="611.5" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="614.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="611.8" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.8" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="611.8" y="483.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="614.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (113 samples, 0.50%)</title><rect x="612.7" y="531.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (113 samples, 0.50%)</title><rect x="612.7" y="515.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (9 samples, 0.04%)</title><rect x="612.7" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="615.7" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="613.2" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="616.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (15 samples, 0.07%)</title><rect x="613.6" y="499.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="616.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="614.5" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="614.5" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.get$Lambda (6 samples, 0.03%)</title><rect x="614.5" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$137 (6 samples, 0.03%)</title><rect x="614.5" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="617.5" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (55 samples, 0.24%)</title><rect x="614.8" y="499.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (55 samples, 0.24%)</title><rect x="614.8" y="483.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (55 samples, 0.24%)</title><rect x="614.8" y="467.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (55 samples, 0.24%)</title><rect x="614.8" y="451.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (23 samples, 0.10%)</title><rect x="614.8" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (11 samples, 0.05%)</title><rect x="614.8" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.05%)</title><rect x="614.8" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.05%)</title><rect x="614.8" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.05%)</title><rect x="614.8" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.05%)</title><rect x="614.8" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.05%)</title><rect x="614.8" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.05%)</title><rect x="614.8" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.8" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.05%)</title><rect x="614.8" y="307.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="617.8" y="318.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (12 samples, 0.05%)</title><rect x="615.4" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.4" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (12 samples, 0.05%)</title><rect x="615.4" y="403.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="618.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (18 samples, 0.08%)</title><rect x="616.3" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (18 samples, 0.08%)</title><rect x="616.3" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (10 samples, 0.04%)</title><rect x="616.3" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="616.3" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.04%)</title><rect x="616.3" y="371.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="619.3" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.04%)</title><rect x="616.8" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.8" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.04%)</title><rect x="616.8" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="619.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.04%)</title><rect x="617.2" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.04%)</title><rect x="617.2" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="620.2" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (5 samples, 0.02%)</title><rect x="617.7" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.7" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (5 samples, 0.02%)</title><rect x="617.7" y="483.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="620.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (13 samples, 0.06%)</title><rect x="618.0" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.06%)</title><rect x="618.0" y="483.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="621.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (5 samples, 0.02%)</title><rect x="618.7" y="531.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="621.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (73 samples, 0.32%)</title><rect x="618.9" y="531.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.9" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (73 samples, 0.32%)</title><rect x="618.9" y="515.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (64 samples, 0.28%)</title><rect x="618.9" y="499.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.9" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (64 samples, 0.28%)</title><rect x="618.9" y="483.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.9" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (64 samples, 0.28%)</title><rect x="618.9" y="467.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.07%)</title><rect x="618.9" y="451.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="621.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="619.7" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.7" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.06%)</title><rect x="619.7" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.7" y="446.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="619.7" y="419.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="622.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (35 samples, 0.16%)</title><rect x="620.5" y="451.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.16%)</title><rect x="620.5" y="435.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.07%)</title><rect x="620.5" y="419.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.09%)</title><rect x="621.2" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="430.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.09%)</title><rect x="621.2" y="403.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="624.2" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (9 samples, 0.04%)</title><rect x="622.3" y="499.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="625.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (8 samples, 0.04%)</title><rect x="622.8" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.04%)</title><rect x="622.8" y="515.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="625.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.05%)</title><rect x="623.2" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.02%)</title><rect x="623.6" y="515.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.02%)</title><rect x="623.6" y="499.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="626.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (100 samples, 0.45%)</title><rect x="623.8" y="547.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (22 samples, 0.10%)</title><rect x="623.9" y="531.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (73 samples, 0.32%)</title><rect x="625.2" y="531.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (73 samples, 0.32%)</title><rect x="625.2" y="515.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Class[] (5 samples, 0.02%)</title><rect x="625.2" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="628.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.04%)</title><rect x="625.5" y="499.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="628.5" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (6 samples, 0.03%)</title><rect x="625.9" y="499.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (35 samples, 0.16%)</title><rect x="626.2" y="499.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (35 samples, 0.16%)</title><rect x="626.2" y="483.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (35 samples, 0.16%)</title><rect x="626.2" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.2" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (35 samples, 0.16%)</title><rect x="626.2" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.2" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (35 samples, 0.16%)</title><rect x="626.2" y="435.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="629.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (12 samples, 0.05%)</title><rect x="628.1" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (12 samples, 0.05%)</title><rect x="628.1" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (5 samples, 0.02%)</title><rect x="628.1" y="467.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (5 samples, 0.02%)</title><rect x="628.1" y="451.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="631.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (7 samples, 0.03%)</title><rect x="628.3" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (7 samples, 0.03%)</title><rect x="628.3" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="631.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.03%)</title><rect x="628.7" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.03%)</title><rect x="628.7" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.03%)</title><rect x="628.7" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="631.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (63 samples, 0.28%)</title><rect x="629.1" y="547.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.08%)</title><rect x="629.1" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (9 samples, 0.04%)</title><rect x="629.1" y="515.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="632.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.04%)</title><rect x="629.5" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (8 samples, 0.04%)</title><rect x="629.5" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (8 samples, 0.04%)</title><rect x="629.5" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (8 samples, 0.04%)</title><rect x="629.5" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (8 samples, 0.04%)</title><rect x="629.5" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="632.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.04%)</title><rect x="630.0" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="633.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (38 samples, 0.17%)</title><rect x="630.4" y="531.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="630.4" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="630.4" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/9819169.get$Lambda (5 samples, 0.02%)</title><rect x="630.4" y="483.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$152 (5 samples, 0.02%)</title><rect x="630.4" y="467.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="633.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1622813550.get$Lambda (5 samples, 0.02%)</title><rect x="630.6" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$158 (5 samples, 0.02%)</title><rect x="630.6" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="633.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (28 samples, 0.12%)</title><rect x="630.9" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (28 samples, 0.12%)</title><rect x="630.9" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (19 samples, 0.08%)</title><rect x="630.9" y="483.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="633.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="631.9" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="631.9" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="631.9" y="451.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="634.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (100 samples, 0.45%)</title><rect x="632.4" y="611.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (9 samples, 0.04%)</title><rect x="632.4" y="595.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="635.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (91 samples, 0.40%)</title><rect x="632.8" y="595.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (91 samples, 0.40%)</title><rect x="632.8" y="579.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (91 samples, 0.40%)</title><rect x="632.8" y="563.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.8" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.05%)</title><rect x="633.0" y="547.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="636.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.06%)</title><rect x="633.6" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="636.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.04%)</title><rect x="634.7" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.7" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.04%)</title><rect x="634.7" y="531.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="637.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (38 samples, 0.17%)</title><rect x="635.2" y="547.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$137/1564001392.accept (38 samples, 0.17%)</title><rect x="635.2" y="531.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (38 samples, 0.17%)</title><rect x="635.2" y="515.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="635.2" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="635.2" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.get$Lambda (7 samples, 0.03%)</title><rect x="635.2" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.2" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$145 (7 samples, 0.03%)</title><rect x="635.2" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="638.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.04%)</title><rect x="635.5" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$145/1493650191.accept (9 samples, 0.04%)</title><rect x="635.5" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.04%)</title><rect x="635.5" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.04%)</title><rect x="635.5" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.04%)</title><rect x="635.5" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.04%)</title><rect x="635.5" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.04%)</title><rect x="635.5" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.04%)</title><rect x="635.5" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="635.5" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="638.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (14 samples, 0.06%)</title><rect x="636.0" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (14 samples, 0.06%)</title><rect x="636.0" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (9 samples, 0.04%)</title><rect x="636.0" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.04%)</title><rect x="636.0" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="636.0" y="435.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="639.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.02%)</title><rect x="636.5" y="467.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.02%)</title><rect x="636.5" y="451.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="639.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.04%)</title><rect x="636.7" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.04%)</title><rect x="636.7" y="483.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="639.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.04%)</title><rect x="637.2" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.04%)</title><rect x="637.2" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="640.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl.builder (167 samples, 0.74%)</title><rect x="637.6" y="611.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.09%)</title><rect x="637.6" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (20 samples, 0.09%)</title><rect x="637.6" y="579.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/452805835.invoke (20 samples, 0.09%)</title><rect x="637.6" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.09%)</title><rect x="637.6" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.07%)</title><rect x="637.8" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.07%)</title><rect x="637.8" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.8" y="526.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="637.8" y="499.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="640.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI.create (100 samples, 0.45%)</title><rect x="638.7" y="595.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.7" y="606.0"></text>
</g>
<g>
<title>java.net.URI (11 samples, 0.05%)</title><rect x="638.7" y="579.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="641.7" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (89 samples, 0.40%)</title><rect x="639.3" y="579.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.3" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (9 samples, 0.04%)</title><rect x="639.3" y="563.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="642.3" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (80 samples, 0.36%)</title><rect x="639.7" y="563.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.07%)</title><rect x="639.7" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.07%)</title><rect x="639.7" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="639.7" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="642.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.04%)</title><rect x="640.1" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.1" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="640.1" y="499.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="643.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (65 samples, 0.29%)</title><rect x="640.5" y="547.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.16%)</title><rect x="640.5" y="531.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.16%)</title><rect x="640.5" y="515.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="640.5" y="499.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="643.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="641.2" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.2" y="510.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="641.2" y="483.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="644.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (28 samples, 0.12%)</title><rect x="642.5" y="531.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.05%)</title><rect x="642.5" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.05%)</title><rect x="642.5" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.04%)</title><rect x="642.6" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.6" y="494.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="642.6" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="645.6" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (16 samples, 0.07%)</title><rect x="643.1" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.1" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (16 samples, 0.07%)</title><rect x="643.1" y="499.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.07%)</title><rect x="643.1" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.07%)</title><rect x="643.1" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.04%)</title><rect x="643.1" y="451.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="646.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.04%)</title><rect x="643.5" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="462.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="643.5" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="646.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (26 samples, 0.12%)</title><rect x="643.9" y="595.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (11 samples, 0.05%)</title><rect x="643.9" y="579.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="646.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (15 samples, 0.07%)</title><rect x="644.5" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (11 samples, 0.05%)</title><rect x="644.7" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.05%)</title><rect x="644.7" y="547.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="647.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (20 samples, 0.09%)</title><rect x="645.3" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (20 samples, 0.09%)</title><rect x="645.3" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (20 samples, 0.09%)</title><rect x="645.3" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.3" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (20 samples, 0.09%)</title><rect x="645.3" y="547.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.05%)</title><rect x="645.3" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.05%)</title><rect x="645.3" y="515.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="648.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$135/1156412280.apply (9 samples, 0.04%)</title><rect x="645.9" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (9 samples, 0.04%)</title><rect x="645.9" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.9" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="645.9" y="499.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="648.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromise.&lt;init&gt; (19 samples, 0.08%)</title><rect x="646.4" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/promise/CompletablePromiseContext.schedule (18 samples, 0.08%)</title><rect x="646.4" y="611.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedScheduledExecutorService.schedule (18 samples, 0.08%)</title><rect x="646.4" y="595.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (18 samples, 0.08%)</title><rect x="646.4" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (13 samples, 0.06%)</title><rect x="646.4" y="563.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="649.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (5 samples, 0.02%)</title><rect x="647.1" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (5 samples, 0.02%)</title><rect x="647.1" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (5 samples, 0.02%)</title><rect x="647.1" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (5 samples, 0.02%)</title><rect x="647.1" y="515.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="650.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (161 samples, 0.72%)</title><rect x="647.4" y="627.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.isMe (161 samples, 0.72%)</title><rect x="647.4" y="611.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (161 samples, 0.72%)</title><rect x="647.4" y="595.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>java/net/URL.toString (161 samples, 0.72%)</title><rect x="647.4" y="579.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.4" y="590.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (161 samples, 0.72%)</title><rect x="647.4" y="563.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.4" y="574.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (161 samples, 0.72%)</title><rect x="647.4" y="547.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.4" y="558.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="647.4" y="531.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="650.4" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.08%)</title><rect x="649.1" y="531.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="652.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.11%)</title><rect x="650.0" y="531.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="653.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.10%)</title><rect x="651.2" y="531.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.2" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.10%)</title><rect x="651.2" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.2" y="526.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="651.2" y="499.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (25 samples, 0.11%)</title><rect x="652.4" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (25 samples, 0.11%)</title><rect x="652.4" y="515.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.4" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (25 samples, 0.11%)</title><rect x="652.4" y="499.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.11%)</title><rect x="652.4" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.4" y="494.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="652.4" y="467.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="655.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (40 samples, 0.18%)</title><rect x="653.7" y="531.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.18%)</title><rect x="653.7" y="515.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.06%)</title><rect x="653.7" y="499.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="656.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.12%)</title><rect x="654.4" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.4" y="510.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.12%)</title><rect x="654.4" y="483.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="657.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/node/ServiceNode.key (62 samples, 0.28%)</title><rect x="655.8" y="627.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.8" y="638.0"></text>
</g>
<g>
<title>java/net/URL.toString (62 samples, 0.28%)</title><rect x="655.8" y="611.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.8" y="622.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (62 samples, 0.28%)</title><rect x="655.8" y="595.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.8" y="606.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (62 samples, 0.28%)</title><rect x="655.8" y="579.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.8" y="590.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="655.8" y="563.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="658.8" y="574.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.05%)</title><rect x="656.4" y="563.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="659.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="657.0" y="563.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="660.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.04%)</title><rect x="657.3" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.04%)</title><rect x="657.3" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.3" y="558.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="657.3" y="531.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="660.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.05%)</title><rect x="657.7" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.05%)</title><rect x="657.7" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.7" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.05%)</title><rect x="657.7" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="657.7" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.7" y="526.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="657.7" y="499.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (14 samples, 0.06%)</title><rect x="658.4" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.06%)</title><rect x="658.4" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.04%)</title><rect x="658.6" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.6" y="542.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="658.6" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="661.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (10 samples, 0.04%)</title><rect x="659.1" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10 samples, 0.04%)</title><rect x="659.1" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (5 samples, 0.02%)</title><rect x="659.1" y="643.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="662.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="659.4" y="643.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (5 samples, 0.02%)</title><rect x="659.4" y="627.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="662.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.latestIterator (371 samples, 1.65%)</title><rect x="659.7" y="675.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.latestIter (371 samples, 1.65%)</title><rect x="659.7" y="659.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.collapseEquals (118 samples, 0.53%)</title><rect x="659.7" y="643.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (50 samples, 0.22%)</title><rect x="659.7" y="627.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.7" y="638.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (9 samples, 0.04%)</title><rect x="659.7" y="611.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="662.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (41 samples, 0.18%)</title><rect x="660.2" y="611.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.2" y="622.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (12 samples, 0.05%)</title><rect x="660.2" y="595.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="663.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.04%)</title><rect x="660.8" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.8" y="606.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.04%)</title><rect x="660.8" y="579.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="663.8" y="590.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (15 samples, 0.07%)</title><rect x="661.3" y="595.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="664.3" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.03%)</title><rect x="662.0" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.0" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="662.0" y="579.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="665.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (68 samples, 0.30%)</title><rect x="662.4" y="627.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.03%)</title><rect x="662.4" y="611.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="665.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (61 samples, 0.27%)</title><rect x="662.7" y="611.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.27%)</title><rect x="662.7" y="595.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (61 samples, 0.27%)</title><rect x="662.7" y="579.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (61 samples, 0.27%)</title><rect x="662.7" y="563.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.08%)</title><rect x="662.7" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (19 samples, 0.08%)</title><rect x="662.7" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (19 samples, 0.08%)</title><rect x="662.7" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (15 samples, 0.07%)</title><rect x="662.7" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (15 samples, 0.07%)</title><rect x="662.7" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (15 samples, 0.07%)</title><rect x="662.7" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (15 samples, 0.07%)</title><rect x="662.7" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.7" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (15 samples, 0.07%)</title><rect x="662.7" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="665.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (42 samples, 0.19%)</title><rect x="663.7" y="547.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (42 samples, 0.19%)</title><rect x="663.7" y="531.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.19%)</title><rect x="663.7" y="515.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.19%)</title><rect x="663.7" y="499.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="666.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.compose (253 samples, 1.13%)</title><rect x="665.9" y="643.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.9" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.05%)</title><rect x="665.9" y="627.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="668.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.05%)</title><rect x="666.5" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.05%)</title><rect x="666.5" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.05%)</title><rect x="666.5" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.5" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.05%)</title><rect x="666.5" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.05%)</title><rect x="666.5" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.05%)</title><rect x="666.5" y="547.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="669.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.iterator (230 samples, 1.02%)</title><rect x="667.1" y="627.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (68 samples, 0.30%)</title><rect x="667.1" y="611.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.1" y="622.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (12 samples, 0.05%)</title><rect x="667.1" y="595.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="670.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (56 samples, 0.25%)</title><rect x="667.8" y="595.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.8" y="606.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (9 samples, 0.04%)</title><rect x="667.8" y="579.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="670.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (9 samples, 0.04%)</title><rect x="668.2" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.2" y="590.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (9 samples, 0.04%)</title><rect x="668.2" y="563.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="671.2" y="574.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (26 samples, 0.12%)</title><rect x="668.7" y="579.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="671.7" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (12 samples, 0.05%)</title><rect x="670.1" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.05%)</title><rect x="670.1" y="563.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="673.1" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.09%)</title><rect x="670.7" y="611.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="673.7" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (29 samples, 0.13%)</title><rect x="671.8" y="611.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.8" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (9 samples, 0.04%)</title><rect x="671.8" y="595.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="674.8" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (20 samples, 0.09%)</title><rect x="672.2" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (20 samples, 0.09%)</title><rect x="672.2" y="579.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (20 samples, 0.09%)</title><rect x="672.2" y="563.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="675.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.04%)</title><rect x="673.3" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="673.3" y="595.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="676.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (33 samples, 0.15%)</title><rect x="673.8" y="611.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (12 samples, 0.05%)</title><rect x="673.8" y="595.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="676.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.09%)</title><rect x="674.4" y="595.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.09%)</title><rect x="674.4" y="579.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (21 samples, 0.09%)</title><rect x="674.4" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.09%)</title><rect x="674.4" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (14 samples, 0.06%)</title><rect x="674.4" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (14 samples, 0.06%)</title><rect x="674.4" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (14 samples, 0.06%)</title><rect x="674.4" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (14 samples, 0.06%)</title><rect x="674.4" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.4" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (14 samples, 0.06%)</title><rect x="674.4" y="467.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="677.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.03%)</title><rect x="675.1" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.03%)</title><rect x="675.1" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="675.1" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="675.1" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.1" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="675.1" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="678.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.iterator (71 samples, 0.32%)</title><rect x="675.5" y="611.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (9 samples, 0.04%)</title><rect x="675.5" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.5" y="606.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (9 samples, 0.04%)</title><rect x="675.5" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="678.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="676.0" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="676.0" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.get$Lambda (6 samples, 0.03%)</title><rect x="676.0" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.0" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.table.MemTable$$Lambda$364 (6 samples, 0.03%)</title><rect x="676.0" y="547.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="679.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (18 samples, 0.08%)</title><rect x="676.3" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.3" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (11 samples, 0.05%)</title><rect x="676.3" y="579.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="679.3" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (7 samples, 0.03%)</title><rect x="676.9" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (7 samples, 0.03%)</title><rect x="676.9" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (7 samples, 0.03%)</title><rect x="676.9" y="547.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="679.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (11 samples, 0.05%)</title><rect x="677.2" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.2" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (6 samples, 0.03%)</title><rect x="677.2" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="680.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.02%)</title><rect x="677.5" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.02%)</title><rect x="677.5" y="563.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="680.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (27 samples, 0.12%)</title><rect x="677.8" y="595.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (27 samples, 0.12%)</title><rect x="677.8" y="579.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (27 samples, 0.12%)</title><rect x="677.8" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (27 samples, 0.12%)</title><rect x="677.8" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (27 samples, 0.12%)</title><rect x="677.8" y="531.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="680.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.valueOf (138 samples, 0.61%)</title><rect x="679.2" y="675.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (117 samples, 0.52%)</title><rect x="679.2" y="659.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (77 samples, 0.34%)</title><rect x="679.2" y="643.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (77 samples, 0.34%)</title><rect x="679.2" y="627.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (77 samples, 0.34%)</title><rect x="679.2" y="611.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.13%)</title><rect x="679.2" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (30 samples, 0.13%)</title><rect x="679.2" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (30 samples, 0.13%)</title><rect x="679.2" y="563.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (19 samples, 0.08%)</title><rect x="679.2" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable$$Lambda$364/1047124277.apply (19 samples, 0.08%)</title><rect x="679.2" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.lambda$iterator$0 (19 samples, 0.08%)</title><rect x="679.2" y="515.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.of (19 samples, 0.08%)</title><rect x="679.2" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Cell (19 samples, 0.08%)</title><rect x="679.2" y="483.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="682.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (11 samples, 0.05%)</title><rect x="680.2" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.2" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (11 samples, 0.05%)</title><rect x="680.2" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (11 samples, 0.05%)</title><rect x="680.2" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (11 samples, 0.05%)</title><rect x="680.2" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.2" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (11 samples, 0.05%)</title><rect x="680.2" y="483.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="683.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool$$Lambda$384/447257857.apply (47 samples, 0.21%)</title><rect x="680.8" y="595.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (47 samples, 0.21%)</title><rect x="680.8" y="579.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (47 samples, 0.21%)</title><rect x="680.8" y="563.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.8" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (47 samples, 0.21%)</title><rect x="680.8" y="547.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="683.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$386/790539458.apply (40 samples, 0.18%)</title><rect x="683.3" y="643.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (40 samples, 0.18%)</title><rect x="683.3" y="627.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (40 samples, 0.18%)</title><rect x="683.3" y="611.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.3" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.18%)</title><rect x="683.3" y="595.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="686.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Cell.getKey (21 samples, 0.09%)</title><rect x="685.4" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.09%)</title><rect x="685.4" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.4" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.09%)</title><rect x="685.4" y="627.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="688.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.fromCompletableFuture (13 samples, 0.06%)</title><rect x="686.5" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.5" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (5 samples, 0.02%)</title><rect x="686.5" y="659.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.5" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (5 samples, 0.02%)</title><rect x="686.5" y="643.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.5" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.02%)</title><rect x="686.5" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.5" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.02%)</title><rect x="686.5" y="611.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.5" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.02%)</title><rect x="686.5" y="595.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.5" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.02%)</title><rect x="686.5" y="579.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.5" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.02%)</title><rect x="686.5" y="563.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.5" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.02%)</title><rect x="686.5" y="547.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.5" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.02%)</title><rect x="686.5" y="531.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5 samples, 0.02%)</title><rect x="686.5" y="515.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.02%)</title><rect x="686.5" y="499.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.5" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.02%)</title><rect x="686.5" y="483.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (8 samples, 0.04%)</title><rect x="686.7" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (8 samples, 0.04%)</title><rect x="686.7" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (7 samples, 0.03%)</title><rect x="686.7" y="627.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="689.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.replicas (209 samples, 0.93%)</title><rect x="687.1" y="675.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.07%)</title><rect x="687.3" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.3" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.spliterator (9 samples, 0.04%)</title><rect x="687.3" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.3" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (9 samples, 0.04%)</title><rect x="687.3" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.3" y="638.0"></text>
</g>
<g>
<title>java.util.Spliterators$IteratorSpliterator (9 samples, 0.04%)</title><rect x="687.3" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="690.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.03%)</title><rect x="687.8" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.03%)</title><rect x="687.8" y="627.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="690.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (72 samples, 0.32%)</title><rect x="688.3" y="659.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (67 samples, 0.30%)</title><rect x="688.3" y="643.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (67 samples, 0.30%)</title><rect x="688.3" y="627.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (67 samples, 0.30%)</title><rect x="688.3" y="611.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (52 samples, 0.23%)</title><rect x="688.3" y="595.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (52 samples, 0.23%)</title><rect x="688.3" y="579.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.3" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (12 samples, 0.05%)</title><rect x="688.3" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.3" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (12 samples, 0.05%)</title><rect x="688.3" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.3" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (12 samples, 0.05%)</title><rect x="688.3" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (5 samples, 0.02%)</title><rect x="688.3" y="515.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="691.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (7 samples, 0.03%)</title><rect x="688.6" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (5 samples, 0.02%)</title><rect x="688.7" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (5 samples, 0.02%)</title><rect x="688.7" y="483.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="691.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (23 samples, 0.10%)</title><rect x="688.9" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.9" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (23 samples, 0.10%)</title><rect x="688.9" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (23 samples, 0.10%)</title><rect x="688.9" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.accept (23 samples, 0.10%)</title><rect x="688.9" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (19 samples, 0.08%)</title><rect x="688.9" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (19 samples, 0.08%)</title><rect x="688.9" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (19 samples, 0.08%)</title><rect x="688.9" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.03%)</title><rect x="688.9" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.9" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (6 samples, 0.03%)</title><rect x="688.9" y="435.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="691.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (13 samples, 0.06%)</title><rect x="689.2" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.2" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (13 samples, 0.06%)</title><rect x="689.2" y="435.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="692.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (7 samples, 0.03%)</title><rect x="690.1" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.begin (7 samples, 0.03%)</title><rect x="690.1" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (10 samples, 0.04%)</title><rect x="690.5" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps$1$2.end (10 samples, 0.04%)</title><rect x="690.5" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (10 samples, 0.04%)</title><rect x="690.5" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$RefSortingSink.end (10 samples, 0.04%)</title><rect x="690.5" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (7 samples, 0.03%)</title><rect x="690.5" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/1543974463.accept (7 samples, 0.03%)</title><rect x="690.5" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.03%)</title><rect x="690.5" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.03%)</title><rect x="690.5" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.03%)</title><rect x="690.5" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.03%)</title><rect x="690.5" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.03%)</title><rect x="690.5" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="690.5" y="387.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="693.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (15 samples, 0.07%)</title><rect x="691.0" y="595.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.03%)</title><rect x="691.1" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.03%)</title><rect x="691.1" y="563.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="694.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (6 samples, 0.03%)</title><rect x="691.4" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1$1 (6 samples, 0.03%)</title><rect x="691.4" y="563.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="694.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (5 samples, 0.02%)</title><rect x="691.8" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (5 samples, 0.02%)</title><rect x="691.8" y="627.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="694.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.distinct (8 samples, 0.04%)</title><rect x="692.1" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/DistinctOps.makeRef (8 samples, 0.04%)</title><rect x="692.1" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="654.0"></text>
</g>
<g>
<title>java.util.stream.DistinctOps$1 (8 samples, 0.04%)</title><rect x="692.1" y="627.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="695.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (9 samples, 0.04%)</title><rect x="692.5" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (9 samples, 0.04%)</title><rect x="692.5" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (9 samples, 0.04%)</title><rect x="692.5" y="627.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="695.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.04%)</title><rect x="693.0" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.04%)</title><rect x="693.0" y="643.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.sorted (10 samples, 0.04%)</title><rect x="693.4" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps.makeRef (10 samples, 0.04%)</title><rect x="693.4" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.4" y="654.0"></text>
</g>
<g>
<title>java.util.stream.SortedOps$OfRef (10 samples, 0.04%)</title><rect x="693.4" y="627.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="696.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology.tailMap (80 samples, 0.36%)</title><rect x="693.9" y="659.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (12 samples, 0.05%)</title><rect x="694.1" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (12 samples, 0.05%)</title><rect x="694.1" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (12 samples, 0.05%)</title><rect x="694.1" y="611.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="697.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/topology/ConsistentHashTopology$MD5Hash.hash (65 samples, 0.29%)</title><rect x="694.7" y="643.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="694.8" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.8" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="694.8" y="611.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="697.8" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (7 samples, 0.03%)</title><rect x="695.1" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.1" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (7 samples, 0.03%)</title><rect x="695.1" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.1" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (7 samples, 0.03%)</title><rect x="695.1" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.1" y="606.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="695.1" y="579.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="698.1" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (50 samples, 0.22%)</title><rect x="695.5" y="627.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.5" y="638.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (46 samples, 0.20%)</title><rect x="695.7" y="611.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.7" y="622.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (44 samples, 0.20%)</title><rect x="695.8" y="595.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.8" y="606.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (44 samples, 0.20%)</title><rect x="695.8" y="579.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="590.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (41 samples, 0.18%)</title><rect x="695.8" y="563.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.8" y="574.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (41 samples, 0.18%)</title><rect x="695.8" y="547.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (7 samples, 0.03%)</title><rect x="696.0" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (7 samples, 0.03%)</title><rect x="696.0" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (7 samples, 0.03%)</title><rect x="696.0" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.0" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (7 samples, 0.03%)</title><rect x="696.0" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.0" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (7 samples, 0.03%)</title><rect x="696.0" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="699.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (31 samples, 0.14%)</title><rect x="696.3" y="531.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (31 samples, 0.14%)</title><rect x="696.3" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor1.newInstance (31 samples, 0.14%)</title><rect x="696.3" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.3" y="510.0"></text>
</g>
<g>
<title>sun.security.provider.MD5 (7 samples, 0.03%)</title><rect x="696.3" y="483.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="699.3" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (24 samples, 0.11%)</title><rect x="696.7" y="483.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.7" y="494.0"></text>
</g>
<g>
<title>int[] (12 samples, 0.05%)</title><rect x="696.7" y="467.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="699.7" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (12 samples, 0.05%)</title><rect x="697.3" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.3" y="478.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="697.3" y="451.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="700.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.keyByteBuffer (71 samples, 0.32%)</title><rect x="698.1" y="675.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.10%)</title><rect x="698.1" y="659.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.10%)</title><rect x="698.1" y="643.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.10%)</title><rect x="698.1" y="627.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="701.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.getBytesFromKey (48 samples, 0.21%)</title><rect x="699.3" y="659.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (48 samples, 0.21%)</title><rect x="699.3" y="643.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (48 samples, 0.21%)</title><rect x="699.3" y="627.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (48 samples, 0.21%)</title><rect x="699.3" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.21%)</title><rect x="699.3" y="595.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.3" y="606.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.21%)</title><rect x="699.3" y="579.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="702.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.collapseFutures (127 samples, 0.57%)</title><rect x="701.8" y="675.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.8" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="701.8" y="659.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="704.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1401870099.linkToTargetMethod (5 samples, 0.02%)</title><rect x="702.3" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/557383628.invokeStatic (5 samples, 0.02%)</title><rect x="702.3" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.get$Lambda (5 samples, 0.02%)</title><rect x="702.3" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$168 (5 samples, 0.02%)</title><rect x="702.3" y="611.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEach (113 samples, 0.50%)</title><rect x="702.6" y="659.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.forEachFrom (113 samples, 0.50%)</title><rect x="702.6" y="643.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$168/674464149.accept (113 samples, 0.50%)</title><rect x="702.6" y="627.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$collapseFutures$2 (113 samples, 0.50%)</title><rect x="702.6" y="611.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (30 samples, 0.13%)</title><rect x="702.6" y="595.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (30 samples, 0.13%)</title><rect x="702.6" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (20 samples, 0.09%)</title><rect x="702.6" y="563.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="705.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="703.7" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="703.7" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.04%)</title><rect x="703.7" y="531.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="706.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (23 samples, 0.10%)</title><rect x="704.2" y="595.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (23 samples, 0.10%)</title><rect x="704.2" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (12 samples, 0.05%)</title><rect x="704.2" y="563.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="707.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="705.0" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="705.0" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="705.0" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="708.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (25 samples, 0.11%)</title><rect x="705.4" y="595.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (25 samples, 0.11%)</title><rect x="705.4" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.08%)</title><rect x="705.4" y="563.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="708.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="706.4" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="706.4" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.02%)</title><rect x="706.4" y="531.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="709.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.biConsumer (35 samples, 0.16%)</title><rect x="706.7" y="595.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (10 samples, 0.04%)</title><rect x="706.7" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="709.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1708024697.linkToTargetMethod (13 samples, 0.06%)</title><rect x="707.2" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/156204642.invokeStatic (13 samples, 0.06%)</title><rect x="707.2" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.get$Lambda (13 samples, 0.06%)</title><rect x="707.2" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.2" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FutureUtils$$Lambda$169 (13 samples, 0.06%)</title><rect x="707.2" y="531.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="710.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (12 samples, 0.05%)</title><rect x="707.9" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12 samples, 0.05%)</title><rect x="707.9" y="563.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="710.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.from (98 samples, 0.44%)</title><rect x="708.5" y="675.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (38 samples, 0.17%)</title><rect x="708.5" y="659.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2136217347.invoke (38 samples, 0.17%)</title><rect x="708.5" y="643.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.17%)</title><rect x="708.5" y="627.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.10%)</title><rect x="708.5" y="611.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="708.5" y="595.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="711.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.07%)</title><rect x="709.7" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.07%)</title><rect x="709.7" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.7" y="606.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="709.7" y="579.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="712.7" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.04%)</title><rect x="710.5" y="659.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="713.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (39 samples, 0.17%)</title><rect x="711.0" y="659.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.0" y="670.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="711.0" y="643.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="714.0" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.09%)</title><rect x="711.5" y="643.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="714.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="712.6" y="643.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="715.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.body (11 samples, 0.05%)</title><rect x="713.1" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.1" y="670.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="713.1" y="643.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="716.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (220 samples, 0.98%)</title><rect x="713.7" y="723.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (220 samples, 0.98%)</title><rect x="713.7" y="707.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (177 samples, 0.79%)</title><rect x="713.7" y="691.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (132 samples, 0.59%)</title><rect x="713.7" y="675.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (132 samples, 0.59%)</title><rect x="713.7" y="659.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.7" y="670.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.57%)</title><rect x="713.7" y="643.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="716.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 0.20%)</title><rect x="720.6" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.6" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.20%)</title><rect x="720.6" y="659.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="723.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (43 samples, 0.19%)</title><rect x="723.0" y="691.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.19%)</title><rect x="723.0" y="675.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.19%)</title><rect x="723.0" y="659.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.06%)</title><rect x="723.0" y="643.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="726.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.13%)</title><rect x="723.6" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.6" y="654.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="723.6" y="627.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="726.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,279 samples, 5.69%)</title><rect x="725.2" y="803.0" width="67.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.2" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,279 samples, 5.69%)</title><rect x="725.2" y="787.0" width="67.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.2" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,277 samples, 5.68%)</title><rect x="725.3" y="771.0" width="67.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.3" y="782.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,277 samples, 5.68%)</title><rect x="725.3" y="755.0" width="67.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.3" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,277 samples, 5.68%)</title><rect x="725.3" y="739.0" width="67.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.3" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,277 samples, 5.68%)</title><rect x="725.3" y="723.0" width="67.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.3" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,053 samples, 4.69%)</title><rect x="725.3" y="707.0" width="55.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.3" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,053 samples, 4.69%)</title><rect x="725.3" y="691.0" width="55.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.3" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$175/1215300405.apply (32 samples, 0.14%)</title><rect x="725.3" y="675.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$responseFuture$7 (32 samples, 0.14%)</title><rect x="725.3" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.createResponse (32 samples, 0.14%)</title><rect x="725.3" y="643.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.3" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.05%)</title><rect x="725.3" y="627.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="728.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.09%)</title><rect x="725.9" y="627.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.9" y="638.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="725.9" y="611.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="728.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.03%)</title><rect x="726.5" y="611.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="729.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService$$Lambda$376/824065107.apply (1,021 samples, 4.54%)</title><rect x="727.0" y="675.0" width="53.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.0" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/service/EntityService.lambda$get$6 (1,021 samples, 4.54%)</title><rect x="727.0" y="659.0" width="53.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.0" y="670.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (209 samples, 0.93%)</title><rect x="727.0" y="643.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.0" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (209 samples, 0.93%)</title><rect x="727.0" y="627.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.0" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (209 samples, 0.93%)</title><rect x="727.0" y="611.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.0" y="622.0"></text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (19 samples, 0.08%)</title><rect x="727.0" y="595.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="730.0" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (189 samples, 0.84%)</title><rect x="728.0" y="595.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.0" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (189 samples, 0.84%)</title><rect x="728.0" y="579.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.0" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (189 samples, 0.84%)</title><rect x="728.0" y="563.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.0" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (189 samples, 0.84%)</title><rect x="728.0" y="547.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (189 samples, 0.84%)</title><rect x="728.0" y="531.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.0" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (189 samples, 0.84%)</title><rect x="728.0" y="515.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.0" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (187 samples, 0.83%)</title><rect x="728.1" y="499.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.1" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (160 samples, 0.71%)</title><rect x="728.1" y="483.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.1" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (160 samples, 0.71%)</title><rect x="728.1" y="467.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (15 samples, 0.07%)</title><rect x="728.1" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (15 samples, 0.07%)</title><rect x="728.1" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (13 samples, 0.06%)</title><rect x="728.1" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (5 samples, 0.02%)</title><rect x="728.1" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (5 samples, 0.02%)</title><rect x="728.1" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (5 samples, 0.02%)</title><rect x="728.1" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (8 samples, 0.04%)</title><rect x="728.4" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (8 samples, 0.04%)</title><rect x="728.4" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (8 samples, 0.04%)</title><rect x="728.4" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (7 samples, 0.03%)</title><rect x="728.4" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.02%)</title><rect x="728.5" y="339.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.02%)</title><rect x="728.5" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.5" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.02%)</title><rect x="728.5" y="307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.02%)</title><rect x="728.5" y="291.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.5" y="302.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="728.5" y="275.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="731.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (14 samples, 0.06%)</title><rect x="728.9" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.9" y="462.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (14 samples, 0.06%)</title><rect x="728.9" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.9" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (5 samples, 0.02%)</title><rect x="728.9" y="419.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="731.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (6 samples, 0.03%)</title><rect x="729.3" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="729.3" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.02%)</title><rect x="729.4" y="387.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.4" y="398.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="729.4" y="371.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="732.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.03%)</title><rect x="729.8" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.03%)</title><rect x="729.8" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.8" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="729.8" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="732.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (81 samples, 0.36%)</title><rect x="730.2" y="451.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (81 samples, 0.36%)</title><rect x="730.2" y="435.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.2" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (81 samples, 0.36%)</title><rect x="730.2" y="419.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.36%)</title><rect x="730.2" y="403.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.2" y="414.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.35%)</title><rect x="730.2" y="387.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="733.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (39 samples, 0.17%)</title><rect x="734.5" y="451.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.17%)</title><rect x="734.5" y="435.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.16%)</title><rect x="734.6" y="419.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.6" y="430.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.14%)</title><rect x="734.6" y="403.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="737.6" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="736.2" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (27 samples, 0.12%)</title><rect x="736.5" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.12%)</title><rect x="736.5" y="467.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.12%)</title><rect x="736.5" y="451.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.12%)</title><rect x="736.5" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.12%)</title><rect x="736.5" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.5" y="430.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.10%)</title><rect x="736.5" y="403.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="739.5" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="737.7" y="403.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="740.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (739 samples, 3.29%)</title><rect x="738.0" y="643.0" width="38.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.0" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (739 samples, 3.29%)</title><rect x="738.0" y="627.0" width="38.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.0" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (739 samples, 3.29%)</title><rect x="738.0" y="611.0" width="38.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.0" y="622.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (14 samples, 0.06%)</title><rect x="738.0" y="595.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="741.0" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (725 samples, 3.23%)</title><rect x="738.7" y="595.0" width="38.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.7" y="606.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (725 samples, 3.23%)</title><rect x="738.7" y="579.0" width="38.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.7" y="590.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (725 samples, 3.23%)</title><rect x="738.7" y="563.0" width="38.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.7" y="574.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (725 samples, 3.23%)</title><rect x="738.7" y="547.0" width="38.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.7" y="558.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (725 samples, 3.23%)</title><rect x="738.7" y="531.0" width="38.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.7" y="542.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (725 samples, 3.23%)</title><rect x="738.7" y="515.0" width="38.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.7" y="526.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (449 samples, 2.00%)</title><rect x="738.7" y="499.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.7" y="510.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (449 samples, 2.00%)</title><rect x="738.7" y="483.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.7" y="494.0">c..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (449 samples, 2.00%)</title><rect x="738.7" y="467.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.7" y="478.0">o..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (449 samples, 2.00%)</title><rect x="738.7" y="451.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.7" y="462.0">o..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.07%)</title><rect x="738.9" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.9" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.07%)</title><rect x="738.9" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.9" y="430.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="738.9" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="741.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (49 samples, 0.22%)</title><rect x="739.7" y="435.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.7" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (49 samples, 0.22%)</title><rect x="739.7" y="419.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.7" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (49 samples, 0.22%)</title><rect x="739.7" y="403.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.22%)</title><rect x="739.7" y="387.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.7" y="398.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.22%)</title><rect x="739.7" y="371.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="742.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (37 samples, 0.16%)</title><rect x="742.2" y="435.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.16%)</title><rect x="742.2" y="419.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="742.2" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="745.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.14%)</title><rect x="742.5" y="403.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.5" y="414.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.14%)</title><rect x="742.5" y="387.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="745.5" y="398.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (345 samples, 1.54%)</title><rect x="744.2" y="435.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.2" y="446.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (345 samples, 1.54%)</title><rect x="744.2" y="419.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (28 samples, 0.12%)</title><rect x="744.2" y="403.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.2" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (28 samples, 0.12%)</title><rect x="744.2" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (28 samples, 0.12%)</title><rect x="744.2" y="371.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.12%)</title><rect x="744.2" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.2" y="366.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="744.2" y="339.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="747.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (317 samples, 1.41%)</title><rect x="745.6" y="403.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="745.7" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.7" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="745.7" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.7" y="382.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="745.7" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="748.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (267 samples, 1.19%)</title><rect x="746.0" y="387.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.0" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (66 samples, 0.29%)</title><rect x="746.0" y="371.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.0" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (66 samples, 0.29%)</title><rect x="746.0" y="355.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.29%)</title><rect x="746.0" y="339.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.0" y="350.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.29%)</title><rect x="746.0" y="323.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="749.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (184 samples, 0.82%)</title><rect x="749.5" y="371.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.toString (184 samples, 0.82%)</title><rect x="749.5" y="355.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.5" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.06%)</title><rect x="749.5" y="339.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="752.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (10 samples, 0.04%)</title><rect x="750.2" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (10 samples, 0.04%)</title><rect x="750.2" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.2" y="334.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="750.2" y="307.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="753.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (24 samples, 0.11%)</title><rect x="750.7" y="339.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (24 samples, 0.11%)</title><rect x="750.7" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.7" y="334.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.11%)</title><rect x="750.7" y="307.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="753.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (82 samples, 0.36%)</title><rect x="752.0" y="339.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.0" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (82 samples, 0.36%)</title><rect x="752.0" y="323.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (82 samples, 0.36%)</title><rect x="752.0" y="307.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (82 samples, 0.36%)</title><rect x="752.0" y="291.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.0" y="302.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.36%)</title><rect x="752.0" y="275.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="755.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (54 samples, 0.24%)</title><rect x="756.3" y="339.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.24%)</title><rect x="756.3" y="323.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="756.3" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="759.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.20%)</title><rect x="756.8" y="307.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.8" y="318.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.20%)</title><rect x="756.8" y="291.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="759.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.08%)</title><rect x="759.1" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.1" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (17 samples, 0.08%)</title><rect x="759.1" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.1" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (17 samples, 0.08%)</title><rect x="759.1" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.08%)</title><rect x="759.1" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.1" y="334.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.08%)</title><rect x="759.1" y="307.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="762.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (43 samples, 0.19%)</title><rect x="760.0" y="387.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.19%)</title><rect x="760.0" y="371.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.17%)</title><rect x="760.2" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.2" y="366.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.17%)</title><rect x="760.2" y="339.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="763.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (276 samples, 1.23%)</title><rect x="762.3" y="499.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (227 samples, 1.01%)</title><rect x="762.3" y="483.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (227 samples, 1.01%)</title><rect x="762.3" y="467.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="762.5" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="762.5" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.5" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="762.5" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="765.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (167 samples, 0.74%)</title><rect x="762.8" y="451.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (167 samples, 0.74%)</title><rect x="762.8" y="435.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.8" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (167 samples, 0.74%)</title><rect x="762.8" y="419.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (167 samples, 0.74%)</title><rect x="762.8" y="403.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.8" y="414.0"></text>
</g>
<g>
<title>byte[] (167 samples, 0.74%)</title><rect x="762.8" y="387.0" width="8.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="765.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (50 samples, 0.22%)</title><rect x="771.6" y="451.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.22%)</title><rect x="771.6" y="435.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.21%)</title><rect x="771.7" y="419.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.7" y="430.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.21%)</title><rect x="771.7" y="403.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="774.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (49 samples, 0.22%)</title><rect x="774.2" y="483.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (49 samples, 0.22%)</title><rect x="774.2" y="467.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (49 samples, 0.22%)</title><rect x="774.2" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (49 samples, 0.22%)</title><rect x="774.2" y="435.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.22%)</title><rect x="774.2" y="419.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.2" y="430.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.22%)</title><rect x="774.2" y="403.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="777.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.responseFromValues (73 samples, 0.32%)</title><rect x="776.8" y="643.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.merge (42 samples, 0.19%)</title><rect x="776.8" y="627.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.8" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.10%)</title><rect x="776.8" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (8 samples, 0.04%)</title><rect x="776.8" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.8" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (8 samples, 0.04%)</title><rect x="776.8" y="579.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="779.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="777.2" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.2" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="777.2" y="579.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="780.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (6 samples, 0.03%)</title><rect x="778.0" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.0" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (6 samples, 0.03%)</title><rect x="778.0" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="781.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (13 samples, 0.06%)</title><rect x="778.3" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (9 samples, 0.04%)</title><rect x="778.5" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.03%)</title><rect x="778.5" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (6 samples, 0.03%)</title><rect x="778.5" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.02%)</title><rect x="778.5" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.02%)</title><rect x="778.5" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (5 samples, 0.02%)</title><rect x="778.5" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.5" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (5 samples, 0.02%)</title><rect x="778.5" y="499.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="781.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.from (31 samples, 0.14%)</title><rect x="779.0" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.10%)</title><rect x="779.1" y="611.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.1" y="622.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="779.1" y="595.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="782.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.03%)</title><rect x="779.5" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="782.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.04%)</title><rect x="779.8" y="595.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="782.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/BytesUtils.body (7 samples, 0.03%)</title><rect x="780.2" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.2" y="622.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="780.2" y="595.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="783.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (224 samples, 1.00%)</title><rect x="780.6" y="707.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (198 samples, 0.88%)</title><rect x="780.6" y="691.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (198 samples, 0.88%)</title><rect x="780.6" y="675.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (116 samples, 0.52%)</title><rect x="780.6" y="659.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/client/AsyncHttpClientImpl$$Lambda$372/1245883880.apply (116 samples, 0.52%)</title><rect x="780.6" y="643.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.fromHttpResponse (116 samples, 0.52%)</title><rect x="780.6" y="627.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (30 samples, 0.13%)</title><rect x="780.6" y="611.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (30 samples, 0.13%)</title><rect x="780.6" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.6" y="606.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.11%)</title><rect x="780.6" y="579.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="783.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="781.9" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="784.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (56 samples, 0.25%)</title><rect x="782.2" y="611.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (34 samples, 0.15%)</title><rect x="782.2" y="595.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.2" y="606.0"></text>
</g>
<g>
<title>java/util/List.spliterator (13 samples, 0.06%)</title><rect x="782.2" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.2" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (13 samples, 0.06%)</title><rect x="782.2" y="563.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="785.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (21 samples, 0.09%)</title><rect x="782.9" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (21 samples, 0.09%)</title><rect x="782.9" y="563.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="785.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (22 samples, 0.10%)</title><rect x="784.0" y="595.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.10%)</title><rect x="784.0" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (22 samples, 0.10%)</title><rect x="784.0" y="563.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/382750013.get (11 samples, 0.05%)</title><rect x="784.0" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.0" y="558.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (11 samples, 0.05%)</title><rect x="784.0" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="787.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (11 samples, 0.05%)</title><rect x="784.6" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (11 samples, 0.05%)</title><rect x="784.6" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.6" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (11 samples, 0.05%)</title><rect x="784.6" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.6" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (11 samples, 0.05%)</title><rect x="784.6" y="499.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="787.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.07%)</title><rect x="785.1" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.07%)</title><rect x="785.1" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.1" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.07%)</title><rect x="785.1" y="579.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="788.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cell/Value.present (14 samples, 0.06%)</title><rect x="786.0" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.storage.cell.Value (14 samples, 0.06%)</title><rect x="786.0" y="595.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="789.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (82 samples, 0.36%)</title><rect x="786.7" y="659.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (82 samples, 0.36%)</title><rect x="786.7" y="643.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$171/981177425.apply (82 samples, 0.36%)</title><rect x="786.7" y="627.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$collapseFutures$1 (82 samples, 0.36%)</title><rect x="786.7" y="611.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.7" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (82 samples, 0.36%)</title><rect x="786.7" y="595.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.7" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (82 samples, 0.36%)</title><rect x="786.7" y="579.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.7" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (82 samples, 0.36%)</title><rect x="786.7" y="563.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.7" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (72 samples, 0.32%)</title><rect x="786.7" y="547.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.7" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (72 samples, 0.32%)</title><rect x="786.7" y="531.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.7" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (72 samples, 0.32%)</title><rect x="786.7" y="515.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.7" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (72 samples, 0.32%)</title><rect x="786.7" y="499.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.7" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (72 samples, 0.32%)</title><rect x="786.7" y="483.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (72 samples, 0.32%)</title><rect x="786.7" y="467.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.7" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (72 samples, 0.32%)</title><rect x="786.7" y="451.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.7" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (59 samples, 0.26%)</title><rect x="786.7" y="435.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (59 samples, 0.26%)</title><rect x="786.7" y="419.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (40 samples, 0.18%)</title><rect x="786.7" y="403.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (40 samples, 0.18%)</title><rect x="786.7" y="387.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (33 samples, 0.15%)</title><rect x="786.7" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (16 samples, 0.07%)</title><rect x="786.7" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (14 samples, 0.06%)</title><rect x="786.7" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (14 samples, 0.06%)</title><rect x="786.7" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (13 samples, 0.06%)</title><rect x="786.8" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (13 samples, 0.06%)</title><rect x="786.8" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (10 samples, 0.04%)</title><rect x="786.8" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.03%)</title><rect x="786.8" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.03%)</title><rect x="786.8" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.03%)</title><rect x="786.8" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.8" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.03%)</title><rect x="786.8" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.8" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="786.8" y="195.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="789.8" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (17 samples, 0.08%)</title><rect x="787.5" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (17 samples, 0.08%)</title><rect x="787.5" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (17 samples, 0.08%)</title><rect x="787.5" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (13 samples, 0.06%)</title><rect x="787.5" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.02%)</title><rect x="787.6" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.6" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.02%)</title><rect x="787.6" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.6" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.02%)</title><rect x="787.6" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.02%)</title><rect x="787.6" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.6" y="254.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="787.6" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="790.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.03%)</title><rect x="787.9" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.03%)</title><rect x="787.9" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.04%)</title><rect x="788.8" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.8" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.04%)</title><rect x="788.8" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.8" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.04%)</title><rect x="788.8" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.04%)</title><rect x="788.8" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.8" y="366.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="788.9" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="791.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.05%)</title><rect x="789.2" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.05%)</title><rect x="789.2" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="789.2" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.2" y="382.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="789.3" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (13 samples, 0.06%)</title><rect x="789.8" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.06%)</title><rect x="789.8" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.06%)</title><rect x="789.8" y="403.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.06%)</title><rect x="789.8" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.06%)</title><rect x="789.8" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.8" y="382.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="789.9" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="792.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (10 samples, 0.04%)</title><rect x="790.5" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.5" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (10 samples, 0.04%)</title><rect x="790.5" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (6 samples, 0.03%)</title><rect x="790.5" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (26 samples, 0.12%)</title><rect x="791.0" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils$$Lambda$169/27627117.accept (26 samples, 0.12%)</title><rect x="791.0" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FutureUtils.lambda$biConsumer$3 (26 samples, 0.12%)</title><rect x="791.0" y="659.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.12%)</title><rect x="791.0" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.12%)</title><rect x="791.0" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.12%)</title><rect x="791.0" y="611.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.12%)</title><rect x="791.0" y="595.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.12%)</title><rect x="791.0" y="579.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.12%)</title><rect x="791.0" y="563.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="794.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,772 samples, 7.89%)</title><rect x="792.4" y="803.0" width="93.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.4" y="814.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.21%)</title><rect x="792.6" y="787.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.21%)</title><rect x="792.6" y="771.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$290/876058235.get$Lambda (21 samples, 0.09%)</title><rect x="792.6" y="755.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.6" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$290 (21 samples, 0.09%)</title><rect x="792.6" y="739.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="795.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$292/2116813995.get$Lambda (14 samples, 0.06%)</title><rect x="793.7" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$292 (14 samples, 0.06%)</title><rect x="793.7" y="739.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="796.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$299/1124917692.get$Lambda (13 samples, 0.06%)</title><rect x="794.4" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$299 (13 samples, 0.06%)</title><rect x="794.4" y="739.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="797.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22756955.linkToTargetMethod (35 samples, 0.16%)</title><rect x="795.1" y="787.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.16%)</title><rect x="795.1" y="771.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.get$Lambda (35 samples, 0.16%)</title><rect x="795.1" y="755.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$291 (35 samples, 0.16%)</title><rect x="795.1" y="739.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="798.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (488 samples, 2.17%)</title><rect x="796.9" y="787.0" width="25.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.9" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$292/2116813995.accept (414 samples, 1.84%)</title><rect x="796.9" y="771.0" width="21.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.9" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (414 samples, 1.84%)</title><rect x="796.9" y="755.0" width="21.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.9" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (414 samples, 1.84%)</title><rect x="796.9" y="739.0" width="21.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.9" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (410 samples, 1.82%)</title><rect x="797.2" y="723.0" width="21.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.2" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (410 samples, 1.82%)</title><rect x="797.2" y="707.0" width="21.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.2" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (410 samples, 1.82%)</title><rect x="797.2" y="691.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.2" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (410 samples, 1.82%)</title><rect x="797.2" y="675.0" width="21.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.2" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (410 samples, 1.82%)</title><rect x="797.2" y="659.0" width="21.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.2" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (410 samples, 1.82%)</title><rect x="797.2" y="643.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.2" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (410 samples, 1.82%)</title><rect x="797.2" y="627.0" width="21.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.2" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (410 samples, 1.82%)</title><rect x="797.2" y="611.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.2" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (410 samples, 1.82%)</title><rect x="797.2" y="595.0" width="21.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.2" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (99 samples, 0.44%)</title><rect x="797.2" y="579.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (99 samples, 0.44%)</title><rect x="797.2" y="563.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (99 samples, 0.44%)</title><rect x="797.2" y="547.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (48 samples, 0.21%)</title><rect x="797.2" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (48 samples, 0.21%)</title><rect x="797.2" y="515.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (48 samples, 0.21%)</title><rect x="797.2" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (48 samples, 0.21%)</title><rect x="797.2" y="483.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (48 samples, 0.21%)</title><rect x="797.2" y="467.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="800.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.23%)</title><rect x="799.7" y="531.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.23%)</title><rect x="799.7" y="515.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="802.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (51 samples, 0.23%)</title><rect x="799.7" y="499.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (51 samples, 0.23%)</title><rect x="799.7" y="483.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (51 samples, 0.23%)</title><rect x="799.7" y="467.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (51 samples, 0.23%)</title><rect x="799.7" y="451.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (51 samples, 0.23%)</title><rect x="799.7" y="435.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (51 samples, 0.23%)</title><rect x="799.7" y="419.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="802.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (49 samples, 0.22%)</title><rect x="802.4" y="579.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (49 samples, 0.22%)</title><rect x="802.4" y="563.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (49 samples, 0.22%)</title><rect x="802.4" y="547.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (49 samples, 0.22%)</title><rect x="802.4" y="531.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (49 samples, 0.22%)</title><rect x="802.4" y="515.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (30 samples, 0.13%)</title><rect x="802.4" y="499.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (30 samples, 0.13%)</title><rect x="802.4" y="483.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.13%)</title><rect x="802.4" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (30 samples, 0.13%)</title><rect x="802.4" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (30 samples, 0.13%)</title><rect x="802.4" y="435.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.4" y="446.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="802.4" y="419.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="805.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (19 samples, 0.08%)</title><rect x="803.9" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="803.9" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="803.9" y="467.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (19 samples, 0.08%)</title><rect x="803.9" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (19 samples, 0.08%)</title><rect x="803.9" y="435.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="806.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (23 samples, 0.10%)</title><rect x="804.9" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.10%)</title><rect x="804.9" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.10%)</title><rect x="804.9" y="547.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (23 samples, 0.10%)</title><rect x="804.9" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (23 samples, 0.10%)</title><rect x="804.9" y="515.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalCompletion (26 samples, 0.12%)</title><rect x="806.1" y="579.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onComplete (26 samples, 0.12%)</title><rect x="806.1" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.1" y="574.0"></text>
</g>
<g>
<title>java/io/EOFException.&lt;init&gt; (11 samples, 0.05%)</title><rect x="806.1" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.1" y="558.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (11 samples, 0.05%)</title><rect x="806.1" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (11 samples, 0.05%)</title><rect x="806.1" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (11 samples, 0.05%)</title><rect x="806.1" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.05%)</title><rect x="806.1" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.05%)</title><rect x="806.1" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.onReadError (15 samples, 0.07%)</title><rect x="806.7" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/ConnectionExpiredException.&lt;init&gt; (14 samples, 0.06%)</title><rect x="806.7" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.7" y="542.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (14 samples, 0.06%)</title><rect x="806.7" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (14 samples, 0.06%)</title><rect x="806.7" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (14 samples, 0.06%)</title><rect x="806.7" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.06%)</title><rect x="806.7" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.06%)</title><rect x="806.7" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (213 samples, 0.95%)</title><rect x="807.5" y="579.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (124 samples, 0.55%)</title><rect x="807.5" y="563.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (84 samples, 0.37%)</title><rect x="807.5" y="547.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.5" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (84 samples, 0.37%)</title><rect x="807.5" y="531.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="810.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (40 samples, 0.18%)</title><rect x="811.9" y="547.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (40 samples, 0.18%)</title><rect x="811.9" y="531.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.9" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (40 samples, 0.18%)</title><rect x="811.9" y="515.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="814.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (88 samples, 0.39%)</title><rect x="814.0" y="563.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$199/66698263.get (88 samples, 0.39%)</title><rect x="814.0" y="547.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (88 samples, 0.39%)</title><rect x="814.0" y="531.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (88 samples, 0.39%)</title><rect x="814.0" y="515.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (88 samples, 0.39%)</title><rect x="814.0" y="499.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.0" y="510.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.37%)</title><rect x="814.2" y="483.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="817.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$300/869685903.accept (74 samples, 0.33%)</title><rect x="818.7" y="771.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (74 samples, 0.33%)</title><rect x="818.7" y="755.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$291/948959463.run (74 samples, 0.33%)</title><rect x="818.7" y="739.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (74 samples, 0.33%)</title><rect x="818.7" y="723.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (74 samples, 0.33%)</title><rect x="818.7" y="707.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (65 samples, 0.29%)</title><rect x="818.9" y="691.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (64 samples, 0.28%)</title><rect x="818.9" y="675.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (64 samples, 0.28%)</title><rect x="818.9" y="659.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="821.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.abortPending (5 samples, 0.02%)</title><rect x="822.3" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIOException (5 samples, 0.02%)</title><rect x="822.3" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (187 samples, 0.83%)</title><rect x="822.6" y="787.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.6" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (187 samples, 0.83%)</title><rect x="822.6" y="771.0" width="9.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="825.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (97 samples, 0.43%)</title><rect x="832.4" y="787.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (59 samples, 0.26%)</title><rect x="832.4" y="771.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (59 samples, 0.26%)</title><rect x="832.4" y="755.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (59 samples, 0.26%)</title><rect x="832.4" y="739.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (59 samples, 0.26%)</title><rect x="832.4" y="723.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (59 samples, 0.26%)</title><rect x="832.4" y="707.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (59 samples, 0.26%)</title><rect x="832.4" y="691.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (59 samples, 0.26%)</title><rect x="832.4" y="675.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="835.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (38 samples, 0.17%)</title><rect x="835.5" y="771.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.5" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (38 samples, 0.17%)</title><rect x="835.5" y="755.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="838.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (287 samples, 1.28%)</title><rect x="837.6" y="787.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$207/2005313997.run (118 samples, 0.53%)</title><rect x="837.6" y="771.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (118 samples, 0.53%)</title><rect x="837.6" y="755.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.53%)</title><rect x="837.6" y="739.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.53%)</title><rect x="837.6" y="723.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (118 samples, 0.53%)</title><rect x="837.6" y="707.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (118 samples, 0.53%)</title><rect x="837.6" y="691.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$201/766671662.run (118 samples, 0.53%)</title><rect x="837.6" y="675.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (118 samples, 0.53%)</title><rect x="837.6" y="659.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (98 samples, 0.44%)</title><rect x="837.7" y="643.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (98 samples, 0.44%)</title><rect x="837.7" y="627.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (36 samples, 0.16%)</title><rect x="837.7" y="611.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (36 samples, 0.16%)</title><rect x="837.7" y="595.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (36 samples, 0.16%)</title><rect x="837.7" y="579.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1659367709.linkToTargetMethod (22 samples, 0.10%)</title><rect x="837.7" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/81412691.invoke (22 samples, 0.10%)</title><rect x="837.7" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.10%)</title><rect x="837.7" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.10%)</title><rect x="837.7" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.10%)</title><rect x="837.7" y="499.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.7" y="510.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.10%)</title><rect x="837.7" y="483.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="840.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (14 samples, 0.06%)</title><rect x="838.9" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="838.9" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="838.9" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (14 samples, 0.06%)</title><rect x="838.9" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (14 samples, 0.06%)</title><rect x="838.9" y="499.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="841.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (62 samples, 0.28%)</title><rect x="839.6" y="611.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (62 samples, 0.28%)</title><rect x="839.6" y="595.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (62 samples, 0.28%)</title><rect x="839.6" y="579.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 0.28%)</title><rect x="839.6" y="563.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (62 samples, 0.28%)</title><rect x="839.6" y="547.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (62 samples, 0.28%)</title><rect x="839.6" y="531.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (62 samples, 0.28%)</title><rect x="839.6" y="515.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (62 samples, 0.28%)</title><rect x="839.6" y="499.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (62 samples, 0.28%)</title><rect x="839.6" y="483.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="842.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (17 samples, 0.08%)</title><rect x="842.8" y="643.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.08%)</title><rect x="842.8" y="627.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.08%)</title><rect x="842.8" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1292517547.get$Lambda (17 samples, 0.08%)</title><rect x="842.8" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301 (17 samples, 0.08%)</title><rect x="842.8" y="579.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="845.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$213/1166291669.run (169 samples, 0.75%)</title><rect x="843.8" y="771.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (169 samples, 0.75%)</title><rect x="843.8" y="755.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.24%)</title><rect x="843.8" y="739.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.24%)</title><rect x="843.8" y="723.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$303/1457596202.get$Lambda (54 samples, 0.24%)</title><rect x="843.8" y="707.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$303 (54 samples, 0.24%)</title><rect x="843.8" y="691.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="846.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (115 samples, 0.51%)</title><rect x="846.7" y="739.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (115 samples, 0.51%)</title><rect x="846.7" y="723.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (114 samples, 0.51%)</title><rect x="846.7" y="707.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (114 samples, 0.51%)</title><rect x="846.7" y="691.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (114 samples, 0.51%)</title><rect x="846.7" y="675.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.7" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (114 samples, 0.51%)</title><rect x="846.7" y="659.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="849.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (197 samples, 0.88%)</title><rect x="852.7" y="787.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.7" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (50 samples, 0.22%)</title><rect x="852.7" y="771.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.7" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (50 samples, 0.22%)</title><rect x="852.7" y="755.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.7" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (50 samples, 0.22%)</title><rect x="852.7" y="739.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (50 samples, 0.22%)</title><rect x="852.7" y="723.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.7" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (50 samples, 0.22%)</title><rect x="852.7" y="707.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="855.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (147 samples, 0.65%)</title><rect x="855.3" y="771.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.16%)</title><rect x="855.3" y="755.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.16%)</title><rect x="855.3" y="739.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$347/1906610528.get$Lambda (36 samples, 0.16%)</title><rect x="855.3" y="723.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.3" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$347 (36 samples, 0.16%)</title><rect x="855.3" y="707.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="858.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (111 samples, 0.49%)</title><rect x="857.2" y="755.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.2" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (42 samples, 0.19%)</title><rect x="857.2" y="739.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="860.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (69 samples, 0.31%)</title><rect x="859.4" y="739.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (69 samples, 0.31%)</title><rect x="859.4" y="723.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.4" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (69 samples, 0.31%)</title><rect x="859.4" y="707.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="862.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (309 samples, 1.38%)</title><rect x="863.2" y="787.0" width="16.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.14%)</title><rect x="863.2" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.14%)</title><rect x="863.2" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$289/2052560467.get$Lambda (32 samples, 0.14%)</title><rect x="863.2" y="739.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.2" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$289 (32 samples, 0.14%)</title><rect x="863.2" y="723.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="866.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (150 samples, 0.67%)</title><rect x="864.8" y="771.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (57 samples, 0.25%)</title><rect x="864.8" y="755.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (57 samples, 0.25%)</title><rect x="864.8" y="739.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="867.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (93 samples, 0.41%)</title><rect x="867.8" y="755.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (81 samples, 0.36%)</title><rect x="867.8" y="739.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="870.8" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.05%)</title><rect x="872.1" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="875.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (127 samples, 0.57%)</title><rect x="872.7" y="771.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.7" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (107 samples, 0.48%)</title><rect x="872.7" y="755.0" width="5.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="875.7" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (20 samples, 0.09%)</title><rect x="878.3" y="755.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="881.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (13 samples, 0.06%)</title><rect x="879.4" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.02%)</title><rect x="879.8" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.02%)</title><rect x="879.8" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.02%)</title><rect x="879.8" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (56 samples, 0.25%)</title><rect x="880.1" y="787.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (56 samples, 0.25%)</title><rect x="880.1" y="771.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (56 samples, 0.25%)</title><rect x="880.1" y="755.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (55 samples, 0.24%)</title><rect x="880.1" y="739.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (51 samples, 0.23%)</title><rect x="880.3" y="723.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (51 samples, 0.23%)</title><rect x="880.3" y="707.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (51 samples, 0.23%)</title><rect x="880.3" y="691.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (51 samples, 0.23%)</title><rect x="880.3" y="675.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (51 samples, 0.23%)</title><rect x="880.3" y="659.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (51 samples, 0.23%)</title><rect x="880.3" y="643.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="883.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.02%)</title><rect x="883.0" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.02%)</title><rect x="883.0" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.02%)</title><rect x="883.0" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (5 samples, 0.02%)</title><rect x="883.0" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="886.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (41 samples, 0.18%)</title><rect x="883.3" y="787.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (41 samples, 0.18%)</title><rect x="883.3" y="771.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (41 samples, 0.18%)</title><rect x="883.3" y="755.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (41 samples, 0.18%)</title><rect x="883.3" y="739.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="886.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (81 samples, 0.36%)</title><rect x="885.4" y="803.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.createSession (80 samples, 0.36%)</title><rect x="885.5" y="787.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.createSession (80 samples, 0.36%)</title><rect x="885.5" y="771.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/session/StorageSession.&lt;init&gt; (77 samples, 0.34%)</title><rect x="885.6" y="755.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (77 samples, 0.34%)</title><rect x="885.6" y="739.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.6" y="750.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="885.6" y="723.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="888.6" y="734.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.32%)</title><rect x="886.0" y="723.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,719 samples, 25.45%)</title><rect x="889.7" y="803.0" width="300.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (290 samples, 1.29%)</title><rect x="889.7" y="787.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (290 samples, 1.29%)</title><rect x="889.7" y="771.0" width="15.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="892.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.handleException (17 samples, 0.08%)</title><rect x="904.9" y="787.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.02%)</title><rect x="905.0" y="771.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.0" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.02%)</title><rect x="905.0" y="755.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.0" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.02%)</title><rect x="905.0" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.02%)</title><rect x="905.0" y="723.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.0" y="734.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="905.0" y="707.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="908.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.getRemoteHost (8 samples, 0.04%)</title><rect x="905.3" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.getRemoteAddress (6 samples, 0.03%)</title><rect x="905.4" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,412 samples, 24.08%)</title><rect x="905.8" y="787.0" width="284.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,412 samples, 24.08%)</title><rect x="905.8" y="771.0" width="284.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.8" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,411 samples, 24.08%)</title><rect x="905.8" y="755.0" width="284.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.8" y="766.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,457 samples, 6.48%)</title><rect x="905.8" y="739.0" width="76.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.8" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,457 samples, 6.48%)</title><rect x="905.8" y="723.0" width="76.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.8" y="734.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1,231 samples, 5.48%)</title><rect x="905.8" y="707.0" width="64.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.8" y="718.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (245 samples, 1.09%)</title><rect x="905.8" y="691.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (245 samples, 1.09%)</title><rect x="905.8" y="675.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (245 samples, 1.09%)</title><rect x="905.8" y="659.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.57%)</title><rect x="905.8" y="643.0" width="6.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="908.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (116 samples, 0.52%)</title><rect x="912.6" y="643.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.6" y="654.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.52%)</title><rect x="912.6" y="627.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="915.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.entity (986 samples, 4.39%)</title><rect x="918.7" y="691.0" width="51.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.7" y="702.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1188682934.linkToTargetMethod (57 samples, 0.25%)</title><rect x="918.7" y="675.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2036113847.invokeStatic (57 samples, 0.25%)</title><rect x="918.7" y="659.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$349/1174152785.get$Lambda (57 samples, 0.25%)</title><rect x="918.7" y="643.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$349 (57 samples, 0.25%)</title><rect x="918.7" y="627.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="921.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1933348758.linkToTargetMethod (89 samples, 0.40%)</title><rect x="921.7" y="675.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/575276969.invokeStatic (89 samples, 0.40%)</title><rect x="921.7" y="659.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$115/59933779.get$Lambda (89 samples, 0.40%)</title><rect x="921.7" y="643.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$115 (89 samples, 0.40%)</title><rect x="921.7" y="627.0" width="4.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="924.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (102 samples, 0.45%)</title><rect x="926.3" y="675.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (102 samples, 0.45%)</title><rect x="926.3" y="659.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (102 samples, 0.45%)</title><rect x="926.3" y="643.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.29%)</title><rect x="926.3" y="627.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="929.3" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.16%)</title><rect x="929.7" y="627.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.7" y="638.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.16%)</title><rect x="929.7" y="611.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="932.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$RF.of (454 samples, 2.02%)</title><rect x="931.7" y="675.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.7" y="686.0">r..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (42 samples, 0.19%)</title><rect x="931.7" y="659.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (26 samples, 0.12%)</title><rect x="931.7" y="643.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.7" y="654.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (26 samples, 0.12%)</title><rect x="931.7" y="627.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="934.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (16 samples, 0.07%)</title><rect x="933.1" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.1" y="654.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (16 samples, 0.07%)</title><rect x="933.1" y="627.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="936.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (375 samples, 1.67%)</title><rect x="933.9" y="659.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="936.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (151 samples, 0.67%)</title><rect x="933.9" y="643.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (151 samples, 0.67%)</title><rect x="933.9" y="627.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (151 samples, 0.67%)</title><rect x="933.9" y="611.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (151 samples, 0.67%)</title><rect x="933.9" y="595.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (151 samples, 0.67%)</title><rect x="933.9" y="579.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (151 samples, 0.67%)</title><rect x="933.9" y="563.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (151 samples, 0.67%)</title><rect x="933.9" y="547.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.40%)</title><rect x="933.9" y="531.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.28%)</title><rect x="938.6" y="531.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.6" y="542.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.28%)</title><rect x="938.6" y="515.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="941.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (75 samples, 0.33%)</title><rect x="941.8" y="643.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (75 samples, 0.33%)</title><rect x="941.8" y="627.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (75 samples, 0.33%)</title><rect x="941.8" y="611.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.8" y="622.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (75 samples, 0.33%)</title><rect x="941.8" y="595.0" width="4.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="944.8" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.16%)</title><rect x="945.8" y="643.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="948.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (113 samples, 0.50%)</title><rect x="947.7" y="643.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (113 samples, 0.50%)</title><rect x="947.7" y="627.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.50%)</title><rect x="947.7" y="611.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.7" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.50%)</title><rect x="947.7" y="595.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.50%)</title><rect x="947.7" y="579.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.7" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.50%)</title><rect x="947.7" y="563.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="950.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$RF (37 samples, 0.16%)</title><rect x="953.6" y="659.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="956.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController.asyncExecute (284 samples, 1.26%)</title><rect x="955.5" y="675.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="958.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.38%)</title><rect x="955.5" y="659.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.38%)</title><rect x="955.5" y="643.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestController$$Lambda$120/1687895486.get$Lambda (86 samples, 0.38%)</title><rect x="955.5" y="627.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.rest.RestController$$Lambda$120 (86 samples, 0.38%)</title><rect x="955.5" y="611.0" width="4.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="958.5" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (198 samples, 0.88%)</title><rect x="960.0" y="659.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (198 samples, 0.88%)</title><rect x="960.0" y="643.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (86 samples, 0.38%)</title><rect x="960.0" y="627.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (86 samples, 0.38%)</title><rect x="960.0" y="611.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.toString (12 samples, 0.05%)</title><rect x="960.0" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.04%)</title><rect x="960.0" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.04%)</title><rect x="960.0" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.04%)</title><rect x="960.0" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.04%)</title><rect x="960.0" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.0" y="542.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="960.0" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="963.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.06%)</title><rect x="960.7" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="963.7" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14 samples, 0.06%)</title><rect x="960.7" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (14 samples, 0.06%)</title><rect x="960.7" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.06%)</title><rect x="960.7" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.7" y="558.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="960.7" y="531.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="963.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.05%)</title><rect x="961.4" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.05%)</title><rect x="961.4" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="961.5" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.5" y="574.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="961.7" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="964.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (24 samples, 0.11%)</title><rect x="962.0" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.0" y="606.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (24 samples, 0.11%)</title><rect x="962.0" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (24 samples, 0.11%)</title><rect x="962.0" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (24 samples, 0.11%)</title><rect x="962.0" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="965.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (24 samples, 0.11%)</title><rect x="962.0" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (24 samples, 0.11%)</title><rect x="962.0" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.0" y="526.0"></text>
</g>
<g>
<title>int[] (9 samples, 0.04%)</title><rect x="962.0" y="499.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="965.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="962.6" y="499.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="965.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (24 samples, 0.11%)</title><rect x="963.3" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="963.6" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.03%)</title><rect x="963.6" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.03%)</title><rect x="963.6" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.03%)</title><rect x="963.6" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.6" y="542.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="963.6" y="515.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="966.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.05%)</title><rect x="963.9" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.05%)</title><rect x="963.9" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.04%)</title><rect x="964.0" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.0" y="558.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="964.0" y="531.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="967.0" y="542.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (112 samples, 0.50%)</title><rect x="964.6" y="627.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.6" y="638.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (112 samples, 0.50%)</title><rect x="964.6" y="611.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (112 samples, 0.50%)</title><rect x="964.6" y="595.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (112 samples, 0.50%)</title><rect x="964.6" y="579.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (112 samples, 0.50%)</title><rect x="964.6" y="563.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (112 samples, 0.50%)</title><rect x="964.6" y="547.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="967.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (226 samples, 1.01%)</title><rect x="970.4" y="707.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (226 samples, 1.01%)</title><rect x="970.4" y="691.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (226 samples, 1.01%)</title><rect x="970.4" y="675.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String (90 samples, 0.40%)</title><rect x="970.4" y="659.0" width="4.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="973.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (136 samples, 0.61%)</title><rect x="975.2" y="659.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.2" y="670.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.61%)</title><rect x="975.2" y="643.0" width="7.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="978.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (967 samples, 4.30%)</title><rect x="982.3" y="739.0" width="50.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.3" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (123 samples, 0.55%)</title><rect x="982.3" y="723.0" width="6.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="985.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (302 samples, 1.34%)</title><rect x="988.8" y="723.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (302 samples, 1.34%)</title><rect x="988.8" y="707.0" width="15.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="991.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (542 samples, 2.41%)</title><rect x="1004.6" y="723.0" width="28.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.6" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (542 samples, 2.41%)</title><rect x="1004.6" y="707.0" width="28.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.6" y="718.0">on..</text>
</g>
<g>
<title>char[] (307 samples, 1.37%)</title><rect x="1004.6" y="691.0" width="16.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1007.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.28%)</title><rect x="1020.8" y="691.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1023.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (171 samples, 0.76%)</title><rect x="1024.1" y="691.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (171 samples, 0.76%)</title><rect x="1024.1" y="675.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (171 samples, 0.76%)</title><rect x="1024.1" y="659.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.1" y="670.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.76%)</title><rect x="1024.1" y="643.0" width="9.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1027.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (91 samples, 0.40%)</title><rect x="1033.1" y="739.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.1" y="750.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.40%)</title><rect x="1033.1" y="723.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1036.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (145 samples, 0.65%)</title><rect x="1037.9" y="739.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (145 samples, 0.65%)</title><rect x="1037.9" y="723.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (145 samples, 0.65%)</title><rect x="1037.9" y="707.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.29%)</title><rect x="1037.9" y="691.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1040.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.35%)</title><rect x="1041.3" y="691.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.3" y="702.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.35%)</title><rect x="1041.3" y="675.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1044.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,751 samples, 12.24%)</title><rect x="1045.5" y="739.0" width="144.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.5" y="750.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,751 samples, 12.24%)</title><rect x="1045.5" y="723.0" width="144.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.5" y="734.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (1,442 samples, 6.42%)</title><rect x="1045.5" y="707.0" width="75.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1048.5" y="718.0">char[]</text>
</g>
<g>
<title>char[] (9 samples, 0.04%)</title><rect x="1121.2" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1124.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (464 samples, 2.06%)</title><rect x="1121.7" y="707.0" width="24.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1124.7" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (836 samples, 3.72%)</title><rect x="1146.0" y="707.0" width="43.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.0" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (836 samples, 3.72%)</title><rect x="1146.0" y="691.0" width="43.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.0" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (836 samples, 3.72%)</title><rect x="1146.0" y="675.0" width="43.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.0" y="686.0">java..</text>
</g>
<g>
<title>byte[] (836 samples, 3.72%)</title><rect x="1146.0" y="659.0" width="43.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1149.0" y="670.0">byte[]</text>
</g>
</g>
</svg>
