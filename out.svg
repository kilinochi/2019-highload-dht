<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (1,270 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=31447] (79 samples, 6.22%)</title><rect x="10.0" y="1139.0" width="73.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1150.0">[NIO Sel..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.16%)</title><rect x="10.0" y="1123.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 6.06%)</title><rect x="11.9" y="1123.0" width="71.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.9" y="1134.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 1.73%)</title><rect x="15.6" y="1107.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 1.73%)</title><rect x="15.6" y="1091.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.6" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="17.4" y="1075.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="20.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 1.02%)</title><rect x="18.4" y="1075.0" width="12.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="21.4" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="18.4" y="1059.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.4" y="1070.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.16%)</title><rect x="19.3" y="1059.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="22.3" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.79%)</title><rect x="21.1" y="1059.0" width="9.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="23.0" y="1043.0" width="7.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="26.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="23.0" y="1027.0" width="7.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="26.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="23.0" y="1011.0" width="7.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="26.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="23.0" y="995.0" width="7.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="26.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="23.0" y="979.0" width="7.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="26.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="23.9" y="963.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="26.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="24.9" y="947.0" width="5.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="27.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="25.8" y="931.0" width="4.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="28.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="25.8" y="915.0" width="4.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="28.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="27.7" y="899.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="30.7" y="910.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.39%)</title><rect x="30.4" y="1075.0" width="4.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="33.4" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.08%)</title><rect x="35.1" y="1075.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="38.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (51 samples, 4.02%)</title><rect x="36.0" y="1107.0" width="47.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.0" y="1118.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (51 samples, 4.02%)</title><rect x="36.0" y="1091.0" width="47.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.0" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35 samples, 2.76%)</title><rect x="36.9" y="1075.0" width="32.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.9" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 1.73%)</title><rect x="36.9" y="1059.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 1.73%)</title><rect x="36.9" y="1043.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.9" y="1054.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (19 samples, 1.50%)</title><rect x="36.9" y="1027.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.16%)</title><rect x="36.9" y="1011.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="36.9" y="995.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="36.9" y="979.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.entity (1 samples, 0.08%)</title><rect x="36.9" y="963.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.9" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.08%)</title><rect x="37.9" y="995.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.entity (17 samples, 1.34%)</title><rect x="38.8" y="1011.0" width="15.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="38.8" y="995.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="38.8" y="979.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.8" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="38.8" y="963.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="38.8" y="947.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.8" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="38.8" y="931.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.asyncExecute (16 samples, 1.26%)</title><rect x="39.7" y="995.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (16 samples, 1.26%)</title><rect x="39.7" y="979.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 1.26%)</title><rect x="39.7" y="963.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.7" y="974.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (16 samples, 1.26%)</title><rect x="39.7" y="947.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.7" y="958.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (16 samples, 1.26%)</title><rect x="39.7" y="931.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (16 samples, 1.26%)</title><rect x="39.7" y="915.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (16 samples, 1.26%)</title><rect x="39.7" y="899.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (13 samples, 1.02%)</title><rect x="39.7" y="883.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 1.02%)</title><rect x="39.7" y="867.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.87%)</title><rect x="41.6" y="851.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.6" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.16%)</title><rect x="41.6" y="835.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="44.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.08%)</title><rect x="41.6" y="819.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.6" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="42.5" y="819.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="45.5" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.71%)</title><rect x="43.4" y="835.0" width="8.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="46.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="45.3" y="819.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="48.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="45.3" y="803.0" width="6.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="48.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="47.2" y="787.0" width="4.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="50.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="47.2" y="771.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="50.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="47.2" y="755.0" width="4.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="50.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="47.2" y="739.0" width="4.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="50.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="47.2" y="723.0" width="4.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="50.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="47.2" y="707.0" width="4.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="50.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (3 samples, 0.24%)</title><rect x="51.8" y="883.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.08%)</title><rect x="54.6" y="1027.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.08%)</title><rect x="55.5" y="1027.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.5" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.08%)</title><rect x="55.5" y="1011.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.08%)</title><rect x="55.5" y="995.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.08%)</title><rect x="56.5" y="1027.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="56.5" y="1011.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="56.5" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="56.5" y="979.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.55%)</title><rect x="57.4" y="1059.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.08%)</title><rect x="58.3" y="1043.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="58.3" y="1027.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="58.3" y="1011.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="58.3" y="995.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="59.2" y="1043.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="59.2" y="1027.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.16%)</title><rect x="59.2" y="1011.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.16%)</title><rect x="59.2" y="995.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="59.2" y="979.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.08%)</title><rect x="60.2" y="979.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.2" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="60.2" y="963.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.24%)</title><rect x="61.1" y="1043.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.08%)</title><rect x="63.9" y="1059.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="63.9" y="1043.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="63.9" y="1027.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="63.9" y="1011.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.24%)</title><rect x="64.8" y="1059.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="64.8" y="1043.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.16%)</title><rect x="65.7" y="1043.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.16%)</title><rect x="65.7" y="1027.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="66.7" y="1011.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="66.7" y="995.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.08%)</title><rect x="66.7" y="979.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.7" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="67.6" y="1059.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="67.6" y="1043.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.16%)</title><rect x="67.6" y="1027.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="67.6" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.6" y="1022.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="68.5" y="1011.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="71.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 1.18%)</title><rect x="69.5" y="1075.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 1.10%)</title><rect x="70.4" y="1059.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="70.4" y="1043.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="73.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="70.4" y="1027.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="73.4" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.24%)</title><rect x="70.4" y="1011.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="73.4" y="1022.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.24%)</title><rect x="70.4" y="995.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="73.4" y="1006.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="70.4" y="979.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="73.4" y="990.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.08%)</title><rect x="71.3" y="979.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="74.3" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="72.3" y="979.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.3" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="73.2" y="1011.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="73.2" y="995.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="76.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="73.2" y="979.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="76.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="73.2" y="963.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="76.2" y="974.0"></text>
</g>
<g>
<title>recv (10 samples, 0.79%)</title><rect x="74.1" y="1043.0" width="9.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="77.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="76.0" y="1027.0" width="7.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="79.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="76.0" y="1011.0" width="7.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="79.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="76.9" y="995.0" width="6.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="79.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="76.9" y="979.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="79.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="77.8" y="963.0" width="5.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="80.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="77.8" y="947.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="80.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="77.8" y="931.0" width="5.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="80.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="80.6" y="915.0" width="2.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="83.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="81.5" y="899.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="84.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="82.5" y="883.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="85.5" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31449] (93 samples, 7.32%)</title><rect x="83.4" y="1139.0" width="86.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="86.4" y="1150.0">[NIO Selec..</text>
</g>
<g>
<title>InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.08%)</title><rect x="83.4" y="1123.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="86.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.08%)</title><rect x="84.3" y="1123.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.3" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.47%)</title><rect x="85.3" y="1123.0" width="5.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="88.3" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (5 samples, 0.39%)</title><rect x="85.3" y="1107.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="88.3" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.31%)</title><rect x="85.3" y="1091.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="88.3" y="1102.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.08%)</title><rect x="89.0" y="1091.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="92.0" y="1102.0"></text>
</g>
<g>
<title>nmethod::verified_entry_point() const (1 samples, 0.08%)</title><rect x="89.9" y="1107.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="92.9" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.16%)</title><rect x="90.8" y="1123.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="93.8" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.08%)</title><rect x="91.8" y="1107.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.8" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.08%)</title><rect x="91.8" y="1091.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.8" y="1102.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.08%)</title><rect x="91.8" y="1075.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="94.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (83 samples, 6.54%)</title><rect x="92.7" y="1123.0" width="77.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.7" y="1134.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 1.42%)</title><rect x="93.6" y="1107.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 1.42%)</title><rect x="93.6" y="1091.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.6" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="93.6" y="1075.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="96.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="94.6" y="1075.0" width="13.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="97.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="94.6" y="1059.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="97.6" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="94.6" y="1043.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="97.6" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 1.10%)</title><rect x="95.5" y="1059.0" width="13.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="98.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="98.3" y="1043.0" width="10.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="101.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="98.3" y="1027.0" width="10.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="101.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="99.2" y="1011.0" width="9.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="102.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="99.2" y="995.0" width="9.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="102.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="99.2" y="979.0" width="9.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="102.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="102.0" y="963.0" width="6.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="105.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="102.0" y="947.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="105.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="102.9" y="931.0" width="5.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="105.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="102.9" y="915.0" width="5.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="105.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="102.9" y="899.0" width="5.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="105.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="107.6" y="883.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="110.6" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="108.5" y="1075.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="111.5" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.08%)</title><rect x="109.4" y="1075.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="112.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (64 samples, 5.04%)</title><rect x="110.3" y="1107.0" width="59.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.3" y="1118.0">one/ni..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.08%)</title><rect x="118.7" y="1091.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (54 samples, 4.25%)</title><rect x="119.6" y="1091.0" width="50.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.6" y="1102.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 2.28%)</title><rect x="120.6" y="1075.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.6" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 1.73%)</title><rect x="120.6" y="1059.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 1.73%)</title><rect x="120.6" y="1043.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.6" y="1054.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (21 samples, 1.65%)</title><rect x="120.6" y="1027.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.entity (21 samples, 1.65%)</title><rect x="120.6" y="1011.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="120.6" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="120.6" y="979.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$88/1608053215.get$Lambda (1 samples, 0.08%)</title><rect x="120.6" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.asyncExecute (20 samples, 1.57%)</title><rect x="121.5" y="995.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (20 samples, 1.57%)</title><rect x="121.5" y="979.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 1.57%)</title><rect x="121.5" y="963.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.5" y="974.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (20 samples, 1.57%)</title><rect x="121.5" y="947.0" width="18.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.5" y="958.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (20 samples, 1.57%)</title><rect x="121.5" y="931.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (20 samples, 1.57%)</title><rect x="121.5" y="915.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (20 samples, 1.57%)</title><rect x="121.5" y="899.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (20 samples, 1.57%)</title><rect x="121.5" y="883.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 1.57%)</title><rect x="121.5" y="867.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 1.57%)</title><rect x="121.5" y="851.0" width="18.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.5" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.16%)</title><rect x="121.5" y="835.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="124.5" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="121.5" y="819.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="124.5" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="122.4" y="819.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="125.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (18 samples, 1.42%)</title><rect x="123.4" y="835.0" width="16.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="126.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="123.4" y="819.0" width="16.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="126.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="123.4" y="803.0" width="16.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="126.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="123.4" y="787.0" width="16.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="126.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="123.4" y="771.0" width="16.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="126.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="123.4" y="755.0" width="16.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="126.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.34%)</title><rect x="124.3" y="739.0" width="15.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="127.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.34%)</title><rect x="124.3" y="723.0" width="15.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="127.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.34%)</title><rect x="124.3" y="707.0" width="15.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="127.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.08%)</title><rect x="140.1" y="1027.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="140.1" y="1011.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="140.1" y="995.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="140.1" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.1" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.47%)</title><rect x="141.0" y="1059.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.16%)</title><rect x="141.0" y="1043.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="141.9" y="1027.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="141.9" y="1011.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.24%)</title><rect x="142.9" y="1043.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="143.8" y="1027.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.16%)</title><rect x="143.8" y="1011.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.16%)</title><rect x="143.8" y="995.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (2 samples, 0.16%)</title><rect x="143.8" y="979.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.08%)</title><rect x="145.7" y="1043.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="146.6" y="1059.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="146.6" y="1043.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="146.6" y="1027.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="146.6" y="1011.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.08%)</title><rect x="147.5" y="1075.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (23 samples, 1.81%)</title><rect x="148.4" y="1075.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.4" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 1.81%)</title><rect x="148.4" y="1059.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.4" y="1070.0">o..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="148.4" y="1043.0" width="4.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="151.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="148.4" y="1027.0" width="4.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="151.4" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.16%)</title><rect x="148.4" y="1011.0" width="1.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="151.4" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="148.4" y="995.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="151.4" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="149.4" y="995.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="152.4" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="149.4" y="979.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="152.4" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="150.3" y="1011.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="153.3" y="1022.0"></text>
</g>
<g>
<title>recv (2 samples, 0.16%)</title><rect x="151.2" y="1011.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="154.2" y="1022.0"></text>
</g>
<g>
<title>recv (18 samples, 1.42%)</title><rect x="153.1" y="1043.0" width="16.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="156.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="155.9" y="1027.0" width="13.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="158.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="155.9" y="1011.0" width="13.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="158.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="159.6" y="995.0" width="10.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="162.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="159.6" y="979.0" width="10.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="162.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="159.6" y="963.0" width="10.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="162.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="159.6" y="947.0" width="10.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="162.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="160.5" y="931.0" width="9.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="163.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="163.3" y="915.0" width="6.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="166.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="166.1" y="899.0" width="3.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="169.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="167.0" y="883.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="170.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="167.0" y="867.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="170.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="168.9" y="851.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="171.9" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=31451] (92 samples, 7.24%)</title><rect x="169.8" y="1139.0" width="85.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="172.8" y="1150.0">[NIO Selec..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (3 samples, 0.24%)</title><rect x="169.8" y="1123.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="172.8" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.08%)</title><rect x="169.8" y="1107.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="172.8" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.08%)</title><rect x="170.7" y="1107.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="173.7" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.08%)</title><rect x="171.7" y="1107.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="174.7" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.08%)</title><rect x="172.6" y="1123.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="175.6" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.08%)</title><rect x="172.6" y="1107.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="175.6" y="1118.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.16%)</title><rect x="173.5" y="1123.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="176.5" y="1134.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.24%)</title><rect x="175.4" y="1123.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="178.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (83 samples, 6.54%)</title><rect x="178.2" y="1123.0" width="77.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.2" y="1134.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 1.65%)</title><rect x="179.1" y="1107.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 1.65%)</title><rect x="179.1" y="1091.0" width="19.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.26%)</title><rect x="182.8" y="1075.0" width="14.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="185.8" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 1.26%)</title><rect x="182.8" y="1059.0" width="14.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="185.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="187.5" y="1043.0" width="10.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="190.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="187.5" y="1027.0" width="10.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="190.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="188.4" y="1011.0" width="9.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="188.4" y="995.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="191.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="188.4" y="979.0" width="9.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="191.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="188.4" y="963.0" width="9.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="191.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="191.2" y="947.0" width="6.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="194.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="192.1" y="931.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="195.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="192.1" y="915.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="195.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="193.0" y="899.0" width="4.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="196.0" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="197.7" y="1075.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="200.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (61 samples, 4.80%)</title><rect x="198.6" y="1107.0" width="56.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.6" y="1118.0">one/ni..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.16%)</title><rect x="204.2" y="1091.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.2" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.08%)</title><rect x="206.0" y="1091.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="209.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (52 samples, 4.09%)</title><rect x="207.0" y="1091.0" width="48.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.0" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35 samples, 2.76%)</title><rect x="207.0" y="1075.0" width="32.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.0" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 1.97%)</title><rect x="207.0" y="1059.0" width="23.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.0" y="1070.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 1.97%)</title><rect x="207.0" y="1043.0" width="23.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.0" y="1054.0">o..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (23 samples, 1.81%)</title><rect x="207.0" y="1027.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.0" y="1038.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.16%)</title><rect x="207.0" y="1011.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.16%)</title><rect x="207.0" y="995.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.entity (21 samples, 1.65%)</title><rect x="208.8" y="1011.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.asyncExecute (21 samples, 1.65%)</title><rect x="208.8" y="995.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (21 samples, 1.65%)</title><rect x="208.8" y="979.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.65%)</title><rect x="208.8" y="963.0" width="19.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="974.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (21 samples, 1.65%)</title><rect x="208.8" y="947.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.8" y="958.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (21 samples, 1.65%)</title><rect x="208.8" y="931.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (21 samples, 1.65%)</title><rect x="208.8" y="915.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (21 samples, 1.65%)</title><rect x="208.8" y="899.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (21 samples, 1.65%)</title><rect x="208.8" y="883.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 1.65%)</title><rect x="208.8" y="867.0" width="19.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 1.34%)</title><rect x="212.6" y="851.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.6" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="212.6" y="835.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="215.6" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="213.5" y="835.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="216.5" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.24%)</title><rect x="214.4" y="835.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="217.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.08%)</title><rect x="214.4" y="819.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="217.4" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.16%)</title><rect x="215.3" y="819.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="218.3" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.94%)</title><rect x="217.2" y="835.0" width="11.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="220.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="220.0" y="819.0" width="8.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="223.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="220.0" y="803.0" width="8.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="223.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="220.0" y="787.0" width="8.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="223.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="220.0" y="771.0" width="8.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="223.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="220.9" y="755.0" width="7.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="223.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="220.9" y="739.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="223.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="220.9" y="723.0" width="7.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="223.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="220.9" y="707.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="223.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.08%)</title><rect x="228.3" y="1027.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.08%)</title><rect x="228.3" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.08%)</title><rect x="228.3" y="995.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.08%)</title><rect x="229.3" y="1027.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="229.3" y="1011.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="229.3" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.39%)</title><rect x="230.2" y="1059.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.24%)</title><rect x="230.2" y="1043.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.24%)</title><rect x="230.2" y="1027.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="232.1" y="1011.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.08%)</title><rect x="232.1" y="995.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.08%)</title><rect x="232.1" y="979.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.1" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.16%)</title><rect x="233.0" y="1043.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.16%)</title><rect x="234.9" y="1059.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.08%)</title><rect x="235.8" y="1043.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.16%)</title><rect x="236.7" y="1059.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.16%)</title><rect x="236.7" y="1043.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="238.6" y="1059.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="238.6" y="1043.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="238.6" y="1027.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="238.6" y="1011.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.08%)</title><rect x="238.6" y="995.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 1.34%)</title><rect x="239.5" y="1075.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 1.34%)</title><rect x="239.5" y="1059.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="239.5" y="1043.0" width="4.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="242.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="239.5" y="1027.0" width="4.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="242.5" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.24%)</title><rect x="239.5" y="1011.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="242.5" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="239.5" y="995.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="242.5" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="240.4" y="995.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="243.4" y="1006.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.08%)</title><rect x="241.4" y="995.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="244.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.08%)</title><rect x="242.3" y="1011.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="245.3" y="1022.0"></text>
</g>
<g>
<title>recv (1 samples, 0.08%)</title><rect x="243.2" y="1011.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="246.2" y="1022.0"></text>
</g>
<g>
<title>recv (12 samples, 0.94%)</title><rect x="244.1" y="1043.0" width="11.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="247.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="245.1" y="1027.0" width="10.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="248.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="245.1" y="1011.0" width="10.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="248.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="246.0" y="995.0" width="9.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="249.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="246.0" y="979.0" width="9.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="249.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="246.9" y="963.0" width="8.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="249.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="247.9" y="947.0" width="7.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="250.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="247.9" y="931.0" width="7.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="250.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="249.7" y="915.0" width="5.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="252.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="250.6" y="899.0" width="4.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="253.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="252.5" y="883.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="253.4" y="867.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="256.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="253.4" y="851.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="256.4" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=31453] (85 samples, 6.69%)</title><rect x="255.3" y="1139.0" width="79.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="258.3" y="1150.0">[NIO Sele..</text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (3 samples, 0.24%)</title><rect x="255.3" y="1123.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="258.3" y="1134.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="255.3" y="1107.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="258.3" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.08%)</title><rect x="256.2" y="1107.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="259.2" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.08%)</title><rect x="256.2" y="1091.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="259.2" y="1102.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.08%)</title><rect x="257.1" y="1107.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="260.1" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.08%)</title><rect x="258.1" y="1123.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="261.1" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.08%)</title><rect x="258.1" y="1107.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="261.1" y="1118.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.39%)</title><rect x="259.0" y="1123.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="262.0" y="1134.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.08%)</title><rect x="259.9" y="1107.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="262.9" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (2 samples, 0.16%)</title><rect x="260.9" y="1107.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="263.9" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.16%)</title><rect x="260.9" y="1091.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="263.9" y="1102.0"></text>
</g>
<g>
<title>nmethod::verified_entry_point() const (1 samples, 0.08%)</title><rect x="262.7" y="1107.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="265.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (76 samples, 5.98%)</title><rect x="263.7" y="1123.0" width="70.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.7" y="1134.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (24 samples, 1.89%)</title><rect x="263.7" y="1107.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.7" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.31%)</title><rect x="263.7" y="1091.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.31%)</title><rect x="263.7" y="1075.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 1.57%)</title><rect x="267.4" y="1091.0" width="18.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.4" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="267.4" y="1075.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="270.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.26%)</title><rect x="268.3" y="1075.0" width="14.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="271.3" y="1086.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.08%)</title><rect x="268.3" y="1059.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="271.3" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 1.18%)</title><rect x="269.2" y="1059.0" width="14.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="272.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.94%)</title><rect x="272.0" y="1043.0" width="11.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="275.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.94%)</title><rect x="272.0" y="1027.0" width="11.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="275.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="273.9" y="1011.0" width="9.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="276.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="273.9" y="995.0" width="9.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="276.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="273.9" y="979.0" width="9.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="276.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="274.8" y="963.0" width="8.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="277.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="274.8" y="947.0" width="8.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="277.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="277.6" y="931.0" width="5.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="280.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="277.6" y="915.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="280.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="280.4" y="899.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="283.4" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="283.2" y="1075.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="286.2" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.16%)</title><rect x="284.1" y="1075.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="287.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (52 samples, 4.09%)</title><rect x="286.0" y="1107.0" width="48.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.0" y="1118.0">one/..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.08%)</title><rect x="297.1" y="1091.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/System.currentTimeMillis (1 samples, 0.08%)</title><rect x="298.0" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (37 samples, 2.91%)</title><rect x="299.0" y="1091.0" width="34.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.0" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 1.89%)</title><rect x="299.9" y="1075.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.9" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 1.34%)</title><rect x="300.8" y="1059.0" width="15.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 1.26%)</title><rect x="301.7" y="1043.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.7" y="1054.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (15 samples, 1.18%)</title><rect x="301.7" y="1027.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.08%)</title><rect x="301.7" y="1011.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.08%)</title><rect x="301.7" y="995.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.entity (14 samples, 1.10%)</title><rect x="302.7" y="1011.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.08%)</title><rect x="302.7" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.08%)</title><rect x="302.7" y="979.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.08%)</title><rect x="302.7" y="963.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.7" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="303.6" y="995.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="303.6" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.6" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="303.6" y="963.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="303.6" y="947.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.6" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="303.6" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.6" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.08%)</title><rect x="303.6" y="915.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.asyncExecute (12 samples, 0.94%)</title><rect x="304.5" y="995.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (12 samples, 0.94%)</title><rect x="304.5" y="979.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.94%)</title><rect x="304.5" y="963.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.5" y="974.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (12 samples, 0.94%)</title><rect x="304.5" y="947.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.5" y="958.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (12 samples, 0.94%)</title><rect x="304.5" y="931.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.94%)</title><rect x="304.5" y="915.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12 samples, 0.94%)</title><rect x="304.5" y="899.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (12 samples, 0.94%)</title><rect x="304.5" y="883.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.94%)</title><rect x="304.5" y="867.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.87%)</title><rect x="305.5" y="851.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.5" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.24%)</title><rect x="305.5" y="835.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="308.5" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="305.5" y="819.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="308.5" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.08%)</title><rect x="306.4" y="819.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="309.4" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="307.3" y="819.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="310.3" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="308.3" y="835.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="311.3" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.55%)</title><rect x="309.2" y="835.0" width="6.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="312.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="310.1" y="819.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="313.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="310.1" y="803.0" width="5.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="313.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="311.0" y="787.0" width="4.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="314.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="311.0" y="771.0" width="4.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="314.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="311.0" y="755.0" width="4.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="314.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="312.0" y="739.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="315.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="312.0" y="723.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="315.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="312.0" y="707.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="315.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.08%)</title><rect x="315.7" y="1027.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="315.7" y="1011.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="315.7" y="995.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="315.7" y="979.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.7" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.31%)</title><rect x="316.6" y="1059.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.08%)</title><rect x="316.6" y="1043.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="316.6" y="1027.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="316.6" y="1011.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="316.6" y="995.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.08%)</title><rect x="316.6" y="979.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.6" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.24%)</title><rect x="317.5" y="1043.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.16%)</title><rect x="320.3" y="1059.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="321.3" y="1043.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="321.3" y="1027.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.3" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="321.3" y="1011.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="324.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.94%)</title><rect x="322.2" y="1075.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.94%)</title><rect x="322.2" y="1059.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="322.2" y="1043.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="325.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="322.2" y="1027.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="325.2" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="322.2" y="1011.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="325.2" y="1022.0"></text>
</g>
<g>
<title>recv (11 samples, 0.87%)</title><rect x="323.1" y="1043.0" width="10.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="326.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="323.1" y="1027.0" width="10.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="326.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="323.1" y="1011.0" width="10.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="326.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="325.0" y="995.0" width="8.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="328.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="326.8" y="979.0" width="6.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="329.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="326.8" y="963.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="329.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="326.8" y="947.0" width="6.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="329.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="326.8" y="931.0" width="6.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="329.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="327.8" y="915.0" width="5.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="330.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="328.7" y="899.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="331.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="330.6" y="883.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="333.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="331.5" y="867.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="334.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="331.5" y="851.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="334.5" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.08%)</title><rect x="333.3" y="1091.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="336.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="333.3" y="1075.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="336.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="333.3" y="1059.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="336.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="333.3" y="1043.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="336.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="333.3" y="1027.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="336.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="333.3" y="1011.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="336.3" y="1022.0"></text>
</g>
<g>
<title>[NIO Worker #1 tid=31457] (121 samples, 9.53%)</title><rect x="334.3" y="1139.0" width="112.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="337.3" y="1150.0">[NIO Worker #1..</text>
</g>
<g>
<title>java/lang/Thread.run (121 samples, 9.53%)</title><rect x="334.3" y="1123.0" width="112.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.3" y="1134.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (121 samples, 9.53%)</title><rect x="334.3" y="1107.0" width="112.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.3" y="1118.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (121 samples, 9.53%)</title><rect x="334.3" y="1091.0" width="112.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.3" y="1102.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (75 samples, 5.91%)</title><rect x="334.3" y="1075.0" width="69.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.3" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (75 samples, 5.91%)</title><rect x="334.3" y="1059.0" width="69.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.3" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (75 samples, 5.91%)</title><rect x="334.3" y="1043.0" width="69.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.3" y="1054.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (75 samples, 5.91%)</title><rect x="334.3" y="1027.0" width="69.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.3" y="1038.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 5.83%)</title><rect x="335.2" y="1011.0" width="68.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.2" y="1022.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 1.65%)</title><rect x="384.4" y="995.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.4" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.87%)</title><rect x="385.4" y="979.0" width="10.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="388.4" y="990.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="385.4" y="963.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="388.4" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.24%)</title><rect x="386.3" y="963.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="389.3" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.16%)</title><rect x="387.2" y="947.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="390.2" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.16%)</title><rect x="389.1" y="963.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="392.1" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.31%)</title><rect x="390.9" y="963.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="393.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="392.8" y="947.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="395.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="392.8" y="931.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="395.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="392.8" y="915.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="395.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="392.8" y="899.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="395.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="393.7" y="883.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="396.7" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="394.7" y="963.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="397.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="395.6" y="979.0" width="7.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="398.6" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.63%)</title><rect x="395.6" y="963.0" width="7.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="398.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="397.4" y="947.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="400.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="397.4" y="931.0" width="5.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="400.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="398.4" y="915.0" width="4.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="401.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="398.4" y="899.0" width="4.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="401.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="398.4" y="883.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="401.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="399.3" y="867.0" width="3.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="402.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="400.2" y="851.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="403.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="400.2" y="835.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="403.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="400.2" y="819.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="403.2" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.08%)</title><rect x="403.0" y="979.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="406.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$59/695505923.run (46 samples, 3.62%)</title><rect x="404.0" y="1075.0" width="42.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.0" y="1086.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$asyncExecute$3 (46 samples, 3.62%)</title><rect x="404.0" y="1059.0" width="42.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.0" y="1070.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$88/1608053215.submit (14 samples, 1.10%)</title><rect x="404.0" y="1043.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$entity$1 (14 samples, 1.10%)</title><rect x="404.0" y="1027.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.upsert (14 samples, 1.10%)</title><rect x="404.0" y="1011.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="404.0" y="995.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="404.0" y="979.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.0" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="404.0" y="963.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="404.0" y="947.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.0" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="404.0" y="931.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="407.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (13 samples, 1.02%)</title><rect x="404.9" y="995.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (13 samples, 1.02%)</title><rect x="404.9" y="979.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.08%)</title><rect x="404.9" y="963.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.08%)</title><rect x="405.8" y="963.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.08%)</title><rect x="405.8" y="947.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.08%)</title><rect x="405.8" y="931.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.08%)</title><rect x="405.8" y="915.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.8" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.08%)</title><rect x="405.8" y="899.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.08%)</title><rect x="405.8" y="883.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (11 samples, 0.87%)</title><rect x="406.7" y="963.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.79%)</title><rect x="406.7" y="947.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.79%)</title><rect x="406.7" y="931.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.16%)</title><rect x="410.5" y="915.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.08%)</title><rect x="411.4" y="899.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.31%)</title><rect x="412.3" y="915.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.24%)</title><rect x="413.2" y="899.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.2" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.24%)</title><rect x="413.2" y="883.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.2" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.08%)</title><rect x="413.2" y="867.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.2" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.16%)</title><rect x="414.2" y="867.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.16%)</title><rect x="414.2" y="851.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.2" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.08%)</title><rect x="415.1" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/cluster/ClusterValue.of (1 samples, 0.08%)</title><rect x="416.0" y="947.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.0" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.08%)</title><rect x="416.0" y="931.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="416.0" y="915.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="416.0" y="899.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.0" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="416.0" y="883.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="419.0" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.08%)</title><rect x="416.0" y="867.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="419.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="416.0" y="851.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="419.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$ResponseUtils.sendResponse (32 samples, 2.52%)</title><rect x="417.0" y="1043.0" width="29.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.0" y="1054.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 2.52%)</title><rect x="417.0" y="1027.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.0" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 2.44%)</title><rect x="417.9" y="1011.0" width="28.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.9" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.16%)</title><rect x="417.9" y="995.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 2.28%)</title><rect x="419.7" y="995.0" width="27.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.7" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 2.28%)</title><rect x="419.7" y="979.0" width="27.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.7" y="990.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (29 samples, 2.28%)</title><rect x="419.7" y="963.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.7" y="974.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.08%)</title><rect x="419.7" y="947.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="422.7" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="419.7" y="931.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="422.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (28 samples, 2.20%)</title><rect x="420.7" y="947.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.7" y="958.0">o..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="420.7" y="931.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="423.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="420.7" y="915.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="423.7" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.08%)</title><rect x="420.7" y="899.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="423.7" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="420.7" y="883.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="423.7" y="894.0"></text>
</g>
<g>
<title>__send (27 samples, 2.13%)</title><rect x="421.6" y="931.0" width="25.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="424.6" y="942.0">_..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="915.0" width="25.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="424.6" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="899.0" width="25.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="424.6" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="883.0" width="25.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="424.6" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="867.0" width="25.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="424.6" y="878.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="851.0" width="25.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="424.6" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="835.0" width="25.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="424.6" y="846.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="819.0" width="25.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="424.6" y="830.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="421.6" y="803.0" width="25.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="424.6" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.97%)</title><rect x="423.5" y="787.0" width="23.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="426.5" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.97%)</title><rect x="423.5" y="771.0" width="23.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="426.5" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.97%)</title><rect x="423.5" y="755.0" width="23.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="426.5" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 1.89%)</title><rect x="424.4" y="739.0" width="22.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="427.4" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 1.89%)</title><rect x="424.4" y="723.0" width="22.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="427.4" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 1.89%)</title><rect x="424.4" y="707.0" width="22.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="427.4" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="426.3" y="691.0" width="20.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="429.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="426.3" y="675.0" width="20.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="429.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="426.3" y="659.0" width="20.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="429.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="426.3" y="643.0" width="20.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="429.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="627.0" width="18.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="431.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="611.0" width="18.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="431.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="595.0" width="18.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="431.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="579.0" width="18.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="431.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="563.0" width="18.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="431.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="547.0" width="18.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="431.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="428.1" y="531.0" width="18.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="431.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="515.0" width="16.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="433.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="499.0" width="16.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="433.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="483.0" width="16.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="433.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="467.0" width="16.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="433.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="451.0" width="16.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="433.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="435.0" width="16.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="433.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="419.0" width="16.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="433.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="430.0" y="403.0" width="16.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="433.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.34%)</title><rect x="430.9" y="387.0" width="15.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="433.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.34%)</title><rect x="430.9" y="371.0" width="15.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="433.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.26%)</title><rect x="431.8" y="355.0" width="14.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="434.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="432.8" y="339.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="435.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="432.8" y="323.0" width="13.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="435.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="432.8" y="307.0" width="13.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="435.8" y="318.0"></text>
</g>
<g>
<title>[NIO Worker #3 tid=31458] (255 samples, 20.08%)</title><rect x="446.7" y="1139.0" width="236.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="449.7" y="1150.0">[NIO Worker #3 tid=31458]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.08%)</title><rect x="446.7" y="1123.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="449.7" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.08%)</title><rect x="446.7" y="1107.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="449.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.08%)</title><rect x="446.7" y="1091.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="449.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (254 samples, 20.00%)</title><rect x="447.6" y="1123.0" width="236.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.6" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (254 samples, 20.00%)</title><rect x="447.6" y="1107.0" width="236.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.6" y="1118.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (254 samples, 20.00%)</title><rect x="447.6" y="1091.0" width="236.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.6" y="1102.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (160 samples, 12.60%)</title><rect x="447.6" y="1075.0" width="148.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.6" y="1086.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (160 samples, 12.60%)</title><rect x="447.6" y="1059.0" width="148.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.6" y="1070.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (160 samples, 12.60%)</title><rect x="447.6" y="1043.0" width="148.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.6" y="1054.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.08%)</title><rect x="447.6" y="1027.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.08%)</title><rect x="447.6" y="1011.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (159 samples, 12.52%)</title><rect x="448.6" y="1027.0" width="147.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.6" y="1038.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (159 samples, 12.52%)</title><rect x="448.6" y="1011.0" width="147.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.6" y="1022.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 2.52%)</title><rect x="566.6" y="995.0" width="29.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.6" y="1006.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (19 samples, 1.50%)</title><rect x="567.5" y="979.0" width="17.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="570.5" y="990.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.08%)</title><rect x="569.3" y="963.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="572.3" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.39%)</title><rect x="570.3" y="963.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="573.3" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.08%)</title><rect x="574.9" y="963.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="577.9" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.79%)</title><rect x="575.8" y="963.0" width="9.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="578.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="581.4" y="947.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="584.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="581.4" y="931.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="584.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="582.3" y="915.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="585.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="582.3" y="899.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="585.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="582.3" y="883.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="585.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="584.2" y="867.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="587.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.94%)</title><rect x="585.1" y="979.0" width="11.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="588.1" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.94%)</title><rect x="585.1" y="963.0" width="11.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="588.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="587.0" y="947.0" width="9.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="590.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.79%)</title><rect x="587.0" y="931.0" width="9.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="590.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="588.9" y="915.0" width="7.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="591.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="588.9" y="899.0" width="7.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="591.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="588.9" y="883.0" width="7.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="591.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="589.8" y="867.0" width="6.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="592.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="590.7" y="851.0" width="5.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="593.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="592.6" y="835.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="595.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="592.6" y="819.0" width="3.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="595.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$59/695505923.run (94 samples, 7.40%)</title><rect x="596.3" y="1075.0" width="87.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.3" y="1086.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$asyncExecute$3 (94 samples, 7.40%)</title><rect x="596.3" y="1059.0" width="87.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.3" y="1070.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$88/1608053215.submit (18 samples, 1.42%)</title><rect x="597.2" y="1043.0" width="16.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$entity$1 (17 samples, 1.34%)</title><rect x="598.1" y="1027.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.upsert (17 samples, 1.34%)</title><rect x="598.1" y="1011.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.16%)</title><rect x="598.1" y="995.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.16%)</title><rect x="598.1" y="979.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.1" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="599.1" y="963.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="599.1" y="947.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.1" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="599.1" y="931.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="602.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (15 samples, 1.18%)</title><rect x="600.0" y="995.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (15 samples, 1.18%)</title><rect x="600.0" y="979.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.08%)</title><rect x="600.9" y="963.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.16%)</title><rect x="601.9" y="963.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.16%)</title><rect x="601.9" y="947.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.16%)</title><rect x="601.9" y="931.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.9" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.08%)</title><rect x="601.9" y="915.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.9" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.08%)</title><rect x="601.9" y="899.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.08%)</title><rect x="601.9" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.08%)</title><rect x="601.9" y="867.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter.&lt;init&gt; (1 samples, 0.08%)</title><rect x="601.9" y="851.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.08%)</title><rect x="602.8" y="915.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.8" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.08%)</title><rect x="602.8" y="899.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.08%)</title><rect x="602.8" y="883.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (11 samples, 0.87%)</title><rect x="603.7" y="963.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 0.87%)</title><rect x="603.7" y="947.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 0.87%)</title><rect x="603.7" y="931.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.08%)</title><rect x="605.6" y="915.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.08%)</title><rect x="605.6" y="899.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.08%)</title><rect x="605.6" y="883.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.6" y="894.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.08%)</title><rect x="605.6" y="867.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="608.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.08%)</title><rect x="606.5" y="915.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.47%)</title><rect x="607.4" y="915.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.47%)</title><rect x="607.4" y="899.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.4" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.39%)</title><rect x="608.4" y="883.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.4" y="894.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.24%)</title><rect x="610.2" y="867.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.24%)</title><rect x="610.2" y="851.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.2" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.16%)</title><rect x="611.1" y="835.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (1 samples, 0.08%)</title><rect x="613.0" y="915.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$ResponseUtils.sendResponse (75 samples, 5.91%)</title><rect x="613.9" y="1043.0" width="69.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.9" y="1054.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (75 samples, 5.91%)</title><rect x="613.9" y="1027.0" width="69.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.9" y="1038.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (73 samples, 5.75%)</title><rect x="613.9" y="1011.0" width="67.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.9" y="1022.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="613.9" y="995.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 5.67%)</title><rect x="614.9" y="995.0" width="66.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.9" y="1006.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 5.67%)</title><rect x="614.9" y="979.0" width="66.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.9" y="990.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (72 samples, 5.67%)</title><rect x="614.9" y="963.0" width="66.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.9" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (72 samples, 5.67%)</title><rect x="614.9" y="947.0" width="66.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.9" y="958.0">one/nio..</text>
</g>
<g>
<title>__send (71 samples, 5.59%)</title><rect x="615.8" y="931.0" width="66.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="618.8" y="942.0">__send</text>
</g>
<g>
<title>[unknown] (70 samples, 5.51%)</title><rect x="616.7" y="915.0" width="65.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="619.7" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 5.51%)</title><rect x="616.7" y="899.0" width="65.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="619.7" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 5.51%)</title><rect x="616.7" y="883.0" width="65.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="619.7" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 5.51%)</title><rect x="616.7" y="867.0" width="65.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="619.7" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 5.35%)</title><rect x="618.6" y="851.0" width="63.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="621.6" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (67 samples, 5.28%)</title><rect x="619.5" y="835.0" width="62.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="622.5" y="846.0">[unkno..</text>
</g>
<g>
<title>[unknown] (66 samples, 5.20%)</title><rect x="620.4" y="819.0" width="61.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="623.4" y="830.0">[unkno..</text>
</g>
<g>
<title>[unknown] (65 samples, 5.12%)</title><rect x="621.4" y="803.0" width="60.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="624.4" y="814.0">[unkno..</text>
</g>
<g>
<title>[unknown] (62 samples, 4.88%)</title><rect x="624.2" y="787.0" width="57.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="627.2" y="798.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 4.57%)</title><rect x="627.9" y="771.0" width="53.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="630.9" y="782.0">[unkn..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.25%)</title><rect x="631.6" y="755.0" width="50.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="634.6" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (52 samples, 4.09%)</title><rect x="633.4" y="739.0" width="48.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="636.4" y="750.0">[unk..</text>
</g>
<g>
<title>[unknown] (47 samples, 3.70%)</title><rect x="638.1" y="723.0" width="43.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="641.1" y="734.0">[unk..</text>
</g>
<g>
<title>[unknown] (46 samples, 3.62%)</title><rect x="639.0" y="707.0" width="42.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="642.0" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 3.54%)</title><rect x="640.0" y="691.0" width="41.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="643.0" y="702.0">[un..</text>
</g>
<g>
<title>[unknown] (45 samples, 3.54%)</title><rect x="640.0" y="675.0" width="41.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="643.0" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (44 samples, 3.46%)</title><rect x="640.9" y="659.0" width="40.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="643.9" y="670.0">[un..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.31%)</title><rect x="642.7" y="643.0" width="39.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="645.7" y="654.0">[un..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.15%)</title><rect x="644.6" y="627.0" width="37.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="647.6" y="638.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.99%)</title><rect x="646.5" y="611.0" width="35.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="649.5" y="622.0">[un..</text>
</g>
<g>
<title>[unknown] (36 samples, 2.83%)</title><rect x="648.3" y="595.0" width="33.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="651.3" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.68%)</title><rect x="650.2" y="579.0" width="31.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="653.2" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.44%)</title><rect x="653.0" y="563.0" width="28.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="656.0" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.36%)</title><rect x="653.9" y="547.0" width="27.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="656.9" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.36%)</title><rect x="653.9" y="531.0" width="27.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="656.9" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.36%)</title><rect x="653.9" y="515.0" width="27.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="656.9" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.36%)</title><rect x="653.9" y="499.0" width="27.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="656.9" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="654.8" y="483.0" width="27.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="657.8" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="654.8" y="467.0" width="27.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="657.8" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="654.8" y="451.0" width="27.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="657.8" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="654.8" y="435.0" width="27.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="657.8" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="654.8" y="419.0" width="27.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="657.8" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.20%)</title><rect x="655.7" y="403.0" width="26.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="658.7" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.97%)</title><rect x="658.5" y="387.0" width="23.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="661.5" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 1.89%)</title><rect x="659.5" y="371.0" width="22.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="662.5" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="661.3" y="355.0" width="20.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="664.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="667.8" y="339.0" width="14.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="670.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="667.8" y="323.0" width="14.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="670.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="667.8" y="307.0" width="14.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="670.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="680.8" y="291.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="683.8" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="680.8" y="275.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="683.8" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="680.8" y="259.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="683.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.08%)</title><rect x="681.8" y="1011.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethod (1 samples, 0.08%)</title><rect x="682.7" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.7" y="1022.0"></text>
</g>
<g>
<title>[NIO Worker #7 tid=31462] (138 samples, 10.87%)</title><rect x="683.6" y="1139.0" width="128.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="686.6" y="1150.0">[NIO Worker #7 t..</text>
</g>
<g>
<title>java/lang/Thread.run (138 samples, 10.87%)</title><rect x="683.6" y="1123.0" width="128.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.6" y="1134.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (138 samples, 10.87%)</title><rect x="683.6" y="1107.0" width="128.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.6" y="1118.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (138 samples, 10.87%)</title><rect x="683.6" y="1091.0" width="128.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="1102.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (71 samples, 5.59%)</title><rect x="683.6" y="1075.0" width="66.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.6" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (71 samples, 5.59%)</title><rect x="683.6" y="1059.0" width="66.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.6" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (71 samples, 5.59%)</title><rect x="683.6" y="1043.0" width="66.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.6" y="1054.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (71 samples, 5.59%)</title><rect x="683.6" y="1027.0" width="66.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.6" y="1038.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (71 samples, 5.59%)</title><rect x="683.6" y="1011.0" width="66.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.6" y="1022.0">java/ut..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="737.5" y="995.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="740.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="737.5" y="979.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="740.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="737.5" y="963.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="740.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.94%)</title><rect x="738.4" y="995.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.4" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.47%)</title><rect x="739.4" y="979.0" width="5.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="742.4" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.16%)</title><rect x="739.4" y="963.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="742.4" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.08%)</title><rect x="740.3" y="947.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="743.3" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.08%)</title><rect x="741.2" y="963.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="744.2" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.24%)</title><rect x="742.2" y="963.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="745.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="743.1" y="947.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="746.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="743.1" y="931.0" width="1.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="746.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="743.1" y="915.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="746.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="744.0" y="899.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="747.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="744.0" y="883.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="747.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="744.0" y="867.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="747.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="744.0" y="851.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="747.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="744.9" y="979.0" width="4.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="747.9" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.39%)</title><rect x="744.9" y="963.0" width="4.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="747.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="947.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="749.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="931.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="749.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="915.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="749.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="899.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="749.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="883.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="749.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="867.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="749.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="851.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="749.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="746.8" y="835.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="749.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="747.7" y="819.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="750.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$59/695505923.run (67 samples, 5.28%)</title><rect x="749.6" y="1075.0" width="62.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.6" y="1086.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$asyncExecute$3 (67 samples, 5.28%)</title><rect x="749.6" y="1059.0" width="62.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.6" y="1070.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$88/1608053215.submit (16 samples, 1.26%)</title><rect x="749.6" y="1043.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$entity$1 (15 samples, 1.18%)</title><rect x="750.5" y="1027.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.5" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.upsert (15 samples, 1.18%)</title><rect x="750.5" y="1011.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="750.5" y="995.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="750.5" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="750.5" y="963.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="750.5" y="947.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.5" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="750.5" y="931.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (14 samples, 1.10%)</title><rect x="751.4" y="995.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (14 samples, 1.10%)</title><rect x="751.4" y="979.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.08%)</title><rect x="752.4" y="963.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.08%)</title><rect x="752.4" y="947.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.08%)</title><rect x="752.4" y="931.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.08%)</title><rect x="752.4" y="915.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.08%)</title><rect x="752.4" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.08%)</title><rect x="752.4" y="883.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (12 samples, 0.94%)</title><rect x="753.3" y="963.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (12 samples, 0.94%)</title><rect x="753.3" y="947.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.94%)</title><rect x="753.3" y="931.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.16%)</title><rect x="755.2" y="915.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.2" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.16%)</title><rect x="755.2" y="899.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.08%)</title><rect x="757.0" y="915.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.08%)</title><rect x="757.0" y="899.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.08%)</title><rect x="757.0" y="883.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.08%)</title><rect x="757.0" y="867.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.0" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.08%)</title><rect x="757.0" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="757.0" y="835.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.55%)</title><rect x="758.0" y="915.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.55%)</title><rect x="758.0" y="899.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.47%)</title><rect x="758.9" y="883.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.9" y="894.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.47%)</title><rect x="758.9" y="867.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.9" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.47%)</title><rect x="758.9" y="851.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.9" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.24%)</title><rect x="761.7" y="835.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$ResponseUtils.sendResponse (51 samples, 4.02%)</title><rect x="764.5" y="1043.0" width="47.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.5" y="1054.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 4.02%)</title><rect x="764.5" y="1027.0" width="47.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.5" y="1038.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.08%)</title><rect x="765.4" y="1011.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="765.4" y="995.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="765.4" y="979.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.4" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 3.70%)</title><rect x="766.3" y="1011.0" width="43.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.3" y="1022.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.24%)</title><rect x="766.3" y="995.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.08%)</title><rect x="768.2" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.08%)</title><rect x="768.2" y="963.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.08%)</title><rect x="768.2" y="947.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.08%)</title><rect x="768.2" y="931.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 3.46%)</title><rect x="769.1" y="995.0" width="40.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.1" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 3.46%)</title><rect x="769.1" y="979.0" width="40.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.1" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (44 samples, 3.46%)</title><rect x="769.1" y="963.0" width="40.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.1" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (44 samples, 3.46%)</title><rect x="769.1" y="947.0" width="40.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.1" y="958.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.16%)</title><rect x="769.1" y="931.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="772.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="771.0" y="931.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="774.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="771.0" y="915.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="774.0" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.08%)</title><rect x="771.0" y="899.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="774.0" y="910.0"></text>
</g>
<g>
<title>__send (41 samples, 3.23%)</title><rect x="771.9" y="931.0" width="38.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="774.9" y="942.0">__s..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="915.0" width="38.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="774.9" y="926.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="899.0" width="38.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="774.9" y="910.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="883.0" width="38.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="774.9" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="867.0" width="38.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="774.9" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="851.0" width="38.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="774.9" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="835.0" width="38.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="774.9" y="846.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="819.0" width="38.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="774.9" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="771.9" y="803.0" width="38.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="774.9" y="814.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.99%)</title><rect x="774.7" y="787.0" width="35.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="777.7" y="798.0">[un..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.91%)</title><rect x="775.6" y="771.0" width="34.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="778.6" y="782.0">[u..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.91%)</title><rect x="775.6" y="755.0" width="34.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="778.6" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.68%)</title><rect x="778.4" y="739.0" width="31.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="781.4" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="779.3" y="723.0" width="30.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="782.3" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="779.3" y="707.0" width="30.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="782.3" y="718.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="779.3" y="691.0" width="30.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="782.3" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="779.3" y="675.0" width="30.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="782.3" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.44%)</title><rect x="781.2" y="659.0" width="28.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="784.2" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.36%)</title><rect x="782.1" y="643.0" width="27.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="785.1" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="783.0" y="627.0" width="27.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="786.0" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.28%)</title><rect x="783.0" y="611.0" width="27.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="786.0" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.20%)</title><rect x="784.0" y="595.0" width="26.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="787.0" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.20%)</title><rect x="784.0" y="579.0" width="26.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="787.0" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="784.9" y="563.0" width="25.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="787.9" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="784.9" y="547.0" width="25.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="787.9" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.05%)</title><rect x="785.8" y="531.0" width="24.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="788.8" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.81%)</title><rect x="788.6" y="515.0" width="21.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="791.6" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.81%)</title><rect x="788.6" y="499.0" width="21.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="791.6" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="789.5" y="483.0" width="20.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="792.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.73%)</title><rect x="789.5" y="467.0" width="20.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="792.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="791.4" y="451.0" width="18.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="794.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="791.4" y="435.0" width="18.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="794.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.57%)</title><rect x="791.4" y="419.0" width="18.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="794.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.26%)</title><rect x="795.1" y="403.0" width="14.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="798.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="796.0" y="387.0" width="14.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="799.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 1.10%)</title><rect x="797.0" y="371.0" width="13.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="800.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="799.8" y="355.0" width="10.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="802.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.71%)</title><rect x="801.6" y="339.0" width="8.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="804.6" y="350.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="804.4" y="323.0" width="5.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="807.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="804.4" y="307.0" width="5.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="807.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.16%)</title><rect x="810.0" y="1011.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.16%)</title><rect x="810.0" y="995.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.16%)</title><rect x="810.0" y="979.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.08%)</title><rect x="810.0" y="963.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="810.9" y="963.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="810.9" y="947.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.9" y="958.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.08%)</title><rect x="810.9" y="931.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.9" y="942.0"></text>
</g>
<g>
<title>[NIO Worker #8 tid=31464] (268 samples, 21.10%)</title><rect x="811.8" y="1139.0" width="249.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="814.8" y="1150.0">[NIO Worker #8 tid=31464]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.08%)</title><rect x="811.8" y="1123.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="814.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (267 samples, 21.02%)</title><rect x="812.8" y="1123.0" width="248.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.8" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (267 samples, 21.02%)</title><rect x="812.8" y="1107.0" width="248.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.8" y="1118.0">java/util/concurrent/ThreadPoolEx..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (267 samples, 21.02%)</title><rect x="812.8" y="1091.0" width="248.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.8" y="1102.0">java/util/concurrent/ThreadPoolEx..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (163 samples, 12.83%)</title><rect x="812.8" y="1075.0" width="151.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.8" y="1086.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (163 samples, 12.83%)</title><rect x="812.8" y="1059.0" width="151.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.8" y="1070.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (162 samples, 12.76%)</title><rect x="813.7" y="1043.0" width="150.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.7" y="1054.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (162 samples, 12.76%)</title><rect x="813.7" y="1027.0" width="150.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.7" y="1038.0">java/util/concurren..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.16%)</title><rect x="817.4" y="1011.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (156 samples, 12.28%)</title><rect x="819.3" y="1011.0" width="144.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.3" y="1022.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 2.13%)</title><rect x="939.1" y="995.0" width="25.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.1" y="1006.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.08%)</title><rect x="939.1" y="979.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="942.1" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.08%)</title><rect x="940.1" y="979.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="943.1" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.63%)</title><rect x="941.0" y="979.0" width="7.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="944.0" y="990.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.08%)</title><rect x="941.0" y="963.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="944.0" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.31%)</title><rect x="941.9" y="963.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="944.9" y="974.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.08%)</title><rect x="944.7" y="947.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="947.7" y="958.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="945.6" y="963.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="948.6" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.08%)</title><rect x="946.6" y="963.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="949.6" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.08%)</title><rect x="947.5" y="963.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="950.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.34%)</title><rect x="948.4" y="979.0" width="15.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="951.4" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (17 samples, 1.34%)</title><rect x="948.4" y="963.0" width="15.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="951.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="954.0" y="947.0" width="10.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="957.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.87%)</title><rect x="954.0" y="931.0" width="10.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="957.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="956.8" y="915.0" width="7.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="959.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.63%)</title><rect x="956.8" y="899.0" width="7.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="959.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="957.7" y="883.0" width="6.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="960.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="957.7" y="867.0" width="6.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="960.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.24%)</title><rect x="961.4" y="851.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="964.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="962.4" y="835.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="965.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="962.4" y="819.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="965.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$59/695505923.run (104 samples, 8.19%)</title><rect x="964.2" y="1075.0" width="96.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.2" y="1086.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$asyncExecute$3 (104 samples, 8.19%)</title><rect x="964.2" y="1059.0" width="96.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.2" y="1070.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$$Lambda$88/1608053215.submit (22 samples, 1.73%)</title><rect x="964.2" y="1043.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.lambda$entity$1 (22 samples, 1.73%)</title><rect x="964.2" y="1027.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService.upsert (22 samples, 1.73%)</title><rect x="964.2" y="1011.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="964.2" y="995.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="964.2" y="979.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="964.2" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="964.2" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="964.2" y="931.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="967.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/LSMDao.upsert (21 samples, 1.65%)</title><rect x="965.1" y="995.0" width="19.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemoryTablePool.upsert (21 samples, 1.65%)</title><rect x="965.1" y="979.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/storage/table/MemTable.upsert (21 samples, 1.65%)</title><rect x="965.1" y="963.0" width="19.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (21 samples, 1.65%)</title><rect x="965.1" y="947.0" width="19.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (21 samples, 1.65%)</title><rect x="965.1" y="931.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (2 samples, 0.16%)</title><rect x="967.0" y="915.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.16%)</title><rect x="968.9" y="915.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.08%)</title><rect x="970.7" y="915.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.08%)</title><rect x="970.7" y="899.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.08%)</title><rect x="970.7" y="883.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.08%)</title><rect x="970.7" y="867.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.08%)</title><rect x="970.7" y="851.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 1.10%)</title><rect x="971.7" y="915.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 1.10%)</title><rect x="971.7" y="899.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.7" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 1.10%)</title><rect x="971.7" y="883.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.08%)</title><rect x="971.7" y="867.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.7" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.08%)</title><rect x="972.6" y="867.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.6" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.79%)</title><rect x="973.5" y="867.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.5" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.71%)</title><rect x="974.4" y="851.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="979.1" y="835.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="982.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="979.1" y="819.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="982.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="979.1" y="803.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="982.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="979.1" y="787.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="982.1" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.08%)</title><rect x="980.0" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.0" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.16%)</title><rect x="980.9" y="835.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.9" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.16%)</title><rect x="982.8" y="867.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.8" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.08%)</title><rect x="982.8" y="851.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.8" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.08%)</title><rect x="983.7" y="851.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/rest/RestService$ResponseUtils.sendResponse (82 samples, 6.46%)</title><rect x="984.7" y="1043.0" width="76.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.7" y="1054.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (82 samples, 6.46%)</title><rect x="984.7" y="1027.0" width="76.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.7" y="1038.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.08%)</title><rect x="985.6" y="1011.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="985.6" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="988.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="985.6" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.6" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="985.6" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (79 samples, 6.22%)</title><rect x="986.5" y="1011.0" width="73.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.5" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.24%)</title><rect x="986.5" y="995.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.16%)</title><rect x="987.4" y="979.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.16%)</title><rect x="987.4" y="963.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.4" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.16%)</title><rect x="987.4" y="947.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.16%)</title><rect x="987.4" y="931.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 5.98%)</title><rect x="989.3" y="995.0" width="70.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 5.98%)</title><rect x="989.3" y="979.0" width="70.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.3" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (76 samples, 5.98%)</title><rect x="989.3" y="963.0" width="70.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.3" y="974.0">one/nio/..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.08%)</title><rect x="989.3" y="947.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="992.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (75 samples, 5.91%)</title><rect x="990.2" y="947.0" width="69.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.2" y="958.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.08%)</title><rect x="991.2" y="931.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="994.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="992.1" y="931.0" width="4.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="995.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="992.1" y="915.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="995.1" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.31%)</title><rect x="992.1" y="899.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="995.1" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.08%)</title><rect x="992.1" y="883.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="995.1" y="894.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="993.0" y="883.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="996.0" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.16%)</title><rect x="994.0" y="883.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="997.0" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="994.9" y="867.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="997.9" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="995.8" y="899.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="998.8" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.08%)</title><rect x="996.7" y="931.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="999.7" y="942.0"></text>
</g>
<g>
<title>__send (67 samples, 5.28%)</title><rect x="997.7" y="931.0" width="62.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1000.7" y="942.0">__send</text>
</g>
<g>
<title>[unknown] (65 samples, 5.12%)</title><rect x="999.5" y="915.0" width="60.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1002.5" y="926.0">[unkno..</text>
</g>
<g>
<title>[unknown] (65 samples, 5.12%)</title><rect x="999.5" y="899.0" width="60.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1002.5" y="910.0">[unkno..</text>
</g>
<g>
<title>[unknown] (65 samples, 5.12%)</title><rect x="999.5" y="883.0" width="60.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1002.5" y="894.0">[unkno..</text>
</g>
<g>
<title>[unknown] (65 samples, 5.12%)</title><rect x="999.5" y="867.0" width="60.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1002.5" y="878.0">[unkno..</text>
</g>
<g>
<title>[unknown] (65 samples, 5.12%)</title><rect x="999.5" y="851.0" width="60.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1002.5" y="862.0">[unkno..</text>
</g>
<g>
<title>[unknown] (64 samples, 5.04%)</title><rect x="1000.5" y="835.0" width="59.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1003.5" y="846.0">[unkno..</text>
</g>
<g>
<title>[unknown] (64 samples, 5.04%)</title><rect x="1000.5" y="819.0" width="59.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1003.5" y="830.0">[unkno..</text>
</g>
<g>
<title>[unknown] (63 samples, 4.96%)</title><rect x="1001.4" y="803.0" width="58.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1004.4" y="814.0">[unkno..</text>
</g>
<g>
<title>[unknown] (61 samples, 4.80%)</title><rect x="1003.2" y="787.0" width="56.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1006.2" y="798.0">[unkno..</text>
</g>
<g>
<title>[unknown] (60 samples, 4.72%)</title><rect x="1004.2" y="771.0" width="55.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1007.2" y="782.0">[unkn..</text>
</g>
<g>
<title>[unknown] (59 samples, 4.65%)</title><rect x="1005.1" y="755.0" width="54.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1008.1" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (57 samples, 4.49%)</title><rect x="1007.0" y="739.0" width="52.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1010.0" y="750.0">[unkn..</text>
</g>
<g>
<title>[unknown] (53 samples, 4.17%)</title><rect x="1010.7" y="723.0" width="49.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1013.7" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (52 samples, 4.09%)</title><rect x="1011.6" y="707.0" width="48.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1014.6" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.02%)</title><rect x="1012.5" y="691.0" width="47.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1015.5" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.02%)</title><rect x="1012.5" y="675.0" width="47.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1015.5" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (47 samples, 3.70%)</title><rect x="1016.3" y="659.0" width="43.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1019.3" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (47 samples, 3.70%)</title><rect x="1016.3" y="643.0" width="43.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1019.3" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 3.54%)</title><rect x="1018.1" y="627.0" width="41.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1021.1" y="638.0">[un..</text>
</g>
<g>
<title>[unknown] (44 samples, 3.46%)</title><rect x="1019.0" y="611.0" width="40.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1022.0" y="622.0">[un..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.31%)</title><rect x="1020.9" y="595.0" width="39.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1023.9" y="606.0">[un..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.23%)</title><rect x="1021.8" y="579.0" width="38.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1024.8" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (35 samples, 2.76%)</title><rect x="1027.4" y="563.0" width="32.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1030.4" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="1029.3" y="547.0" width="30.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1032.3" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="1029.3" y="531.0" width="30.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1032.3" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="1029.3" y="515.0" width="30.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1032.3" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="1029.3" y="499.0" width="30.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1032.3" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.60%)</title><rect x="1029.3" y="483.0" width="30.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1032.3" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.52%)</title><rect x="1030.2" y="467.0" width="29.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1033.2" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.52%)</title><rect x="1030.2" y="451.0" width="29.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1033.2" y="462.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.52%)</title><rect x="1030.2" y="435.0" width="29.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1033.2" y="446.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.36%)</title><rect x="1032.0" y="419.0" width="27.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1035.0" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.13%)</title><rect x="1034.8" y="403.0" width="25.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1037.8" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.97%)</title><rect x="1036.7" y="387.0" width="23.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1039.7" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.81%)</title><rect x="1038.6" y="371.0" width="21.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1041.6" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (18 samples, 1.42%)</title><rect x="1043.2" y="355.0" width="16.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1046.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.26%)</title><rect x="1045.1" y="339.0" width="14.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1048.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="1046.0" y="323.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1049.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.18%)</title><rect x="1046.0" y="307.0" width="13.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1049.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1059.0" y="291.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1062.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1059.0" y="275.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1062.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.08%)</title><rect x="1059.9" y="1011.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="1059.9" y="995.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="1059.9" y="979.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="1059.9" y="963.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="1059.9" y="947.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.9" y="958.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.08%)</title><rect x="1059.9" y="931.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.9" y="942.0"></text>
</g>
<g>
<title>[tid=31433] (2 samples, 0.16%)</title><rect x="1060.9" y="1139.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1063.9" y="1150.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.16%)</title><rect x="1060.9" y="1123.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1063.9" y="1134.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.16%)</title><rect x="1060.9" y="1107.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1063.9" y="1118.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.16%)</title><rect x="1060.9" y="1091.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1063.9" y="1102.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.16%)</title><rect x="1060.9" y="1075.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.9" y="1086.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.16%)</title><rect x="1060.9" y="1059.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1063.9" y="1070.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.16%)</title><rect x="1060.9" y="1043.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.9" y="1054.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.16%)</title><rect x="1060.9" y="1027.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1063.9" y="1038.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.08%)</title><rect x="1060.9" y="1011.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1063.9" y="1022.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.08%)</title><rect x="1060.9" y="995.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.9" y="1006.0"></text>
</g>
<g>
<title>G1Analytics::predict_object_copy_time_ms(unsigned long, bool) const (1 samples, 0.08%)</title><rect x="1060.9" y="979.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1063.9" y="990.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.08%)</title><rect x="1060.9" y="963.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.9" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.08%)</title><rect x="1061.8" y="1011.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.8" y="1022.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.08%)</title><rect x="1061.8" y="995.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.8" y="1006.0"></text>
</g>
<g>
<title>[tid=31438] (123 samples, 9.69%)</title><rect x="1062.7" y="1139.0" width="114.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1065.7" y="1150.0">[tid=31438]</text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 0.08%)</title><rect x="1062.7" y="1123.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1065.7" y="1134.0"></text>
</g>
<g>
<title>ciBaseObject::ident() (1 samples, 0.08%)</title><rect x="1062.7" y="1107.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1065.7" y="1118.0"></text>
</g>
<g>
<title>start_thread (122 samples, 9.61%)</title><rect x="1063.6" y="1123.0" width="113.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1066.6" y="1134.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (122 samples, 9.61%)</title><rect x="1063.6" y="1107.0" width="113.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1066.6" y="1118.0">thread_native_..</text>
</g>
<g>
<title>Thread::call_run() (122 samples, 9.61%)</title><rect x="1063.6" y="1091.0" width="113.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1066.6" y="1102.0">Thread::call_r..</text>
</g>
<g>
<title>JavaThread::run() (122 samples, 9.61%)</title><rect x="1063.6" y="1075.0" width="113.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1066.6" y="1086.0">JavaThread::ru..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (122 samples, 9.61%)</title><rect x="1063.6" y="1059.0" width="113.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1066.6" y="1070.0">JavaThread::th..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (122 samples, 9.61%)</title><rect x="1063.6" y="1043.0" width="113.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1066.6" y="1054.0">CompileBroker:..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (122 samples, 9.61%)</title><rect x="1063.6" y="1027.0" width="113.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.6" y="1038.0">CompileBroker:..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (122 samples, 9.61%)</title><rect x="1063.6" y="1011.0" width="113.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1066.6" y="1022.0">C2Compiler::co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (122 samples, 9.61%)</title><rect x="1063.6" y="995.0" width="113.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1066.6" y="1006.0">Compile::Compi..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.16%)</title><rect x="1063.6" y="979.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1066.6" y="990.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.16%)</title><rect x="1063.6" y="963.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1066.6" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.16%)</title><rect x="1063.6" y="947.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1066.6" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.16%)</title><rect x="1063.6" y="931.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1066.6" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.16%)</title><rect x="1063.6" y="915.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1066.6" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.16%)</title><rect x="1063.6" y="899.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.6" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.16%)</title><rect x="1063.6" y="883.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1066.6" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.16%)</title><rect x="1063.6" y="867.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.6" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1063.6" y="851.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1066.6" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1063.6" y="835.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1066.6" y="846.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1063.6" y="819.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.6" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.08%)</title><rect x="1064.6" y="851.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1067.6" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1064.6" y="835.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1067.6" y="846.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1064.6" y="819.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.6" y="830.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_method(ciInstanceKlass*, ciSymbol*, ciSymbol*, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1064.6" y="803.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1067.6" y="814.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(ciInstanceKlass*, ciSymbol*, ciSymbol*, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1064.6" y="787.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.6" y="798.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.08%)</title><rect x="1064.6" y="771.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.6" y="782.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.08%)</title><rect x="1064.6" y="755.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.6" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (73 samples, 5.75%)</title><rect x="1065.5" y="979.0" width="67.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1068.5" y="990.0">Compile..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.08%)</title><rect x="1065.5" y="963.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1068.5" y="974.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.08%)</title><rect x="1065.5" y="947.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1068.5" y="958.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.08%)</title><rect x="1065.5" y="931.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1068.5" y="942.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.08%)</title><rect x="1066.4" y="963.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.4" y="974.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.08%)</title><rect x="1066.4" y="947.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.4" y="958.0"></text>
</g>
<g>
<title>PcDesc::PcDesc(int, int, int) (1 samples, 0.08%)</title><rect x="1066.4" y="931.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.4" y="942.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.08%)</title><rect x="1067.4" y="963.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.4" y="974.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.31%)</title><rect x="1068.3" y="963.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1071.3" y="974.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.31%)</title><rect x="1068.3" y="947.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1071.3" y="958.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.24%)</title><rect x="1069.2" y="931.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1072.2" y="942.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.24%)</title><rect x="1069.2" y="915.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.2" y="926.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.16%)</title><rect x="1070.1" y="899.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1073.1" y="910.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1071.1" y="883.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1074.1" y="894.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1071.1" y="867.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1074.1" y="878.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.08%)</title><rect x="1071.1" y="851.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1074.1" y="862.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.08%)</title><rect x="1071.1" y="835.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1074.1" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (7 samples, 0.55%)</title><rect x="1072.0" y="963.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.0" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (7 samples, 0.55%)</title><rect x="1072.0" y="947.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1075.0" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.16%)</title><rect x="1072.9" y="931.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1075.9" y="942.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.08%)</title><rect x="1072.9" y="915.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.9" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.08%)</title><rect x="1073.9" y="915.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1076.9" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.16%)</title><rect x="1074.8" y="931.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1077.8" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.08%)</title><rect x="1075.7" y="915.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.7" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&amp;, Matcher&amp;, bool) (1 samples, 0.08%)</title><rect x="1076.6" y="931.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1079.6" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.08%)</title><rect x="1077.6" y="931.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.6" y="942.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.08%)</title><rect x="1077.6" y="915.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.6" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::fixup_flow() (1 samples, 0.08%)</title><rect x="1078.5" y="963.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.5" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (58 samples, 4.57%)</title><rect x="1079.4" y="963.0" width="53.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.4" y="974.0">Phase..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.08%)</title><rect x="1080.4" y="947.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1083.4" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.16%)</title><rect x="1081.3" y="947.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1084.3" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1082.2" y="931.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1085.2" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.24%)</title><rect x="1083.1" y="947.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1086.1" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1084.1" y="931.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1087.1" y="942.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.08%)</title><rect x="1085.0" y="931.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1088.0" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.31%)</title><rect x="1085.9" y="947.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.9" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.08%)</title><rect x="1086.9" y="931.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.9" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.08%)</title><rect x="1086.9" y="915.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.9" y="926.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.08%)</title><rect x="1086.9" y="899.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.9" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (1 samples, 0.08%)</title><rect x="1087.8" y="931.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.8" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="1087.8" y="915.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1090.8" y="926.0"></text>
</g>
<g>
<title>loadNKlassNode::rule() const (1 samples, 0.08%)</title><rect x="1088.7" y="931.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1091.7" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (18 samples, 1.42%)</title><rect x="1089.7" y="947.0" width="16.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1092.7" y="958.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.08%)</title><rect x="1090.6" y="931.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1093.6" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (5 samples, 0.39%)</title><rect x="1091.5" y="931.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.5" y="942.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.08%)</title><rect x="1092.4" y="915.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1095.4" y="926.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.08%)</title><rect x="1093.4" y="915.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1096.4" y="926.0"></text>
</g>
<g>
<title>andI_rRegNode::rule() const (1 samples, 0.08%)</title><rect x="1094.3" y="915.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.3" y="926.0"></text>
</g>
<g>
<title>compN_rReg_imm_klassNode::rule() const (1 samples, 0.08%)</title><rect x="1095.2" y="915.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.2" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.08%)</title><rect x="1096.2" y="931.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1099.2" y="942.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1096.2" y="915.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1099.2" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (5 samples, 0.39%)</title><rect x="1097.1" y="931.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.1" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::lower_pressure(Block*, unsigned int, LRG&amp;, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.08%)</title><rect x="1101.7" y="931.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1104.7" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.31%)</title><rect x="1102.7" y="931.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1105.7" y="942.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.08%)</title><rect x="1103.6" y="915.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.6" y="926.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.16%)</title><rect x="1104.5" y="915.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.5" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (2 samples, 0.16%)</title><rect x="1106.4" y="947.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1109.4" y="958.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.08%)</title><rect x="1106.4" y="931.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1109.4" y="942.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.08%)</title><rect x="1107.3" y="931.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.3" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (11 samples, 0.87%)</title><rect x="1108.2" y="947.0" width="10.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.2" y="958.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.31%)</title><rect x="1113.8" y="931.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.8" y="942.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.08%)</title><rect x="1117.5" y="931.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.5" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (7 samples, 0.55%)</title><rect x="1118.5" y="947.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.5" y="958.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.08%)</title><rect x="1122.2" y="931.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.2" y="942.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.08%)</title><rect x="1122.2" y="915.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.2" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="1122.2" y="899.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1125.2" y="910.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.16%)</title><rect x="1123.1" y="931.0" width="1.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1126.1" y="942.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.24%)</title><rect x="1125.0" y="947.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.0" y="958.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.08%)</title><rect x="1125.0" y="931.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1128.0" y="942.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.16%)</title><rect x="1125.9" y="931.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.9" y="942.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (2 samples, 0.16%)</title><rect x="1125.9" y="915.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.9" y="926.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.08%)</title><rect x="1125.9" y="899.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.9" y="910.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.08%)</title><rect x="1126.8" y="899.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.8" y="910.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1126.8" y="883.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1129.8" y="894.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.16%)</title><rect x="1127.7" y="947.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.7" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1128.7" y="931.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.7" y="942.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.24%)</title><rect x="1129.6" y="947.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1132.6" y="958.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.24%)</title><rect x="1129.6" y="931.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.6" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.08%)</title><rect x="1132.4" y="947.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1135.4" y="958.0"></text>
</g>
<g>
<title>Compile::Optimize() (31 samples, 2.44%)</title><rect x="1133.3" y="979.0" width="28.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.3" y="990.0">Co..</text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) (2 samples, 0.16%)</title><rect x="1133.3" y="963.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.3" y="974.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.08%)</title><rect x="1134.3" y="947.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.3" y="958.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (4 samples, 0.31%)</title><rect x="1135.2" y="963.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.2" y="974.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.08%)</title><rect x="1136.1" y="947.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.1" y="958.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.08%)</title><rect x="1136.1" y="931.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.1" y="942.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1136.1" y="915.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.1" y="926.0"></text>
</g>
<g>
<title>LoadNKlassNode::Value(PhaseGVN*) const (1 samples, 0.08%)</title><rect x="1137.0" y="947.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.0" y="958.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_interface() (1 samples, 0.08%)</title><rect x="1137.0" y="931.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.0" y="942.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.08%)</title><rect x="1138.0" y="947.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.0" y="958.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.08%)</title><rect x="1138.0" y="931.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.0" y="942.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.08%)</title><rect x="1138.0" y="915.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.0" y="926.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.08%)</title><rect x="1138.9" y="963.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.9" y="974.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.08%)</title><rect x="1138.9" y="947.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.9" y="958.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.08%)</title><rect x="1138.9" y="931.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.9" y="942.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.08%)</title><rect x="1138.9" y="915.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.9" y="926.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1138.9" y="899.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.9" y="910.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1138.9" y="883.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.9" y="894.0"></text>
</g>
<g>
<title>TypeOopPtr::klass() const (1 samples, 0.08%)</title><rect x="1138.9" y="867.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.9" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (22 samples, 1.73%)</title><rect x="1139.8" y="963.0" width="20.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1142.8" y="974.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.08%)</title><rect x="1139.8" y="947.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.8" y="958.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.24%)</title><rect x="1140.8" y="947.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.8" y="958.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.24%)</title><rect x="1140.8" y="931.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.8" y="942.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.16%)</title><rect x="1140.8" y="915.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.8" y="926.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.16%)</title><rect x="1140.8" y="899.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.8" y="910.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.16%)</title><rect x="1140.8" y="883.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.8" y="894.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1140.8" y="867.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1143.8" y="878.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1140.8" y="851.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.8" y="862.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1140.8" y="835.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.8" y="846.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1140.8" y="819.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.08%)</title><rect x="1140.8" y="803.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.8" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.08%)</title><rect x="1140.8" y="787.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.8" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.158] (1 samples, 0.08%)</title><rect x="1140.8" y="771.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.8" y="782.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1141.7" y="867.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.7" y="878.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_unswitching(PhaseIdealLoop*) const (1 samples, 0.08%)</title><rect x="1141.7" y="851.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.7" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::find_unswitching_candidate(IdealLoopTree const*) const (1 samples, 0.08%)</title><rect x="1141.7" y="835.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.7" y="846.0"></text>
</g>
<g>
<title>Opaque1Node::Opcode() const (1 samples, 0.08%)</title><rect x="1142.6" y="915.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.6" y="926.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.08%)</title><rect x="1143.5" y="947.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.5" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.24%)</title><rect x="1144.5" y="947.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.5" y="958.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.08%)</title><rect x="1146.3" y="931.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.3" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.08%)</title><rect x="1147.3" y="947.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.3" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.24%)</title><rect x="1148.2" y="947.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.2" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.24%)</title><rect x="1148.2" y="931.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.2" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.16%)</title><rect x="1149.1" y="915.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.1" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.16%)</title><rect x="1149.1" y="899.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.1" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.24%)</title><rect x="1151.0" y="947.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.0" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (3 samples, 0.24%)</title><rect x="1153.8" y="947.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.8" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.08%)</title><rect x="1154.7" y="931.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.7" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.08%)</title><rect x="1154.7" y="915.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.08%)</title><rect x="1154.7" y="899.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.7" y="910.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.08%)</title><rect x="1154.7" y="883.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.7" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.08%)</title><rect x="1155.6" y="931.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.6" y="942.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.08%)</title><rect x="1155.6" y="915.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.6" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.24%)</title><rect x="1156.6" y="947.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.6" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.24%)</title><rect x="1156.6" y="931.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.6" y="942.0"></text>
</g>
<g>
<title>ConvI2LNode::Value(PhaseGVN*) const (1 samples, 0.08%)</title><rect x="1157.5" y="915.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.5" y="926.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1157.5" y="899.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.5" y="910.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1157.5" y="883.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.5" y="894.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.08%)</title><rect x="1157.5" y="867.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.5" y="878.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.08%)</title><rect x="1157.5" y="851.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.5" y="862.0"></text>
</g>
<g>
<title>ciBaseObject::ident() (1 samples, 0.08%)</title><rect x="1157.5" y="835.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.5" y="846.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1158.4" y="915.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.4" y="926.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.08%)</title><rect x="1159.3" y="947.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.3" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.16%)</title><rect x="1160.3" y="963.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.3" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.16%)</title><rect x="1160.3" y="947.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.3" y="958.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1160.3" y="931.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.3" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.08%)</title><rect x="1160.3" y="915.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.3" y="926.0"></text>
</g>
<g>
<title>CastPPNode::Opcode() const (1 samples, 0.08%)</title><rect x="1160.3" y="899.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.3" y="910.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.08%)</title><rect x="1161.2" y="931.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.2" y="942.0"></text>
</g>
<g>
<title>TypeRawPtr::hash() const (1 samples, 0.08%)</title><rect x="1161.2" y="915.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.2" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 1.10%)</title><rect x="1162.1" y="979.0" width="13.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.1" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 1.10%)</title><rect x="1162.1" y="963.0" width="13.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.1" y="974.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.08%)</title><rect x="1162.1" y="947.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.1" y="958.0"></text>
</g>
<g>
<title>MergeMemNode::bottom_type() const (1 samples, 0.08%)</title><rect x="1162.1" y="931.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 1.02%)</title><rect x="1163.1" y="947.0" width="12.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.1" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.94%)</title><rect x="1163.1" y="931.0" width="11.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.94%)</title><rect x="1163.1" y="915.0" width="11.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.94%)</title><rect x="1163.1" y="899.0" width="11.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.1" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1163.1" y="883.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.1" y="894.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1163.1" y="867.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.1" y="878.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1163.1" y="851.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.1" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1163.1" y="835.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.1" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1163.1" y="819.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.1" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1163.1" y="803.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.1" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1163.1" y="787.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.1" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1163.1" y="771.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.1" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1163.1" y="755.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.1" y="766.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1163.1" y="739.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.1" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1163.1" y="723.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.1" y="734.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1163.1" y="707.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.1" y="718.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1163.1" y="691.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.1" y="702.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1163.1" y="675.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.1" y="686.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.08%)</title><rect x="1163.1" y="659.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.1" y="670.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.08%)</title><rect x="1163.1" y="643.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.1" y="654.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.08%)</title><rect x="1163.1" y="627.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1166.1" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.71%)</title><rect x="1164.0" y="883.0" width="8.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.0" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.71%)</title><rect x="1164.0" y="867.0" width="8.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.63%)</title><rect x="1164.0" y="851.0" width="7.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.63%)</title><rect x="1164.0" y="835.0" width="7.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.63%)</title><rect x="1164.0" y="819.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.47%)</title><rect x="1164.0" y="803.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.0" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.39%)</title><rect x="1164.0" y="787.0" width="4.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.0" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.39%)</title><rect x="1164.0" y="771.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.39%)</title><rect x="1164.0" y="755.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.39%)</title><rect x="1164.0" y="739.0" width="4.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.39%)</title><rect x="1164.0" y="723.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.39%)</title><rect x="1164.0" y="707.0" width="4.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.39%)</title><rect x="1164.0" y="691.0" width="4.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.39%)</title><rect x="1164.0" y="675.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.0" y="686.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.08%)</title><rect x="1164.0" y="659.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.31%)</title><rect x="1164.9" y="659.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.31%)</title><rect x="1164.9" y="643.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.31%)</title><rect x="1164.9" y="627.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.31%)</title><rect x="1164.9" y="611.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.9" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.31%)</title><rect x="1164.9" y="595.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.9" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.31%)</title><rect x="1164.9" y="579.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.31%)</title><rect x="1164.9" y="563.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.31%)</title><rect x="1164.9" y="547.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.31%)</title><rect x="1164.9" y="531.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.9" y="542.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.08%)</title><rect x="1164.9" y="515.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.9" y="526.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.08%)</title><rect x="1164.9" y="499.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.9" y="510.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1164.9" y="483.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.9" y="494.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1164.9" y="467.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.9" y="478.0"></text>
</g>
<g>
<title>BoolNode::fold_cmpI(PhaseGVN*, SubNode*, Node*, int, int, TypeInt const*) (1 samples, 0.08%)</title><rect x="1164.9" y="451.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.24%)</title><rect x="1165.8" y="515.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.8" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.24%)</title><rect x="1165.8" y="499.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.8" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.24%)</title><rect x="1165.8" y="483.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.8" y="494.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.08%)</title><rect x="1165.8" y="467.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.8" y="478.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.08%)</title><rect x="1165.8" y="451.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1166.8" y="467.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1166.8" y="451.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1166.8" y="435.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1166.8" y="419.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.8" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1166.8" y="403.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.8" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1166.8" y="387.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1166.8" y="371.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1166.8" y="355.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1166.8" y="339.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1166.8" y="323.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.8" y="334.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1166.8" y="307.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.8" y="318.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1166.8" y="291.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.8" y="302.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1166.8" y="275.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.8" y="286.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1166.8" y="259.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.8" y="270.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1166.8" y="243.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.8" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1166.8" y="227.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.8" y="238.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1166.8" y="211.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.8" y="222.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1166.8" y="195.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.8" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.08%)</title><rect x="1166.8" y="179.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.8" y="190.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.08%)</title><rect x="1166.8" y="163.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.08%)</title><rect x="1167.7" y="419.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.7" y="430.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.08%)</title><rect x="1167.7" y="403.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.7" y="414.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.08%)</title><rect x="1167.7" y="387.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.7" y="398.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*) (1 samples, 0.08%)</title><rect x="1167.7" y="371.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.7" y="382.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.08%)</title><rect x="1167.7" y="355.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.7" y="366.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.08%)</title><rect x="1167.7" y="339.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.7" y="350.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="787.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.6" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="771.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.6" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="755.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="739.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="723.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="707.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1168.6" y="691.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.6" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="675.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.6" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="659.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="643.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="627.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="611.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1168.6" y="595.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.6" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="579.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.6" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="563.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="547.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="531.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="515.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1168.6" y="499.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.6" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="483.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.6" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="467.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="451.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="435.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="419.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1168.6" y="403.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.6" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="387.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.6" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="371.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="355.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="339.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="323.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1168.6" y="307.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.6" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="291.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.6" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="275.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="259.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="243.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="227.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.6" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1168.6" y="211.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.6" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.6" y="195.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.6" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1168.6" y="179.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.6" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="163.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.6" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1168.6" y="147.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.6" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1168.6" y="131.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.6" y="142.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.08%)</title><rect x="1168.6" y="115.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.6" y="126.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.08%)</title><rect x="1168.6" y="99.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.6" y="110.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.08%)</title><rect x="1168.6" y="83.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.6" y="94.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.08%)</title><rect x="1168.6" y="67.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.6" y="78.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.08%)</title><rect x="1168.6" y="51.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.6" y="62.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.08%)</title><rect x="1168.6" y="35.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.6" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.16%)</title><rect x="1169.6" y="803.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.08%)</title><rect x="1169.6" y="787.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.6" y="798.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1169.6" y="771.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.6" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.08%)</title><rect x="1169.6" y="755.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.6" y="766.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1169.6" y="739.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.6" y="750.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1169.6" y="723.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.08%)</title><rect x="1170.5" y="787.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.5" y="798.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.08%)</title><rect x="1170.5" y="771.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.5" y="782.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1170.5" y="755.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.5" y="766.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1170.5" y="739.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.5" y="750.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1170.5" y="723.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.5" y="734.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.08%)</title><rect x="1170.5" y="707.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.5" y="718.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1170.5" y="691.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.5" y="702.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1170.5" y="675.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.5" y="686.0"></text>
</g>
<g>
<title>InitializeNode::capture_store(StoreNode*, long, PhaseTransform*, bool) (1 samples, 0.08%)</title><rect x="1170.5" y="659.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.08%)</title><rect x="1171.4" y="851.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1171.4" y="835.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.08%)</title><rect x="1171.4" y="819.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.4" y="830.0"></text>
</g>
<g>
<title>Type::filter_helper(Type const*, bool) const (1 samples, 0.08%)</title><rect x="1171.4" y="803.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.4" y="814.0"></text>
</g>
<g>
<title>Type::empty() const (1 samples, 0.08%)</title><rect x="1171.4" y="787.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.4" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.3" y="883.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.3" y="867.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.3" y="851.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.3" y="835.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.3" y="819.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.3" y="803.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.3" y="787.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.3" y="771.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.3" y="755.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.3" y="739.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.3" y="723.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.3" y="707.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.3" y="691.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.3" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.3" y="675.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.3" y="659.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.3" y="643.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1172.3" y="627.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1172.3" y="611.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1172.3" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.3" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1172.3" y="579.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1172.3" y="563.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1172.3" y="547.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1172.3" y="531.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1172.3" y="515.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1172.3" y="499.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1172.3" y="483.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1172.3" y="467.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.3" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1172.3" y="451.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1172.3" y="435.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1172.3" y="419.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1172.3" y="403.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1172.3" y="387.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1172.3" y="371.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.3" y="382.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1172.3" y="355.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.3" y="366.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1172.3" y="339.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="350.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1172.3" y="323.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="334.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1172.3" y="307.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1172.3" y="291.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.3" y="302.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1172.3" y="275.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="286.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1172.3" y="259.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.3" y="270.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1172.3" y="243.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1172.3" y="227.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.3" y="238.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.08%)</title><rect x="1172.3" y="211.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.3" y="222.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1172.3" y="195.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.3" y="206.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1172.3" y="179.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="190.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1172.3" y="163.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="174.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.08%)</title><rect x="1172.3" y="147.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.3" y="158.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.08%)</title><rect x="1172.3" y="131.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="142.0"></text>
</g>
<g>
<title>Parse::ensure_phis_everywhere() (1 samples, 0.08%)</title><rect x="1173.3" y="627.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.3" y="638.0"></text>
</g>
<g>
<title>Parse::ensure_phis_everywhere() (1 samples, 0.08%)</title><rect x="1174.2" y="931.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.2" y="942.0"></text>
</g>
<g>
<title>Parse::ensure_phi(int, bool) (1 samples, 0.08%)</title><rect x="1174.2" y="915.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.2" y="926.0"></text>
</g>
<g>
<title>Parse::Block::local_type_at(int) const (1 samples, 0.08%)</title><rect x="1174.2" y="899.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.2" y="910.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1174.2" y="883.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.2" y="894.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1174.2" y="867.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.2" y="878.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1174.2" y="851.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.2" y="862.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.08%)</title><rect x="1175.1" y="979.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.1" y="990.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.08%)</title><rect x="1175.1" y="963.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.1" y="974.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.08%)</title><rect x="1176.1" y="979.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.1" y="990.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.08%)</title><rect x="1176.1" y="963.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.1" y="974.0"></text>
</g>
<g>
<title>BranchData::cell_count() const (1 samples, 0.08%)</title><rect x="1176.1" y="947.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.1" y="958.0"></text>
</g>
<g>
<title>[tid=31439] (8 samples, 0.63%)</title><rect x="1177.0" y="1139.0" width="7.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1180.0" y="1150.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.08%)</title><rect x="1177.0" y="1123.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1180.0" y="1134.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.55%)</title><rect x="1177.9" y="1123.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1180.9" y="1134.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.55%)</title><rect x="1177.9" y="1107.0" width="6.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1180.9" y="1118.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.55%)</title><rect x="1177.9" y="1091.0" width="6.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.9" y="1102.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 0.55%)</title><rect x="1177.9" y="1075.0" width="6.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.9" y="1086.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 0.55%)</title><rect x="1177.9" y="1059.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.9" y="1070.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (7 samples, 0.55%)</title><rect x="1177.9" y="1043.0" width="6.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.9" y="1054.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (7 samples, 0.55%)</title><rect x="1177.9" y="1027.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.9" y="1038.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (7 samples, 0.55%)</title><rect x="1177.9" y="1011.0" width="6.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.9" y="1022.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (7 samples, 0.55%)</title><rect x="1177.9" y="995.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.9" y="1006.0"></text>
</g>
<g>
<title>Compilation::compile_method() (7 samples, 0.55%)</title><rect x="1177.9" y="979.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.9" y="990.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (6 samples, 0.47%)</title><rect x="1177.9" y="963.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.9" y="974.0"></text>
</g>
<g>
<title>Compilation::build_hir() (4 samples, 0.31%)</title><rect x="1177.9" y="947.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.9" y="958.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (4 samples, 0.31%)</title><rect x="1177.9" y="931.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.9" y="942.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (4 samples, 0.31%)</title><rect x="1177.9" y="915.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.9" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (4 samples, 0.31%)</title><rect x="1177.9" y="899.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.9" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.31%)</title><rect x="1177.9" y="883.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.9" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.31%)</title><rect x="1177.9" y="867.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.9" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.31%)</title><rect x="1177.9" y="851.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.9" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.31%)</title><rect x="1177.9" y="835.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.9" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.31%)</title><rect x="1177.9" y="819.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.16%)</title><rect x="1177.9" y="803.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.9" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.16%)</title><rect x="1177.9" y="787.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.9" y="798.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.08%)</title><rect x="1177.9" y="771.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.9" y="782.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.08%)</title><rect x="1177.9" y="755.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.9" y="766.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.08%)</title><rect x="1177.9" y="739.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.9" y="750.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.08%)</title><rect x="1177.9" y="723.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.9" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1178.9" y="771.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1178.9" y="755.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.08%)</title><rect x="1178.9" y="739.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.9" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1178.9" y="723.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.9" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1178.9" y="707.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1178.9" y="691.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.9" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1178.9" y="675.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1178.9" y="659.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.9" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1178.9" y="643.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.9" y="654.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1178.9" y="627.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.9" y="638.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.08%)</title><rect x="1178.9" y="611.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.9" y="622.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.08%)</title><rect x="1178.9" y="595.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.9" y="606.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.08%)</title><rect x="1178.9" y="579.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="590.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.08%)</title><rect x="1178.9" y="563.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.9" y="574.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.08%)</title><rect x="1178.9" y="547.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.9" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.08%)</title><rect x="1178.9" y="531.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.9" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.08%)</title><rect x="1178.9" y="515.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.16%)</title><rect x="1179.8" y="803.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (1 samples, 0.08%)</title><rect x="1180.7" y="787.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.7" y="798.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.16%)</title><rect x="1181.6" y="947.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="958.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.16%)</title><rect x="1181.6" y="931.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.6" y="942.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.08%)</title><rect x="1181.6" y="915.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="926.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.08%)</title><rect x="1181.6" y="899.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.6" y="910.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.08%)</title><rect x="1181.6" y="883.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.08%)</title><rect x="1181.6" y="867.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>LinearScanWalker::split_and_spill_intersecting_intervals(int, int) (1 samples, 0.08%)</title><rect x="1181.6" y="851.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>LinearScanWalker::split_and_spill_interval(Interval*) (1 samples, 0.08%)</title><rect x="1181.6" y="835.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.6" y="846.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 0.08%)</title><rect x="1181.6" y="819.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.6" y="830.0"></text>
</g>
<g>
<title>LinearScanWalker::find_optimal_split_pos(Interval*, int, int, bool) (1 samples, 0.08%)</title><rect x="1181.6" y="803.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="814.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_before_allocation() (1 samples, 0.08%)</title><rect x="1182.6" y="915.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.6" y="926.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.08%)</title><rect x="1183.5" y="963.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.5" y="974.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.08%)</title><rect x="1183.5" y="947.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.5" y="958.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.08%)</title><rect x="1183.5" y="931.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.5" y="942.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.08%)</title><rect x="1183.5" y="915.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.5" y="926.0"></text>
</g>
<g>
<title>[tid=31441] (1 samples, 0.08%)</title><rect x="1184.4" y="1139.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1187.4" y="1150.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.08%)</title><rect x="1184.4" y="1123.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1187.4" y="1134.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.08%)</title><rect x="1184.4" y="1107.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1187.4" y="1118.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.08%)</title><rect x="1184.4" y="1091.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="1102.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.08%)</title><rect x="1184.4" y="1075.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.4" y="1086.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.08%)</title><rect x="1184.4" y="1059.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="1070.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.08%)</title><rect x="1184.4" y="1043.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.4" y="1054.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.08%)</title><rect x="1184.4" y="1027.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.4" y="1038.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.08%)</title><rect x="1184.4" y="1011.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.4" y="1022.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.08%)</title><rect x="1184.4" y="995.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1187.4" y="1006.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 0.08%)</title><rect x="1184.4" y="979.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.4" y="990.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.08%)</title><rect x="1184.4" y="963.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.4" y="974.0"></text>
</g>
<g>
<title>[tid=31442] (5 samples, 0.39%)</title><rect x="1185.4" y="1139.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1188.4" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.08%)</title><rect x="1185.4" y="1123.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1188.4" y="1134.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.31%)</title><rect x="1186.3" y="1123.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.3" y="1134.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.31%)</title><rect x="1186.3" y="1107.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.3" y="1118.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.31%)</title><rect x="1186.3" y="1091.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="1102.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.31%)</title><rect x="1186.3" y="1075.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="1086.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.16%)</title><rect x="1186.3" y="1059.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.3" y="1070.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.08%)</title><rect x="1186.3" y="1043.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="1054.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.08%)</title><rect x="1187.2" y="1043.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.2" y="1054.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.08%)</title><rect x="1187.2" y="1027.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.2" y="1038.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.16%)</title><rect x="1188.1" y="1059.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="1070.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.16%)</title><rect x="1188.1" y="1043.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.1" y="1054.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.08%)</title><rect x="1188.1" y="1027.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.08%)</title><rect x="1188.1" y="1011.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1191.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1188.1" y="995.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1191.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1188.1" y="979.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1191.1" y="990.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.08%)</title><rect x="1189.1" y="1027.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="1038.0"></text>
</g>
</g>
</svg>
